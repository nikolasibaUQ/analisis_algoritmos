@INPROCEEDINGS{4958823,
  author={Zhang, Xiaofeng and Zou, Hailin},
  booktitle={2009 First International Workshop on Education Technology and Computer Science}, 
  title={On Computational Tools, Computational Thinking and Computational Methods}, 
  year={2009},
  volume={1},
  number={},
  pages={503-507},
  abstract={The appearance and innovation of computational tools depends on human thinking and initiative, and on the other hand, human thinking is affected by computational tools. The strong function of computational tools in some aspect is superior to that of human brains. It is the application of such strong function that changes the face of human society. At the same time, it presents new methods for scientific research and new perspective for solving problems, promotes human thinking to a higher level, and presents new means for people to understand and change the world. The advantage of computational tools over human brains is the speed, while the initiative ability of human brains is not owned by computational tools. Perfect combination of thinking and computing gives birth to a series of achievements, and lays the foundation of science.},
  keywords={Humans;Computer science;Biology computing;Computer science education;Educational technology;Technological innovation;History;Evolution (biology);Computational intelligence;Face;computational tools;computational thinking;computational methods},
  doi={10.1109/ETCS.2009.120},
  ISSN={},
  month={March},}@INPROCEEDINGS{9526726,
  author={Xue, Chen and Zhun, Wang},
  booktitle={2020 13th International Conference on Intelligent Computation Technology and Automation (ICICTA)}, 
  title={The Teaching Mode and Practice Analysis of College Computer Basic Course Based on Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={266-269},
  abstract={This paper mainly adopts the theory with practice, combines the computational thinking method with education and teaching, and constructs the inquiry teaching model based on computational thinking. We adopt the formal teaching model and learning model, incremental expression of computational thinking ability to improve the effect, from the computational thinking of automation, abstract characteristics of the teaching and learning model based on computational thinking formalization. Then, in the case study, the learning support technology scheme of MOOC course platform combining mobile terminal and HTML5 is designed. Through teaching practice and quantitative analysis of experimental behavior, the platform effectively avoids the interference of programming language code, which simplifies the expression and application process of algorithm thinking, and enhances students' interest and operation of programming working ability.},
  keywords={Computer languages;Computer aided instruction;Automation;Electronic learning;Codes;Statistical analysis;Computational modeling;computational thinking;practice analysis;computer basic teaching;HTML;MOOC},
  doi={10.1109/ICICTA51737.2020.00063},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{5673139,
  author={McMaster, Kirby and Rague, Brian and Anderson, Nicole},
  booktitle={2010 IEEE Frontiers in Education Conference (FIE)}, 
  title={Integrating Mathematical Thinking, Abstract Thinking, and Computational Thinking}, 
  year={2010},
  volume={},
  number={},
  pages={S3G-1-S3G-6},
  abstract={In recent years, several groups of Computer Science educators have made a sustained effort to capture the essence of CS apart from programming. Three of these approaches are Mathematical Thinking, Abstract Thinking, and Computational Thinking. Each approach tries to clarify areas of CS that are not directly tied to writing computer programs. In a separate line of research, the current authors have been examining different ways to teach mathematics to CS students. We developed a Computational Math scale that measures the level of problem-solving gestalt exhibited by textbook authors. In this study, we relate our Computational Math framework to current research on Mathematical, Abstract, and Computational (MAC) Thinking. We counted words used frequently in research articles and compared them to words that form the Computational Math scale. Our results suggest an overall MAC Thinking framework that integrates a wide range of topics relevant to computing and programming.},
  keywords={Computers;Computational modeling;Programming profession;Books;Mathematical model;Abstraction;Algorithm;Computational Math;Model;Thinking},
  doi={10.1109/FIE.2010.5673139},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10663178,
  author={Saenboonsong, Siripon and Poonsawad, Akarapon},
  booktitle={2024 9th International STEM Education Conference (iSTEM-Ed)}, 
  title={Promoting Computational Thinking Skills Through Game-Based Learning of Students in Lower Secondary School}, 
  year={2024},
  volume={},
  number={},
  pages={1-4},
  abstract={This study's objectives were to: 1) compare computational thinking skills before and after game-based learning activities; and 2) study students' satisfaction after game-based learning. The research methodology uses the ADDIE model by driving game-based learning activities and promoting students with computational thinking skills, including decomposition, pattern recognition, abstraction, and algorithm design. The statistical methods used to analyze the data were mean, standard deviation, and t-test. The study's findings revealed that 1) the students' computational thinking skills improved significantly after engaging in game-based learning activities, demonstrating statistical significance at the.05 level, and 2) the overall students' satisfaction after activities with game-based learning was averaged at the highest level (= 4.75, S.D. = 0.52).},
  keywords={Statistical analysis;Computational modeling;Education;Pattern recognition;Standards;computational thinking skills;game-based learning;learning activity},
  doi={10.1109/iSTEM-Ed62750.2024.10663178},
  ISSN={},
  month={July},}@INPROCEEDINGS{9990631,
  author={Handayani, Rif’Ati Dina and Lesmono, Albertus Djoko and Prastowo, Srihandono Budi and Supriadi, Bambang and Dewi, Nila Mutia},
  booktitle={2022 8th International Conference on Education and Technology (ICET)}, 
  title={Bringing Computational Thinking Skills Into Physics Classroom Through Project-Based Learning}, 
  year={2022},
  volume={},
  number={},
  pages={76-80},
  abstract={Computational thinking is a fundamental thinking skill for students in the 21st-century learning era. This study aims to integrate computational thinking skills in physics through project-based learning. Data were gathered through observation, interviews, and portfolio documents. The results indicated three main categories of computational thinking: decomposition, abstraction, and simulation. The implementation of project-based learning can develop students’ computational thinking skills. Students are trained to solve physics problems analytically and precisely in structured and logical thinking through a project. This research is expected to be the information for physics teachers to integrate computational thinking in the classroom as a 21st-century learning skill.},
  keywords={Computational modeling;Education;Problem-solving;Interviews;Physics;Portfolios;computational thinking;physics classroom;project-based learning},
  doi={10.1109/ICET56879.2022.9990631},
  ISSN={2770-4807},
  month={Oct},}@INPROCEEDINGS{10505497,
  author={Wang, Yiwei and Xu, Liancheng},
  booktitle={2023 13th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Hot Spots and Trends of Computational Thinking Research in China CiteSpace visualization and analysis based on CNKI data}, 
  year={2023},
  volume={},
  number={},
  pages={161-165},
  abstract={With the rapid development of computer technology, computational thinking, as one of the core literacy elements of information technology majors, has been widely noticed, and at the same time, it has gradually become one of the core competencies cultivated by education and teaching. This paper uses CiteSpace to visualize and analyze the Chinese core papers related to computational thinking included in CNKI. By studying the current situation of domestic research on computational thinking and related hot keywords, it aims to explore the prospects for the application of computational thinking in secondary education, try to incorporate the educational model of C elements in STEM education, and provide research ideas for the cultivation of computational thinking ability of secondary students.},
  keywords={Computer science;Computational modeling;Education;Data visualization;Organizations;Market research;Information age;computational thinking;information technology;STEM education;vocational secondary education;CiteSpace},
  doi={10.1109/ITME60234.2023.00042},
  ISSN={2474-3828},
  month={Nov},}@INPROCEEDINGS{8005431,
  author={Liao, Lihua and Liang, Jin},
  booktitle={2017 International Symposium on Educational Technology (ISET)}, 
  title={An Empirical Study on Blended Learning to Promote the Development of Computational Thinking Ability of College Students}, 
  year={2017},
  volume={},
  number={},
  pages={256-260},
  abstract={Studies have shown that learning approaches are able to promote the developments of computational thinking on students, including cooperative learning, project-based learning, online communication, Academic dialogue etc. Therefore, these learning approaches can combine with the traditional teaching in a more effective way. Blended learning may promote the developments of computational thinking on students. The paper takes the junior College students as the experimental objects, and carries a pretest-posttest study through unequal experimental and control groups. It approved that blended learning has a positive impact on the college student's computational thinking, i.e., they have an obvious progress.},
  keywords={Education;Programming profession;Information technology;Management information systems;Software;Blended learning;Computational thinking;Computational thinking trend;Skills of computational thinking},
  doi={10.1109/ISET.2017.64},
  ISSN={},
  month={June},}@INPROCEEDINGS{6883021,
  author={Koh, Kyu Han and Basawapatna, Ashok and Nickerson, Hilarie and Repenning, Alexander},
  booktitle={2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Real Time Assessment of Computational Thinking}, 
  year={2014},
  volume={},
  number={},
  pages={49-52},
  abstract={This paper suggests a Cyberlearning tool based on a highly innovative assessment methodology that helps teachers with computer science education. Currently, there is a strong push to integrate aspects of programming and coding into the classroom environment. However, few if any tools exist that enable real-time formative assessment of in-class programming tasks. The proposed REACT (Real Time Evaluation and Assessment of Computational Thinking) system is a first step toward allowing teachers to see which high-level concepts students have mastered and which ones they are struggling with as students code in real time. REACT supports and facilitates the teaching of 21st century computing skills such as computational thinking [1] in the classroom environment.},
  keywords={Real-time systems;Games;Programming profession;Pattern analysis;Educational institutions;Computer science education;Computational Thinking;Online Assessment;Real Time Assessment;Computational Thinking Pattern;Computational Thinking Pattern Analysis},
  doi={10.1109/VLHCC.2014.6883021},
  ISSN={1943-6106},
  month={July},}@INPROCEEDINGS{10496944,
  author={Zhou, Xuchen and Zhang, Wei and Wang, Shengming and Chen, Hao},
  booktitle={2023 5th International Workshop on Artificial Intelligence and Education (WAIE)}, 
  title={Construction and Application of a Computational Thinking Assessment Framework from the Perspective of the Iceberg Model}, 
  year={2023},
  volume={},
  number={},
  pages={96-100},
  abstract={Computational thinking assessment is an important part of testing the effectiveness of computational thinking cultivation. However, the existing computational thinking assessments still suffer from the problem of insufficient examination of non-cognitive factors, leading to the lack of validity of its assessment results. Since the iceberg model can comprehensively and deeply explore individual characteristics, this paper draws on the division idea of the model and divides computational thinking into explicit computational thinking the basic knowledge required to solve problems using computational thinking and implicit computational thinking the internal psychological characteristics of individuals in the process of using computational thinking. A comprehensive assessment framework of computational thinking is constructed, which contains five dimensions: knowledge and skills, self-efficacy, internet attitude, learning motivation, and thinking style. Finally, its application in the hierarchical teaching of computational thinking and suggestions for personalized teaching programs are given in order to promote the development of personalized education in computational thinking.},
  keywords={Computational modeling;Conferences;Education;Psychology;Icebergs;Artificial intelligence;Testing;computational thinking;computational thinking assessment;iceberg model;assessment framework;computational thinking education},
  doi={10.1109/WAIE60568.2023.00025},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{6685067,
  author={Miller, L. Dee and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Ramsay, Stephen and Hazley, Melissa Patterson},
  booktitle={2013 IEEE Frontiers in Education Conference (FIE)}, 
  title={Improving learning of computational thinking using creative thinking exercises in CS-1 computer science courses}, 
  year={2013},
  volume={},
  number={},
  pages={1426-1432},
  abstract={Promoting computational thinking is one of the top priorities in CS education as well as in other STEM and non-STEM disciplines. Our innovative NSF-funded IC2Think project blends computational thinking with creative thinking so that students leverage their creative thinking skills to “unlock” their understanding of computational thinking. In Fall 2012, we deployed creative exercises designed to engage Epstein's creative competencies (Surrounding, Capturing, Challenging and Broadening) in introductory level CS courses targeting four different groups (CS, engineering, combined CS/physical sciences, and humanities majors). Students combined hands-on problem solving with guided analysis and reflection to connect their creative activities to CS topics such as conditionals and arrays and to real-world CS applications. Evaluation results (approximately 150 students) found that creative thinking exercise completion had a linear “dosage” effect. As students completed more exercises [0/1 – 4], they increased their long-term retention [a computational thinking test], F(3, 98) = 4.76, p =.004, partial Eta2 = .127 and course grades, F(3, 109) = 4.32, p =.006, partial Eta2 = .106. These findings support our belief that the addition of creative thinking exercises to CSCE courses improves the learning of computational knowledge and skills.},
  keywords={Ciphers;Reflection;Writing;Computer science;Data collection;Debugging;Educational institutions;CS1;Creative Thinking;Computational Thinking;College;Computer Science},
  doi={10.1109/FIE.2013.6685067},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9973092,
  author={Liu, Junjie and Xia, Xiaojun and Bai, Yi and Liu, Pingyao},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={A Study of Micro:bit Teaching Design Based on the Development of Computational Thinking of Secondary School Students}, 
  year={2022},
  volume={},
  number={},
  pages={198-201},
  abstract={With the rapid development of human society and technology, it's necessary for contemporary students to have the ability to quickly adapt to social development. Meanwhile, traditional educational concepts have to be transformed in time, and a full understanding of computational thinking plays an important role in promoting students' life-long development. Based on in-depth analysis and research on computational thinking theory, this paper integrates micro: bit into teaching from the perspective of practical application. After analyzing the teaching objectives, teaching contents, and teaching process, this paper proposes an instructional design for the development of computational thinking for secondary school students.},
  keywords={Visualization;Technological innovation;Knowledge acquisition;Education;Focusing;Market research;Computational efficiency;computational thinking;micro:bit;instructional design},
  doi={10.1109/CSTE55932.2022.00043},
  ISSN={},
  month={May},}@INPROCEEDINGS{10159750,
  author={Vlahović, Ines and Biškupić, Ivana Ogrizek},
  booktitle={2023 46th MIPRO ICT and Electronics Convention (MIPRO)}, 
  title={Fostering Critical and Computational Thinking in the Field of Primary and Secondary Education in non-STEM Subjects by Using Data Sets and Applications}, 
  year={2023},
  volume={},
  number={},
  pages={672-677},
  abstract={Critical and computational thinking in primary and secondary education in recent years shows growing importance in methodical approaches used in the classroom. Although many examples exist for using critical and computational thinking in STEM educational area, the social sciences i.e., non-STEM areas were somehow left out due to the relatively more difficult design of such content, especially in the part of the development of computational thinking. In that context, in this paper we present one way of using critical and computational thinking in non-STEM education, more specifically on the example of historical data sources, through the use of programming in Python. As an example, we use historical data for Trans-Atlantic Slave Trade routes, that were the largest long-distance coerced movement of people in history up to the mid-nineteenth century, for connecting concepts of databases, Data Science and programming for development of critical and computational thinking in context of history science. This way of using modern approaches in classroom should give teachers and pupils a broader picture of importance of interdisciplinary education for critical and computational thinking development through STEM and non-STEM classes that give pupils novel skills needed for future labor market.},
  keywords={Correlation;Soft sensors;Education;Social sciences;Data science;History;Pupils;Critical Thinking;Computational Thinking;STEM;non-STEM;Data Science;programming;Python;history;Trans-Atlantic Slave Trade routes},
  doi={10.23919/MIPRO57284.2023.10159750},
  ISSN={2623-8764},
  month={May},}@INPROCEEDINGS{6268116,
  author={Ahmadi, Navid and Jazayeri, Mehdi and Landoni, Monica},
  booktitle={2012 IEEE 12th International Conference on Advanced Learning Technologies}, 
  title={Helping Novice Programmers to Bootstrap in the Cloud: Incorporating Support for Computational Thinking into the Game Design Process}, 
  year={2012},
  volume={},
  number={},
  pages={349-353},
  abstract={Game design environments are traditionally used as means for engaging non-programmers in the learning process. However, these environments lack specific support for teaching computational thinking to novices. Typically, such skills are acquired in ad hoc practical sessions with supervision provided by teachers or peers. The usual scenario is where a teacher guides the students in solving these problems during a game design session. In informal learning settings, step-by-step tutorials for creating existing games are used to compensate for the lack of computer support for solving design and computational problems. In this paper we suggest a game design process that combines support for computational thinking with tool usage, by identifying the most common computational thinking problems and providing a generic solution to them. We have evaluated our solution in the context of AgentWeb, an online cloud-based game design environment for novices. We discuss how to incorporate suggested computational thinking solutions as computer assistant into the game design user interface.},
  keywords={Games;Programming;Educational institutions;Computers;Context;Tutorials;end-user programming;computational thinking;design thinking;game design environments;informal learning;cognitive walkthrough;cloud-based environments},
  doi={10.1109/ICALT.2012.24},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{9645630,
  author={Chen, Bing-Hong and Chen, Ling-Hsiu and Chen, Chih-Cheng and Chen, Chih-Hung},
  booktitle={2021 IEEE 3rd Eurasia Conference on IOT, Communication and Engineering (ECICE)}, 
  title={Influence of Programming Robot Learning Mode Based on Conceptual Mapping on College Students' Computational Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={617-620},
  abstract={As the information age has progressed, computational thinking ability to solve problems has become an indispensable way of life in life. Many scholars believe that the process of solving problems will be more logical if they have computational thinking ability. At the same time, scholars believe that a good learning method improves learners' intrinsic motivation. Therefore, in this research, we try to use conceptual mapping so that students can construct knowledge when composing their own images, as the focus of this learning model and computational thinking is the thinking process and the two coincide. This research intends to introduce the traditional programming robot course into conceptual mapping and measure whether there are differences in computational thinking tendencies, problem-solving tendencies, and intrinsic motivations between students who use conceptual mapping and those who do not use it. The students in the experimental group with conceptual mapping activities developed computational thinking skills during the program robotics course. The students in the control group first watched the computational thinking explanation video to explain the computational thinking skills to the students, and then taught in the traditional programming robotics course.},
  keywords={Learning systems;Conferences;Computational modeling;Programming;Information age;Robot learning;Problem-solving;Concept mapping;computational thinking;programmed robot 10 pts;intrinsic motivation},
  doi={10.1109/ECICE52819.2021.9645630},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9071265,
  author={Swaid, Samar and Suid, Taima},
  booktitle={2019 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={Computational Thinking Education: Who Let the Dog Out?}, 
  year={2019},
  volume={},
  number={},
  pages={788-792},
  abstract={Today, Computational Thinking is seen as an important competency and the fourth skill that every child should process. Several significant attempts have been made to increase a student's exposure to Computational Thinking at the K-12 level, however the process is complex and requires systematic planning and comprehensive curriculum. In this paper, we describe the STEPP-UP program that aims to introduce middle schoolers to Computational Thinking via Scratch and Java coding sessions. A comprehensive curriculum and hands-on activities are applied to introduce Computational Thinking for a total of 41 students for a period of five semesters from Fall 2017 until Fall 2019. To assess the learning objectives, we used three methods of evaluation; design-scenarios, paper-assessments, and learner-documentation. Findings indicate that the students have increased knowledge of Computational Thinking and its applications for problem solving.},
  keywords={Java;Programming;Sprites (computer);Tools;Education;Dogs;Computed tomography;Computational Thinking, K -12, Problem Solving, Java, Scratch Linear Search, Coding Literacy},
  doi={10.1109/CSCI49370.2019.00150},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{6926430,
  author={Boqin Liu and Junmei He},
  booktitle={2014 9th International Conference on Computer Science & Education}, 
  title={Teaching mode reform and exploration on the University Computer Basic based on Computational thinking training in Network Environment}, 
  year={2014},
  volume={},
  number={},
  pages={59-62},
  abstract={Due to the international and domestic education and computer industries and so on computational thinking attaches great importance and has done considerable exploratory research, our school also reform and exploration teaching mode on the University Computer Basic based on Computational thinking training in network environment, and the use of based on Computational thinking Autonomous learning mode in the Network Environment in the actual teaching, strengthen the learners understanding of computer science, corrected the computing disciplines equivalent to the idea of computer programming, enhance the connotation and science significance of computer disciplines, to overcome the computer means “narrow tool” argument,and achieved good teaching results.},
  keywords={Educational institutions;Microcomputers;Computational modeling;Indexes;HTML;Computational thinking;The Network teaching auxiliary platform;Autonomous learning mode},
  doi={10.1109/ICCSE.2014.6926430},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{8964889,
  author={Yu, Fengping and Wang, Hong},
  booktitle={2019 10th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Computational Thinking & Practical Thinking Inspired Java Web Curriculum Reform Method}, 
  year={2019},
  volume={},
  number={},
  pages={312-316},
  abstract={Both Computational thinking and Practical thinking are important concepts of great concern to the international computer community. They are also hot topics needed to be studied in education. Inspired by these two kinds of thinking, we expound how to better carry out teaching practice. The teaching process is task-oriented, teacher-led and student-centered. In the whole teaching process, teachers use the way of integrating computational thinking with practical thinking to prepare courses, design tasks and guide students to complete learning tasks. Compared with the traditional teaching mode, the teaching mode of integrating computational thinking and practical thinking has made great progress in training students' computer practical ability and innovation ability. It can not only improve learning efficiency, but also train students' computer practical ability. Finally, the feasibility and efficiency of this method are verified by Java Web course design.},
  keywords={Java;Task analysis;Programming;Software;Training;Information technology;Computational Thinking;Practical Thinking;Java Web},
  doi={10.1109/ITME.2019.00078},
  ISSN={2474-3828},
  month={Aug},}@INPROCEEDINGS{7739688,
  author={Repenning, Alexander and Basawapatna, Ashok and Escherle, Nora},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Computational thinking tools}, 
  year={2016},
  volume={},
  number={},
  pages={218-222},
  abstract={Computational Thinking is an essential skill for all students in the 21st Century. A fundamental question is how can we create computer affordances to empower novice teachers and students, in a variety of STEM and art disciplines, to think computationally while avoiding difficult overhead emerging from traditional coding? Over the last 20 years we have iteratively developed tools that aim to support computational thinking. As these tools evolved a philosophy emerged to support Computational Thinking by joining human abilities with computer affordances. Chief among these findings is that supporting Computational Thinking is much more than making coding accessible. Computational Thinking Tools aim to minimize coding overhead by supporting users through three fundamental stages of the Computational Thinking development cycle: problem formulation, solution expression, and solution execution/evaluation.},
  keywords={computational thinking tools;end-user programming;K-12 education;computational thinking},
  doi={10.1109/VLHCC.2016.7739688},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{10664997,
  author={Dehbozorgi, Nasrin and Roopaei, Mehdi},
  booktitle={2024 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Improving Computational Thinking Competencies in STEM Higher Education}, 
  year={2024},
  volume={},
  number={},
  pages={01-04},
  abstract={Computational thinking (CT) is a key competency with a significant impact on students' academic performance in STEM fields. It empowers students to enhance problem-solving skills by decomposing problems, utilizing abstraction and pattern recognition, and employing algorithmic thinking to design solutions and build models. This is particularly important in STEM disciplines where logical reasoning is essential for addressing complex real-world challenges in academic and industrial settings. Given the increasing demand for professionals equipped with strong algorithmic thinking and problem-solving abilities in Industry 5, educational institutions are focusing on enhancing students' CT and problem-solving skills. This study presents an initiative conducted over the past two years at our institute to teach CT in a gateway course to students with different backgrounds in STEM fields. The approach involved designing specific learning modules on Abstraction, Decomposition, Pattern Recognition, and Algorithmic Thinking and integrating them into the LMS. After studying these learning modules, the students were exposed to specific assignments that required the application of related CT skills. Pre and post surveys were employed by using standard CT tests to measure the impact of the intervention on students' CT levels. The results indicated an improvement in students' perceptions of their mastery of CT. Academic course grades also showed an improvement, with increased A scores and reduced F grades post-intervention. This two-year study on improving CT skills has yielded promising results. Moving forward, the research aims to enhance the existing modules further and distribute them to a broader range of introductory-level STEM courses in other universities. This future direction aligns with the goal of expanding the impact of CT education and integrating it more widely into STEM curricula.},
  keywords={Surveys;Industries;Computational modeling;Focusing;Logic gates;Cognition;Pattern recognition;Computational Thinking;Higher Education;Integrated STEM Education;Student Performance},
  doi={10.1109/ISEC61299.2024.10664997},
  ISSN={2473-7623},
  month={March},}@INPROCEEDINGS{10027412,
  author={Zhao, Miaomiao and Hu, Weixing},
  booktitle={2022 3rd International Conference on Education, Knowledge and Information Management (ICEKIM)}, 
  title={A practical research on the training of middle school students' computational thinking based on problem solving in systematic information process view}, 
  year={2022},
  volume={},
  number={},
  pages={1037-1040},
  abstract={Computational thinking is the process sequence of solving problems and behaves a method of systematic solving problems. Computational thinking is essentially a view of systematic information processing process. In essence, developing the computational thinking of middle school students is to improve their problem-solving ability and the corresponding practical accomplishment. The instructional activity design based on six links of problem solving can well meet the need of cultivating students’ computational thinking. The instructional mode of systematic problem solving in middle school can improve students’ learning effects and satisfaction, and promote students’ computational thinking ability significantly. The method of systematic information processing process can be trained.},
  keywords={Training;Analytical models;Systematics;Computational modeling;Information processing;Information management;Problem-solving;component;Computation;Computational thinking;Middle school information technology class},
  doi={10.1109/ICEKIM55072.2022.00225},
  ISSN={},
  month={Jan},}@INPROCEEDINGS{9066359,
  author={Nakamura, Takayasu and Kawasaki, Tetsushi},
  booktitle={2019 International Joint Conference on Information, Media and Engineering (IJCIME)}, 
  title={Computer Science Unplugged for Developing Computational Thinking and Mathematical Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={305-308},
  abstract={The purpose of this study is to make learning material that can develop both Computational thinking and Mathematical thinking. This study suggest a hamburger flowchart as a teaching material that combines the three elements of "unplugged", "thinking from the end " and "mathematics class". Using this flowchart, basic experiment was conducted for 8 to 12 years old. The purpose of this experiment is to confirm whether it is possible for children to develop both Computational thinking and Mathematical thinking by using the hamburger flowchart. We evaluated both Computational thinking and Mathematical thinking from the state in this class and the content of the worksheet and prior and subsequent tests. As a result, the state related to Computational thinking and Mathematical thinking increased, and the correct answer rate of many children increased from the prior test to the subsequent test. Therefore it turned out that the hamburger flowchart affects mathematical thinking.},
  keywords={Flowcharts;Programming profession;Tools;Education;Sugar;Toxicology;21st-century-skills;Computational-thinking;Mathematical-thinking;thinking-from-the-end},
  doi={10.1109/IJCIME49369.2019.00108},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{5228288,
  author={Deng, Zhenrong and Huang, Wenming and Dong, Rongsheng and Wen, Peizhi},
  booktitle={2009 4th International Conference on Computer Science & Education}, 
  title={Exploration of ability development of engineering and computational thinking skills in software engineering majors}, 
  year={2009},
  volume={},
  number={},
  pages={1665-1668},
  abstract={Software talents should have the engineering ability, a common sense in IT industry, which is characterized by the fact that design plays a very important role in software engineering. Basis on the enhancement of computational thinking, the reform ideas of the development of the student's engineering ability are introduced. The detailed approaches include: 1) Extraction of fundamental discipline concept of engineering ability development; 2) Problem solving-centered organization of courses of software development tools; 3) Initiate the courses of software engineering as soon as possible; 4) Continual training of abstract logical thinking for the purpose of software abstract thinking.},
  keywords={Software engineering;Software systems;Design engineering;Programming;Computer science;Computer science education;Application software;Engineering management;Educational technology;Computer industry;software engineering;Computational thinking;design;abstract},
  doi={10.1109/ICCSE.2009.5228288},
  ISSN={},
  month={July},}@INPROCEEDINGS{9247066,
  author={Karakaş, Elif and Turhan Yöndem, Meltem},
  booktitle={2020 Turkish National Software Engineering Symposium (UYMS)}, 
  title={Performance-based evaluation of computational thinking skills using machine learning}, 
  year={2020},
  volume={},
  number={},
  pages={1-5},
  abstract={This thesis study is an evaluation tool that measures the user's Computational Thinking (CT) according to its performance on Block-Based Programming Languages (BBPL) by using Machine Learning Techniques. The evaluation tool makes an evaluation for Machine Learning Model and each of the Computational Thinking seven fields. Via this developed tool, the objective is to product an alternative to the limited evaluation tools on Block-Based Programming Languages. Literature research was brought out in two sides as Machine Learning and Block-Based Programming Languages. In the first stage, on Machine Learning, the data set and the methods used in educational field were researched. In the second stage, the devices which are used to measure the performance on Block- Based Programming Languages were analyzed. On literature, there are various sources for teaching Computational Thinking ,but it occurs that measuring instruments that evaluates Computational Thinking are inadequate. To evaluate Computational Thinking a machine learning model was trained. Trained model was turned into online evaluation tool by which both the tutors and the students evaluate Computational Thinking easily. In the final stage, the developed online evaluation tool and the outcome was analyzed.},
  keywords={Performance evaluation;Computer languages;Computational modeling;Machine learning;Tools;Programming profession;Software engineering;Machine Learning;Block-Based Programming Languages;Computational Thinking},
  doi={10.1109/UYMS50627.2020.9247066},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9766703,
  author={Ismail, Redar and Steinbach, Theresa A. and Miller, Craig S.},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={A Guide Towards a Definition of Computational Thinking in K-12}, 
  year={2022},
  volume={},
  number={},
  pages={801-810},
  abstract={Computational thinking (CT) has been described as a set of valuable skills for tackling complex problems. To foster CT among K-12 students, different initiatives have been introduced by governmental and non-governmental entities, and numerous studies have been carried out by researchers to define and integrate CT into school curriculum. However, previous studies has shown little agreement among researchers, governmental and non-governmental sectors about a unified CT definition. These dissensions have introduced challenges in formulating a definition for CT at the K-12 level. The absence of a unified definition may increase the challenges for teachers to teach and integrate CT into school curriculum. To foster CT among K-12 students, we introduce a definition and framework for CT. We evaluated 39 articles and extracted the most common elements used in the literature to frame CT definition and describe its elements. Several studies have discussed, as well as investigated, the significance of conceptualizing and comprehending the interaction and dependency relationships among computational objects. However, our literature review discovered that little attention has been dedicated to the concept of dependency in the CT body of knowledge. Based on the literature review, we define CT as the thought process used for solving problems, and it encompasses the elements of problem decomposition, abstraction, and algorithmic thinking. We conjecture the CT definition is missing the element of dependency. In the context of CT, we define dependency as the knowledge of comprehending the interrelationships between different sections of a decomposed problem.},
  keywords={Computer science;Bibliographies;Conferences;Computational modeling;Engineering education;Computational Thinking (CT);K-12 Education;Dependency;Abstraction;Decomposition;Algorithmic Thinking},
  doi={10.1109/EDUCON52537.2022.9766703},
  ISSN={2165-9567},
  month={March},}@INPROCEEDINGS{7739692,
  author={Turchi, Tommaso and Malizia, Alessio},
  booktitle={2016 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Fostering computational thinking skills with a tangible blocks programming environment}, 
  year={2016},
  volume={},
  number={},
  pages={232-233},
  abstract={Computational Thinking has recently returned into the limelight as an essential skill to have for both the general public and disciplines outside Computer Science. It encapsulates those thinking skills integral to solving complex problems using a computer, thus widely applicable in our technological society. Several public initiatives such as the Hour of Code successfully introduced it to millions of people of different ages and backgrounds, mostly using Blocks Programming Environments like Scratch that lower the barriers of programming and facilitate learning. In this paper we present our arguments for fostering Computational Thinking skills using a Blocks Programming Environment augmented with a Tangible User Interface, namely by exploiting objects whose interactions with the physical environment are mapped to digital actions performed on the system. Our demonstration includes a working prototype implementing our Tangible Blocks Programming Environment called TAPAS.},
  keywords={Programming environments;Visualization;Programming profession;Encoding;Concrete;Computational Thinking;Tangible User Interface;End-User Programming},
  doi={10.1109/VLHCC.2016.7739692},
  ISSN={1943-6106},
  month={Sep.},}
