@INPROCEEDINGS{9361128,
  author={Dong, Xueyan and Jia, Jingpeng},
  booktitle={2020 International Conference on Artificial Intelligence and Computer Engineering (ICAICE)}, 
  title={Teaching Reform of Software Engineering Course Based on Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={399-402},
  abstract={For students majored in computer science, the ability to have computational thinking is an essential skill. Facilitating computational thinking cannot only help students understand the professional knowledge and principles of computer, but also bring new ideas to addressing complex problems, therefore, many colleges and universities have carried out computer professional curriculum reform based on computational thinking. Due to the high degree of abstraction of computational thinking, traditional teaching methods will cause students to understand computational thinking only at the conceptual level, and cannot realize the flexible use of computational thinking concepts. This study takes the software engineering course as an example to explain how to integrate the concepts of computational thinking into the original courses. The goal is to enable students to understand software engineering contents problems from the perspective of problem-solving.},
  keywords={Computer science;Software design;Education;Software;Problem-solving;Artificial intelligence;Software engineering;Computational Thinking;Problem Solving;Software Engineering;Teaching Reform},
  doi={10.1109/ICAICE51518.2020.00084},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{4281993,
  author={Wang, Peijin},
  booktitle={The Proceedings of the Multiconference on "Computational Engineering in Systems Applications"}, 
  title={Analysis and Implementation of Human Control Thinking Process}, 
  year={2006},
  volume={2},
  number={},
  pages={2146-2150},
  abstract={Human control thinking process maybe classified as two kinds which are active control thinking process and passive control thinking process. The control methods and strategy of each control thinking process are discussed in this paper, the storage and mining of control experiences are analyzed. The test results are given in this paper, it is proved that the research content is right and could be used in the process control. It provides the basis for Human-like intelligent control to be used in complex system},
  keywords={Humans;Process control;Control systems;Intelligent control;Artificial intelligence;Computational modeling;Computer simulation;Systems engineering and theory;Application software;Computer science;Computer Control;Intelligent Control;Human-like Intelligent Control;Human thinking},
  doi={10.1109/CESA.2006.4281993},
  ISSN={},
  month={Oct},}@ARTICLE{9741843,
  author={Rijo-García, Sara and Segredo, Eduardo and León, Coromoto},
  journal={IEEE Transactions on Education}, 
  title={Computational Thinking and User Interfaces: A Systematic Review}, 
  year={2022},
  volume={65},
  number={4},
  pages={647-656},
  abstract={Contribution: This document presents a systematic bibliographic review that demonstrates the need to conduct research on how the user experience impacts the development of computational thinking. Background: In the field of computer science, computational thinking is defined as a method that enhances problem-solving skills, system design, and human behavior understanding. Over the last few decades, several tools have been proposed for the development of computational thinking skills; however, there is no area of study that evaluates the implications or the impact that these types of platforms have on users belonging to any knowledge area. Research Question: Do user interfaces influence the development of computational thinking skills? Methodology: To address this issue, a systematic review of the literature was conducted using the preferred reporting items for systematic reviews and meta-analyses (PRISMA) methodology for analyzing and evaluating scientific publications. Findings: The results show that despite the dearth of literature on the subject, the specific design of a user interface has a significant impact on the development of computational thinking. Bearing the above in mind, it is necessary to conduct research that delves more deeply into the effects caused by the technologies that are used to develop computational thinking, this being a line of research that is worthy of consideration.},
  keywords={User interfaces;Systematics;User experience;Usability;Programming profession;Computational modeling;Libraries;Computational thinking;human–computer interaction;preferred reporting items for systematic reviews and meta-analyses (PRISMA);survey;systematic review;usability;user experience;user interface;visual programming},
  doi={10.1109/TE.2022.3159765},
  ISSN={1557-9638},
  month={Nov},}@INPROCEEDINGS{8450296,
  author={Chang, Zhong and Sun, Yan and Wu, Tin-Yu and Guizani, Mohsen},
  booktitle={2018 14th International Wireless Communications & Mobile Computing Conference (IWCMC)}, 
  title={Scratch Analysis Tool(SAT): A Modern Scratch Project Analysis Tool based on ANTLR to Assess Computational Thinking Skills}, 
  year={2018},
  volume={},
  number={},
  pages={950-955},
  abstract={With the introduction of computer programming in schools around the world, Scratch has risen in prominence for its thinkable, meaningful and social. Aiming to assessing the Computational Thinking skills of a Scratch program, we design and implement a new Scratch program analysis tool based on ANTLR. To solve some flaws (e.g., high failure rate and low efficiency) in Dr. Scratch which is the most relevant tool to assess Computational Thinking skills of Scratch programs, we choose the recognition tool ANTLR to design the system module and the assessing flow. And then, we customize more than 200 lexical and syntax parser rules in ANTLR. Furthermore, we expand the grading standard of assessing Computational Thinking skills in Dr. Scratch. Some fundamental concepts in Computer Science, such as stack, queue and recursion method, are involved in our grading standard. Experiment results show the performance (e.g., success rate, execution time) of SAT is superior to that of Dr. Scratch.},
  keywords={Tools;Syntactics;Standards;Visualization;Python;Grammar;Analysis Tool;Scratch;Computational Thinking;ANTLR},
  doi={10.1109/IWCMC.2018.8450296},
  ISSN={2376-6506},
  month={June},}@INPROCEEDINGS{8693259,
  author={Chookaew, Sasithorn and Howimanporn, Suppachai and Pratumsuwan, Pornjit and Hutamarn, Santi and Sootkaneung, Warin and Wongwatkit, Charoenchai},
  booktitle={2018 7th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Enhancing High-School Students' Computational Thinking with Educational Robotics Learning}, 
  year={2018},
  volume={},
  number={},
  pages={204-208},
  abstract={In recent years, engineering education has become one of the challenging issues in Thailand education. By teaching and learning subjects independently, students are limited to subject-oriented problems, which are not in reality. To address these flaws, integrating knowledge across disciplines becomes significantly necessary. In the past years, STEM has been accepted as one of the effective strategies to bridge the difference in nature of each field to construct more practical projects and innovations. Moreover, the educational robot can be employed as a learning tool in that strategy since it not only provides challenging learning missions but also promotes computational thinking for the students. Therefore, this research study proposed STEM learning activities on three-day workshop to lay out the foundation to the high-school science-and-technology students who are becoming the engineering students. The workshop comprises of eight phases to facilitate their learning inquiry process with hands-on experience; moreover, the activities were designed in consideration of promoting computational thinking with challenging learning missions. The findings of this study showed that the proposed workshop activities are beneficial for the students who outperformed on robotics with higher computational thinking; meanwhile, they could provide more relevant responses regarding the proposed learning activities.},
  keywords={Conferences;STEM;Programming profession;Robot sensing systems;STEM;computational thinking;educational robot;engineering education},
  doi={10.1109/IIAI-AAI.2018.00047},
  ISSN={},
  month={July},}@INPROCEEDINGS{8493952,
  author={Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={Alg-Design: Facilitates to Learn Algorithmic Thinking for Beginners}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={Algorithmic thinking is one of the main key concepts in computational thinking. With using computers in close to all areas of our lives, the progress of algorithmic solutions to problems is very crucial. The comprehension of the character of problems and their algorithmic solutions is enormously most important for everyone. Algorithmic thinking is the capability to realize, execute, assessment, and create computational procedures for solving problems. This paper presents Alg-Design, a visual and block based programming environment to facilitate novices to improve the comprehension of Algorithmic thinking using programming and computing. The visual programming environment motivates students and they find enjoyable while creating personally meaningful projects.},
  keywords={Programming profession;Visualization;Programming environments;Games;Sprites (computer);Chaos;Computational thinking;Algorithmic thinking;K-12 education;block based programming;21st century learning skills},
  doi={10.1109/ICCCNT.2018.8493952},
  ISSN={},
  month={July},}@INPROCEEDINGS{10342931,
  author={Adam, Kelli and Lightfoot, Robert and Chowdhury, Mahjabin and Phillip Donaldson, Jonan},
  booktitle={2023 IEEE Frontiers in Education Conference (FIE)}, 
  title={Cultivating Computational Thinking through Game-Based Learning}, 
  year={2023},
  volume={},
  number={},
  pages={1-4},
  abstract={Game-based learning (GBL) can motivate learners and enable them to engage in their learning experience. Additionally, the popularity of GBL has grown in computer science and programming courses, where it can be used to develop computational thinking (CT) skills. CT is critical thinking used to apply fundamental concepts and reasoning derived from computing and computer science. Research has shown that digital GBL can improve critical thinking skills and help learners understand programming concepts, structures, and problem-solving strategies. Despite the popularity of digital GBL, analog card games and bingo games are still valuable and effective tools for learning. However, most studies on GBL that aim to train critical thinking skills have focused on digital approaches. This indicates a gap in the body of knowledge because few studies have explored the effectiveness of analog games for developing CT skills through GBL. The theoretical framework of this study is grounded in two learning theories. Constructivist theory frames learning as the construction of knowledge through a process of action, reflection, and construction. Constructionist learning theory calls for construction of artifacts, learner agency, authentic purpose, or authentic audience during the process. To investigate the design of GBL for developing CT skills and to generate discourse for its widespread adoption, the current study implemented design-based research (DBR) in an undergraduate computer science course for non-computer science majors. By addressing the gap in the literature on GBL for CT skill development, the study aimed to investigate complex learner experiences, including learner struggles and successes, alignment with learning theory principles, and design moves for future iterations of the project. The research question posed is: how can we optimize CT learning through GBL, based on learner experiences and learning theories? Prior to this study, the instructor used GBL in which learners played an analog, three-dimensional tic-tac-toe game with ping pong balls and then wrote a computer program that simulated that game. We chose to conduct DBR to strengthen the learning associated with this activity. DBR uses iterative designs to develop knowledge that improves educational practices. In the spring of 2023, we assessed the extent to which the non-digital game and programming the simulated game enhanced learners' CT skills by analyzing their experiences with CT. This involved collecting and analyzing learner surveys to gain insight into their learning experiences. Using network analysis and betweenness centrality measures, the data will be analyzed to identify learner struggles and successes. The results are expected to be available by August 2023. The contributions of this study include identifying effective design principles for GBL, optimizing CT learning, and generating discourse for the widespread adoption of GBL in computer science education.},
  keywords={Surveys;Education;Digital simulation;Games;Solids;Reflection;Computer science education;game-based learning (GBL);design-based research (DBR);computational thinking;computer science;undergraduate;constructivist;constructionist;analog},
  doi={10.1109/FIE58773.2023.10342931},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10500041,
  author={Parsa, Faraz and Moghadam, Amir Ali Amiri and Ashuri, Turaj},
  booktitle={SoutheastCon 2024}, 
  title={Automated Feedback in Software Engineering: Enhancing Computational Thinking Process}, 
  year={2024},
  volume={},
  number={},
  pages={1621-1626},
  abstract={Computational thinking is the systematic approach of defining a problem and crafting its solution. It employs computer programming algorithms to address scientific, engineering, and mathematical challenges using programming languages. Feedback plays a pivotal role in the learning journey of computational thinking. It is widely recognized that offering timely feedback to students on their computational endeavors significantly contributes to their achievement and overall satisfaction with the course. This research explores the implementation of an automated feedback system designed to evaluate and offer early feedback on computer engineering projects. The aim is to integrate best practices and software tools related to computational thinking into the thinking and learning processes within an engineering curriculum. Preliminary findings suggest that the automated feedback system enhances students' computational skills and improves their performance in the course. We anticipate that the insights gained from this research will inform the enhancement of curricula and course evaluations across different computational thinking tasks, disciplines, and courses.},
  keywords={Computer languages;Systematics;Programming;Task analysis;Software tools;Best practices;Software engineering;Software Engineering;Computational Thinking;Automated Feedback System;Computer Programming},
  doi={10.1109/SoutheastCon52093.2024.10500041},
  ISSN={1558-058X},
  month={March},}@INPROCEEDINGS{8659268,
  author={Ehsan, Hoda and Ohland, Carson and Dandridge, Tikyna and Cardella, Monica},
  booktitle={2018 IEEE Frontiers in Education Conference (FIE)}, 
  title={Computing for the Critters: Exploring Computational Thinking of Children in an Informal Learning Setting}, 
  year={2018},
  volume={},
  number={},
  pages={1-5},
  abstract={This Work-in-Progress study focuses on computational thinking (CT) in children. Women, minorities, and persons with disabilities are currently underrepresented in STEM education and careers. However, providing appropriate early CT learning opportunities can potentially help learners develop both interest and self-efficacy in computer science and STEM fields.Our research aims to characterize computational thinking and engineering thinking for K-2 aged children. In this paper, we report on our findings of children exploring a recently installed exhibit at a local Midwestern science center. The exhibit was designed to help children learn about engineering careers and CT, and provides different learning activities to elicit CT in children from diverse learning groups. The exhibit provides information about different engineering disciplines/fields, and examples of engineers from diverse groups (i.e. it includes images of people of different races, ethnicities, gender, and ability).In this study, we audio- and video-recorded families while they explored the exhibit. They then participated in interviews and completed surveys. The video data provided evidence that children can engage in a range of CT competencies in the computer-supported coding game. Our findings can help us further consider how families can support children as they learn CT skills in out-of-school environments.},
  keywords={Encoding;Games;Computed tomography;Robots;Animals;STEM;Computational Thinking;Out-of-School;Engineering Education},
  doi={10.1109/FIE.2018.8659268},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9637310,
  author={Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={Professional Development in Computational Thinking for teachers in Colombia}, 
  year={2021},
  volume={},
  number={},
  pages={1-4},
  abstract={This Research to practice work in progress paper explores teachers' experiences about a professional development program focused on discipline-based computational thinking (CT). The goal of the program is to integrate computational practices into disciplinary learning environments at the K-12 level in Colombia. To promote this integration and to explore teachers' conceptions and possible scenarios to integrate CT in this context, the research team designed, implemented, and assessed a 20-hour professional development program with 21 teachers from public middle and high schools in Antioquia, Colombia. The program introduced the concepts and practices of CT and discussed why these are relevant for students to learn. A use-modify-create instructional sequence was used as the pedagogical approach to scaffold participants' learning process. At the end of the workshop, the teachers completed a survey regarding their experience in the program. Preliminary results indicate that the participating teachers increased their knowledge and interest to integrate computational thinking practices into their disciplinary learning environments.},
  keywords={Conferences;computational thinking;k-12;Professional Development;teachers},
  doi={10.1109/FIE49875.2021.9637310},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{7757408,
  author={Ying Li},
  booktitle={2016 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching programming based on Computational Thinking}, 
  year={2016},
  volume={},
  number={},
  pages={1-7},
  abstract={Computational Thinking was an important way to study computer science and it explained the relationships between human, calculation and computer in terms of thinking. The computer science was raised from the theory of tools to the height of thinking. This paper introduced three levels of Computational Thinking: Computational Thinking in computer science, Computational Thinking in computing science and Computational Thinking in all subjects and analyzed the thinking characteristic of calculation and the calculation attribute of thinking. Through Computational Thinking, human can solve problems by using computer more efficiently. Therefore, the cultivation of Computational Thinking's ability was particularly important in teaching. But Computational Thinking cannot be taught without carrier and the programing course was the best way for they were closely related with each other. The paper took the Maze Problem as an example to express the differences between human and computer in the aspects of storage structure, thinking mode, solving procedure, etc. and it compared the human brain's multi-dimension and multi-forms characteristics with the computer's ne-dimension and one-form characteristics. The paper thought the goal of teaching was not to learn knowledge itself, but to form problem solving thinking.},
  keywords={Computers;Education;Computational modeling;Algorithm design and analysis;Programming profession;Computational Thinking;Calculation;Human Brain;Programing},
  doi={10.1109/FIE.2016.7757408},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{6926576,
  author={Shuiyan He and Yongmin Hang and Yi Ding},
  booktitle={2014 9th International Conference on Computer Science & Education}, 
  title={Teaching method based on computational thinking a case research}, 
  year={2014},
  volume={},
  number={},
  pages={817-820},
  abstract={Computational thinking, also called structural thinking is characterized by design and construction. In view of the existing problems of traditional teaching methods in high vocational colleges, we propose a teaching method aimed at developing the computational thinking of students. This article analyses the courses of high vocational colleges and the characteristics of students firstly. Then we design the teaching activities based upon the principles and strategies of computational thinking. Finally we offer a real teaching case. The teaching evaluations from students indicate that the teaching method based on computational thinking is very effective.},
  keywords={Computers;Educational institutions;Laboratories;High vocational colleges;computational thinking;active directory},
  doi={10.1109/ICCSE.2014.6926576},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9973071,
  author={Yi, Xitian and Liu, Fanhua and Zhan, Zehui},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={A Digital Game-Based Model for Assessing Computational Thinking Skills}, 
  year={2022},
  volume={},
  number={},
  pages={226-230},
  abstract={Computational thinking (CT)., considered to be one of the three major scientific thinking styles of human beings., is a competency fundamental to computing education and beyond. However., as a cross-domain competency., appropriate assessment design and method remain equivocal. Indeed., the majority of the existing assessments have a predominant focus on using scales or test to measure programming proficiency and neglecting process evaluation in which CT can also be manifested. Game-based learning assessments (GBLA) are able to assess tacit knowledge by avoiding jargon in test items., constructing irrelevant material., and reducing anxiety., avoiding the barriers of traditional assessments in assessing students' abilities. To broaden the promotion and practice of CT., it is necessary to integrate diverse problem-solving contexts using a digital game-based assessment model to measure CT. We invited 13 experts to participate in three rounds of the Delphi method and constructed a CT skills assessment model based on the digital game. The model had good consistency and was divided into four primary indicators., namely “Analysis”., “Design”., “Iteration”., and “Generalization”., which were weighted as 0.26., 0.11., 0.24., and 0.39., respectively and 14 secondary indicators. Taken together., the study demonstrated the feasibility to expand from traditional assessment methods to integrating digital games in measuring CT skills in a comprehensive manner.},
  keywords={Adaptation models;Computational modeling;Education;Games;Predictive models;Particle measurements;Indexes;computational thinking skills;digital game;assessment model},
  doi={10.1109/CSTE55932.2022.00048},
  ISSN={},
  month={May},}@INPROCEEDINGS{7474681,
  author={Moreno-León, Jesús and Robles, Gregorio and Román-González, Marcos},
  booktitle={2016 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Comparing computational thinking development assessment scores with software complexity metrics}, 
  year={2016},
  volume={},
  number={},
  pages={1040-1045},
  abstract={The development of computational thinking skills through computer programming is a major topic in education, as governments around the world are introducing these skills in the school curriculum. In consequence, educators and students are facing this discipline for the first time. Although there are many technologies that assist teachers and learners in the learning of this competence, there is a lack of tools that support them in the assessment tasks. This paper compares the computational thinking score provided by Dr. Scratch, a free/libre/open source software assessment tool for Scratch, with McCabe's Cyclomatic Complexity and Halstead's metrics, two classic software engineering metrics that are globally recognized as a valid measurement for the complexity of a software system. The findings, which prove positive, significant, moderate to strong correlations between them, could be therefore considered as a validation of the complexity assessment process of Dr. Scratch.},
  keywords={Measurement;Complexity theory;Correlation;Vocabulary;Programming profession;Fitting;computational thinking;Scratch;programming;assessment tools;Dr. Scratch;software metrics;complexity},
  doi={10.1109/EDUCON.2016.7474681},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{10505460,
  author={Wang, Xuemei and Zheng, Jun and Zhao, Jiongshan and Lin, Shengyou},
  booktitle={2023 13th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Training and Practice of Computational Thinking for New Engineering Subjects}, 
  year={2023},
  volume={},
  number={},
  pages={760-765},
  abstract={With the development of science and technology, the talents of high-quality composite New Engineering Subjects need strong engineering practice ability, innovation ability, and international competitiveness. The college students have not only basic skills in computer operation but also certain programming skills. Those who understand and practice computational thinking will solve various non-universal computing problems encountered in work and study in the contemporary information society. In order to support the teaching objectives and educational concepts of the new engineering discipline, teaching reforms have been carried out in terms of teaching objectives, teaching content, teaching models, teaching resources, and ideological and political education. We cultivate interdisciplinary and professional integration through advanced thinking methods. It integrates knowledge points into practical engineering applications and cultivates students' computational thinking ability. It also improves the practical application and problem-solving abilities of students. In addition, we integrate ideological and political elements into the teaching process. It is a teaching method that combines moral education and professional courses.},
  keywords={Training;Knowledge engineering;Technological innovation;Ethics;Computational modeling;Education;Problem-solving;new engineering;computational thinking;ideological and political elements;blended teaching},
  doi={10.1109/ITME60234.2023.00156},
  ISSN={2474-3828},
  month={Nov},}@INPROCEEDINGS{8756712,
  author={Larsson, P. and Apiola, M-V. and Laakso, M-J.},
  booktitle={2019 42nd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)}, 
  title={The uniqueness of Computational thinking}, 
  year={2019},
  volume={},
  number={},
  pages={687-692},
  abstract={The concept of computational thinking is timely. It is widely agreed that in order to benefit and thrive in a digital world, more than digital literacy is required. Computational thinking promises understanding of information technology and its utilization without necessarily knowing how to write code. According to many authors, skills in computational thinking include the ability to evaluate and design solutions to problems. However, the vision for computational thinking, laid out by a number of scholars, is even bigger than this. It proposes that thinking habits from computer science are beneficial for any kind of problem solving and that those thinking habits form a central part of modern sciences. It might be that components of computational thinking are indeed useful in problem solving and that they play an important part in other sciences. However, computer science combines three types of thinking traditions: theoretical (mathematical) tradition, engineering tradition and scientific tradition, and it is important to differentiate between what is an aspect in one or more of these traditions and what is unique for computer science. This clarification will support the application and teaching of computational thinking. This paper explores the uniqueness of computational thinking and its roots in theoretical, engineering and scientific traditions of computing.},
  keywords={Computational thinking;Computer science education;CSER;Computational ideas;History of computational thinking;Disciplinary ways of thinking and practicing},
  doi={10.23919/MIPRO.2019.8756712},
  ISSN={2623-8764},
  month={May},}@INPROCEEDINGS{8567183,
  author={Lin, Chia-Ching and Chao, Po-Yao and Lin, En-Ting and Tzeng, Huei-Lin},
  booktitle={2018 1st International Cognitive Cities Conference (IC3)}, 
  title={Exploring the Role of Visual Programming Activities in Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={135-138},
  abstract={This study explored the role of visual programming activities in computational thinking. A group of 158 freshmen majoring in information science and communication in Northern Taiwan were engaged in this study. A visual programming platform, computational thinking questionnaire and a programming examination were employed to collect the log data of programming activities, self-responses to computational thinking and the score of programming examination for later analyses. The results reveal that visual programming activities would be critical to the evolution of multiple computational thinking perspectives.},
  keywords={Programming;Visualization;Problem-solving;Urban areas;Data collection;Conferences;Computer aided instruction;computational thinking;visual programming;programming learning;problem solving},
  doi={10.1109/IC3.2018.00-43},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{8845503,
  author={Gao, Peipei and Lu, Mingxiao and Zhao, Hong and Li, Min},
  booktitle={2019 14th International Conference on Computer Science & Education (ICCSE)}, 
  title={A New Teaching Pattern Based on PBL and Visual Programming in Computational Thinking Course}, 
  year={2019},
  volume={},
  number={},
  pages={304-308},
  abstract={As a fundamental and introductory course in undergraduate education, Computer Basis aims to cultivate the scientific computational thinking mode and the ability of solving problem for students who are not the computer majors. In this study, a new pedagogical method named PBL-VP combining the Problem-Based Learning (PBL) and the visual programming Blockly was applied to Computer Basis. This paper described a classical example about problem solving to explain the teaching process of the PBL-VP in detail. The process of problem solving was divided into several operable steps to gradually guide students to analyze problems, provide solutions and establish scientific logic thinking. Blockly was introduced to obscure the grammar of programming language and implement the algorithm visually. Finally, we evaluated the effectiveness of the PBL-VP teaching method on student learning by a contrast test. The empirical results proved that students in the class with PBL-VP earned higher final grades and the teaching method we proposed played a positive role in computer general education.},
  keywords={Education;Visualization;Programming profession;Problem-solving;Navigation;Mathematical model;Problem-Based Learning (PBL);visual programing;computational thinking;problem solving;computer general education},
  doi={10.1109/ICCSE.2019.8845503},
  ISSN={2473-9464},
  month={Aug},}@INPROCEEDINGS{9379266,
  author={Hanč, Jozef and Hančová, Martina and Jurková, Veronika and Šveda, Dušan},
  booktitle={2020 18th International Conference on Emerging eLearning Technologies and Applications (ICETA)}, 
  title={Data science tools in the analysis of developing inquiry skills and computational thinking within the “IT Academy” Project}, 
  year={2020},
  volume={},
  number={},
  pages={125-129},
  abstract={We present our ideas how to apply modern data science technology and methodology to effectively prepare and statistically analyze large educational datasets which in our case map inquiry skills and computational thinking developed by students in primary and secondary schools at the Slovak national scale, within the project “IT Academy - Education for the 21st Century”. Combining the top two open-source data science tools, Python (within Jupyter notebooks) and R (within R studio software), we illustrate some of results from data preprocessing (cleaning, wrangling) for the diagnostic primary-school test of inquiry skills where Python tools (e.g. Pandas library) became more advantageous. As for the subsequent intensive statistical analysis, R environment was more suitable. We demonstrate summary results of the statistical analysis of the computer thinking diagnostic test for primary and secondary schools, finally cross-checked in SPSS software. Due to the current COVID-19 situation, we are still collecting data from ITA project impacts for which we finally show how we plan to implement further methods for data collecting, analysis and implementation in collaboration with our colleagues - education researchers.},
  keywords={Statistical analysis;Education;Tools;Data science;Libraries;Open source software;Python;education data;IBSE;computational thinking;Python;Jupyter;Pandas;R packages},
  doi={10.1109/ICETA51985.2020.9379266},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{8992758,
  author={Jeng, Hi-Lian and Liu, Li-Wen and Chen, Chung-Nien},
  booktitle={2019 8th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Developing a Procedural Problem-solving-based Framework of Computational Thinking Components}, 
  year={2019},
  volume={},
  number={},
  pages={272-277},
  abstract={This study intended to explore the definitions and components of CT (computational thinking) and establish a framework that depicts the relationship between CT and problem-solving procedures. The framework is expected to aid in the development of CT pedagogy and assessment. CT is defined as a problem-solving process and method, utilizing "computer science concepts" and "digital technology skills" to develop strategic methods to solve specific problems, and ten components are synthesized as the main facets of CT in correspondence with the progressive phases of problem-solving. The CT framework is expected to provide guidelines for teachers and students to understand the essence of CT so that students' higher order thinking can be promoted osmotically.},
  keywords={Computational Thinking;Procedural Problem solving-based Framework;Pedagogy and Assessment},
  doi={10.1109/IIAI-AAI.2019.00061},
  ISSN={},
  month={July},}@INPROCEEDINGS{9155874,
  author={Hsu, Ting-Chia and Wong, Lung-Hsiang and Aw, Guat Poh},
  booktitle={2020 IEEE 20th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Learning Chinese as a Second Language by Educational Robots Integrating the Operation of Conditional Logic in Computational Thinking and the Usage of the Causal Sentences}, 
  year={2020},
  volume={},
  number={},
  pages={236-237},
  abstract={This study attempted to carry out interdisciplinary learning activities which integrate computational thinking into language learning. The participants were 56 5th-grade Chinese as a Second Language (CSL) students in Singapore. The students were required to learn the ability to apply conditional complex sentences in Chinese language and learn the conditional structural logic through coding educational robots to interact with each other in Chinese. The results showed that the students improved significantly in the linguistic knowledge. Furthermore, the computer programming self-efficacy of the students has also promoted significantly in terms of logical thinking, control and debugging. The students had also shown a high level of learning engagement, low anxiety and a high intention in the robot coding activity. This study presented the empirical results of this cross-domain integration of educational robots and language learning, providing a reference and teaching practices for future teachers.},
  keywords={Educational robots;Programming profession;Encoding;Education;Linguistics;Chinese as a Second Language;Computational Thinking;Educational Robots;Computer Programming Self-Efficacy},
  doi={10.1109/ICALT49669.2020.00077},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{9028390,
  author={Fennell, Hayden W. and Lyon, Joseph A. and Magana, Alejandra J. and Rebello, Sanjay and Rebello, Carina M. and Peidrahita, Yuri B.},
  booktitle={2019 IEEE Frontiers in Education Conference (FIE)}, 
  title={Designing hybrid physics labs: combining simulation and experiment for teaching computational thinking in first-year engineering}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={This Innovative Practice Full Paper details a design-based research approach for implementing computational learning activities in a first-year engineering physics course. This study contributes to the growing body of research on computation in engineering education by introducing computational concepts and activities during a physics laboratory class. Drawing from Experiential Learning Theory and using an adapted version of the Use-Modify-Create framework for teaching computational thinking, a series of lab activities was designed that combined physical lab experiments with computational modeling using custom-built VPython simulations. Data was collected from the labs in the form of (1) responses to lab activity worksheets, (2) code modified and/or generated by the students during lab activities, (3) in-code comments provided by the students during the activities. A qualitative thematic analysis was used to analyze students' learning benefits and any challenges faced during the activities. While results show a number of learning benefits, an observed homogeneity of student responses to the questions on the lab handouts point to a set of potential limitations within the activities themselves that warranted further examination. Insight gained from this analysis process is presented as a set of four design principles that will inform future implementations of the hybrid course design.},
  keywords={Physics;Computational modeling;Education;Programming;Software;Atmospheric modeling;Context modeling;computational thinking;engineering education;physics education;computational modeling;design-based research},
  doi={10.1109/FIE43999.2019.9028390},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{10107843,
  author={Qu, ZhiWei and Liu, JiaMing and Che, Lu and Su, YanXiu and Zhang, Wei},
  booktitle={2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT)}, 
  title={Research on the Application of Gamification Programming Teaching for High School Students’ Computational Thinking Development}, 
  year={2023},
  volume={},
  number={},
  pages={144-149},
  abstract={Computational thinking, as one of the core literacies of the Chinese IT courses, is an important area of IT education in primary and secondary schools. This research aims to improve the level of computational thinking of high school students by using Minecraft as a tool for Python gamified programming teaching design and analyzing the effectiveness of 60 high school students’ improvement in algorithmic thinking, problem solving, creativity, critical thinking, and collaboration after the teaching practice. The research results show that gamified programming teaching can significantly improve high school students’ computational thinking, providing a new teaching approach and ideas for high school IT education and computational thinking development.},
  keywords={Education;Urban areas;Collaboration;Data models;Problem-solving;Information technology;Task analysis;game-based learning;gamification programming;computational thinking;high school information technology},
  doi={10.1109/ICEIT57125.2023.10107843},
  ISSN={},
  month={March},}@INPROCEEDINGS{8433517,
  author={Ribeiro Silva, Laíza and Pedro da Silva, Alan and Toda, Armando and Isotani, Seiji},
  booktitle={2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Impact of Teaching Approaches to Computational Thinking on High School Students: A Systematic Mapping}, 
  year={2018},
  volume={},
  number={},
  pages={285-289},
  abstract={The role of computing in society is fundamental for the political, economic and cultural development of countries, especially in a globalized context. Computational thinking is an extremely important skill in the education of young students, since the ability of intuitively abstracting information and knowledge promotes an expansion of the learning dimension. This study aims to gather approaches used for teaching computational thinking exclusively to high school students, highlighting their performance and motivation resulting from the applications of such approaches. In order to answer our research question, a systematic mapping of the analysis of 15 studies was conducted. The use of computer programming proved to be the most used way to disseminate computational thinking. The students who participated in approaches regarding the insertion of computational thinking in the classroom showed positive impact on the development of classroom activities, as well as motivation to learn.},
  keywords={Education;Systematics;Programming profession;Databases;Tools;Robots;Computational Thinking;Approach;K-12},
  doi={10.1109/ICALT.2018.00072},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{8712671,
  author={Phetsrikran, Titiphan and Massagram, Wansuree and Phoka, Thanathorn and Harfield, Antony},
  booktitle={2018 22nd International Computer Science and Engineering Conference (ICSEC)}, 
  title={A Feasibility Study of Arducation Bot : An Educational Robotics and Mobile Application Kit for Computational Thinking Skills}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={The purpose of this study is to develop and test a pedagogical platform for teaching computational thinking through tangible and mobile technologies. Arducation Bot combines educational robotics and mobile application to create an intuitive and less intimidating approach in computational thinking and computer science. A large-scale testing of Arducation Bot platform was conducted with 180 high school students from Thailand and Japan. A strong pattern of improved computational thinking was shown in the collected data. Arducation Bot shows its universal appeal or suitability for pupils with different nationalities and backgrounds. Teachers and educators could potentially benefit from applying this mobile application and tangible technology platform to help students understand computational thinking skill - an imperative skill for the 21st century.},
  keywords={DC motors;Robot sensing systems;Bluetooth;Tablet computers;Software;computational thinking;educational robotics;mobile technology;tangible technology;pedagogy},
  doi={10.1109/ICSEC.2018.8712671},
  ISSN={},
  month={Nov},}
