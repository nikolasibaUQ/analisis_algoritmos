@INPROCEEDINGS{5676754,
  author={Zhao, Shu and Zhao, Guoqing and Wang, Qiong},
  booktitle={2010 International Conference on Computational Intelligence and Software Engineering}, 
  title={Teaching Thinking Directly-Construction and Practice of Thinking Skills Training Course}, 
  year={2010},
  volume={},
  number={},
  pages={1-4},
  abstract={Thinking skills training can effectively improve students' creative thinking and learning ability, and it is simple, practical and feasible. Now there are lots of educators and teachers who have done some researches in this area. But many controversial problems still exist, for example, whether thinking is needed to be taught, how to be taught, etc. This paper first discusses the necessity and connotation of thinking skills training, and discusses the trainability of thinking skills, then designs a course framework based on Edward de Bono's thinking training system and Tony Buzan's mind map, and chooses teaching thinking directly as an effective way to teach thinking skills. At last, we introduce the practice of the course framework in Beijing Normal University. Constructing a practical course framework of training thinking and putting it into practice are the innovations of this paper.},
  keywords={Training;Educational institutions;Psychology;Visualization;Learning systems;Brain},
  doi={10.1109/CISE.2010.5676754},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9454003,
  author={Psycharis, Sarantos and Kalovrektis, Konstantinos and Xenakis, Apostolos and Paliokas, Ioannis and Patrinopoulos, Matthaios and Georgiakakis, Petros and Iatrou, Paraskevi and Theodorou, Paraskevi and Papageorgiou, Theodora and Ntourou, Vasiliki},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={The Impact of Physical Computing and Computational Pedagogy on Girl’s Self – Efficacy and Computational Thinking Practice}, 
  year={2021},
  volume={},
  number={},
  pages={308-315},
  abstract={Research studies provide some evidence that computing and education robotics have a positive impact on female students' engagement in Computational Thinking (CT) practices and their self-efficacy for CT. Other issues raised by research concern the decontextualization of computing education from the actual lives of students which causes problems for students under represented in the fields of computing and engineering, such as female students. To tackle this problem, paper aimed to develop (STEM-Computational Thinking (CT)-Computing) scenarios related to students' actual lives and their local communities in order to help female students to develop STEM(Science, Technology, Engineering, Mathematics) competences, when core disciplinary ideas and cross-cutting concepts are infused in the scenarios. All scenarios were implemented using the didactic model of inquiry teaching and learning and the engineering design thinking instruction strategy using physical computing activities. A validated questionnaire for self-efficacy and CT practices was applied before and after the intervention to female prospective engineering school teachers studying at Higher Education Institutes in Greece. Results show a strong evidence for the effectiveness (enhancement of CT efficacy of female students) by using the STEM content epistemology through activities implemented with physical computing platforms.},
  keywords={Conferences;Computational modeling;Mathematical model;Engineering education;Robots;Computational Pedagogy;STEM;Computational Thinking;Women in Engineering;Physical Computing},
  doi={10.1109/EDUCON46332.2021.9454003},
  ISSN={2165-9567},
  month={April},}@ARTICLE{10508087,
  author={Liao, Jian and Zhong, Linrong and Zhe, Longting and Xu, Handan and Liu, Ming and Xie, Tao},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Scaffolding Computational Thinking With ChatGPT}, 
  year={2024},
  volume={17},
  number={},
  pages={1668-1682},
  abstract={ChatGPT has received considerable attention in education, particularly in programming education because of its capabilities in automated code generation and program repairing and scoring. However, few empirical studies have investigated the use of ChatGPT to customize a learning system for scaffolding students’ computational thinking. Therefore, this article proposes an intelligent programming scaffolding system using ChatGPT following the theoretical framework of computational thinking and scaffolding. A mixed-method study was conducted to investigate the affordance of the scaffolding system using ChatGPT, and the findings show that most students had positive attitudes about the proposed system, and it was effective in improving their computational thinking generally but not their problem-solving skills. Therefore, more scaffolding strategies are discussed with the aim of improving student computational thinking, especially regarding problem-solving skills. The findings of this study are expected to guide future designs of generative artificial intelligence tools embedded in intelligent learning systems to foster students’ computational thinking and programming learning.},
  keywords={Chatbots;Education;Programming profession;Codes;Task analysis;Problem-solving;Encoding;Artificial-intelligence-generated content (AIGC);ChatGPT;computational thinking (CT);scaffolding},
  doi={10.1109/TLT.2024.3392896},
  ISSN={1939-1382},
  month={},}@INPROCEEDINGS{8725088,
  author={Echeverría, Leovy and Cobos, Ruth and Morales, Mario and Moreno, Fernando and Negrete, Victor},
  booktitle={2019 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Promoting Computational Thinking Skills in Primary School Students to Improve Learning of Geometry}, 
  year={2019},
  volume={},
  number={},
  pages={424-429},
  abstract={Computational thinking is a necessary skill for human life. However, promoting this competency in primary school students sometimes is hard and difficult for instructors. This article proposes a learning approach based on the use of a platform as part of a strategy of computational thinking to enhance learning of geometry. A case study was performed with primary school children from fourth grade at the Comfacor School (Montería-Colombia). The aim of the study was to analyze the effects of the approach in the children's motivation and performance.},
  keywords={Geometry;Programming profession;Computational modeling;Taxonomy;Problem-solving;Computational thinking;Moodle-G;Learning of geometry},
  doi={10.1109/EDUCON.2019.8725088},
  ISSN={2165-9567},
  month={April},}@ARTICLE{9606871,
  author={Csernoch, Mária and Biró, Piroska and Máth, János},
  journal={IEEE Access}, 
  title={Developing Computational Thinking Skills With Algorithm-Driven Spreadsheeting}, 
  year={2021},
  volume={9},
  number={},
  pages={153943-153959},
  abstract={The paper presents the details of a four-year project to test the effectiveness of teaching spreadsheeting with spreadsheet programming, instead of the traditional, widely accepted surface approach methods. The novel method applied in the project, entitled Sprego (Spreadsheet Lego), is a concept-based problem-solving approach adapted from the didactics of other sciences and computer programming. In the experimental group contextualized, real-world programming problems are presented in a spreadsheet environment. A semi-unplugged data-driven analysis is carried out based on each problem, which is followed by the building of a feasible algorithm, expressed by natural language expressions. The coding is completed in the following step by applying a limited number of spreadsheet (Sprego) functions, multilevel, and array formulas. The final steps of the process are discussion and debugging. On the other hand, classical, tool-centered approaches are applied in the control groups. Our research reveals that the traditional surface approach methods for teaching spreadsheeting do not provide long lasting, reliable knowledge which would provide students and end-users with effective problem-solving strategies, while Sprego does. Beyond this finding, the project proves that Sprego supports schema construction and extended abstraction, which is one of the major hiatus points of traditional surface navigation methods. The project also reveals that developing computational thinking skills should not be downgraded, and the misconceptions of self-taught end-users and user-friendly applications should be reconsidered, especially their application in educational environments. Gaining effective computer problem-solving skills and knowledge-transfer abilities is not magic, but a time-consuming process which requires consciously developed and effective methods, and teachers who accept the incremental nature of the sciences.},
  keywords={Programming profession;Education;Problem-solving;Informatics;Mathematics;Task analysis;Algorithm-driven spreadsheeting;long lasting knowledge;schema construction;cognitive load;end-user computing;computational thinking},
  doi={10.1109/ACCESS.2021.3126757},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{9594234,
  author={Hemin, Du and Junjie, Jiang},
  booktitle={2021 26th International Conference on Automation and Computing (ICAC)}, 
  title={Research on Intelligent Product Design based on Cognitive Thinking and Visual Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={Intelligent product design has become an important part of product design due to its outstanding convenience and functionality. First of all, through the study of cognitive thinking and visual thinking, this article concludes that the two have important guiding roles in product design. Secondly, use the specific laws in cognitive thinking and visual thinking to derive the corresponding intelligent product design principles. Then, a intelligent product design process that is conducive to function setting and styling design is derived. The purpose is to introduce a good design plan for the material level, the behavior level, and the spiritual level. Finally, the research results are demonstrated by design practice. It is hoped that this article will have a certain enlightenment for related designers to carry out intelligent product design.},
  keywords={Visualization;Automation;Roads;Computational modeling;Tools;Product design;Reliability;cognitive thinking;visual thinking;intelligent product design;design practice},
  doi={10.23919/ICAC50006.2021.9594234},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{10707828,
  author={Su, Jun-Ming and Lin, Yu-En and Hsu, Wei-Fang and Wu, Ting-Ti},
  booktitle={2024 16th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={An Interactive Picture Storybook Scheme for Lower-Grade Elementary Students to Learn Music and Computational Thinking}, 
  year={2024},
  volume={},
  number={},
  pages={712-713},
  abstract={STEAM education and Computational Thinking emphasize interdisciplinary, integrated learning. However, the STEAM learning scheme designed for the ART domain is limited. Therefore, this study develops an Interactive Picture Storybook Scheme for Lower-Grade Elementary Students to Learn Music and Computational Thinking. It combines picture storybooks to provide narrative contexts and knowledge learning with interactive digital content that offers interactive scenarios and hands-on activities, enhancing learning motivation and effectiveness.},
  keywords={Subspace constraints;Education;Informatics;music thinking;computational thinking;STEAM;picture storybook;interactive content},
  doi={10.1109/IIAI-AAI63651.2024.00148},
  ISSN={2472-0070},
  month={July},}@INPROCEEDINGS{8705239,
  author={González, Felipe and López, Claudia and Castro, Carlos},
  booktitle={2018 37th International Conference of the Chilean Computer Science Society (SCCC)}, 
  title={Development of Computational Thinking in High School Students: A Case Study in Chile}, 
  year={2018},
  volume={},
  number={},
  pages={1-8},
  abstract={Most efforts to incorporate computational thinking in K-12 education use visual tools (e.g., Scratch) and focus on students in their first grades. Fewer projects investigate the development of computational thinking in students in the last years of school, who usually have not had early formal preparation to acquire these skills. This study provides evidence of the effectiveness of teaching C++ (a low-level programming language) to develop computational thinking in high school students in Chile. By applying a test before and after a voluntary C++ workshop, the results reveal a significant improvement in computational thinking after the workshop. However, we observe that there was a tendency to drop out of the workshop among students with lower levels of initial computational thinking. Besides, tenth-grade students obtained lower final scores than eleventh and twelfth-grade students. These results indicate that teaching a low-level programming language is useful, but it has high entry-barriers.},
  keywords={C++ languages;Visualization;Media;Education;Conferences;Silicon compounds;Computational Thinking Test;C++;Programming in High School},
  doi={10.1109/SCCC.2018.8705239},
  ISSN={1522-4902},
  month={Nov},}@INPROCEEDINGS{9865409,
  author={Halim, Erwin and Kevin and Kristian, Hans and Hebrard, Marylise},
  booktitle={2022 IEEE International Conference on Cybernetics and Computational Intelligence (CyberneticsCom)}, 
  title={Investigating the Key Factors on XYZ Generations' Higher-Order Thinking Skills in E-Learning}, 
  year={2022},
  volume={},
  number={},
  pages={297-302},
  abstract={Education development continues to proliferate in Indonesia, so many learning methods are applied, but the number of students with HOTS abilities in Indonesia is minimal. The issues affecting HOTS in Indonesia are (1) Not yet able to adapt, (2) Lack of basic knowledge early on, and (3) Few apply HOTS. The research goals were to examine XYZ generations' HOTS variables in the e-learning concept. This research used Structural Equation Model (SEM) and SmartPLS as statistical tools. With the Judgement sampling method, data were collected through an online questionnaire from 184 respondents from April 21–28, 2022, consisting of students and lecturers at 20 universities in Indonesia who also came from various regions in Indonesia. The proposed model has six variables: Learning Environment, Learning Motivation, Peer Interaction, Learning Strategy, Learning Style, HOTS in e-learning concept, and eight hypotheses. All hypotheses have a significant influence.},
  keywords={Adaptation models;Electronic learning;Numerical analysis;Computational modeling;Education;Sampling methods;Mathematical models;e-learning;Higher-Order-Thinking skills;Learning Environment;Learning Motivation;Learning Strategy;Learning Style},
  doi={10.1109/CyberneticsCom55287.2022.9865409},
  ISSN={},
  month={June},}@INPROCEEDINGS{5635189,
  author={Koh, Kyu Han and Basawapatna, Ashok and Bennett, Vicki and Repenning, Alexander},
  booktitle={2010 IEEE Symposium on Visual Languages and Human-Centric Computing}, 
  title={Towards the Automatic Recognition of Computational Thinking for Adaptive Visual Language Learning}, 
  year={2010},
  volume={},
  number={},
  pages={59-66},
  abstract={Visual programming languages can be used to make computer science more accessible to a broad range of students. The evaluative focus of current research in the area of visual languages for educational purposes primarily aims to better understand motivational benefits as compared to traditional programming languages. Often these visual languages claim to teach students computational thinking concepts; however, although the evaluations show that students may exhibit more enthusiasm, it is not always clear what computational thinking concepts students have actually learned. In this paper we attempt to develop a visual semantic evaluation tool for student-created games and simulations that goes towards depicting the computational thinking concepts implemented by the students. Through semantically analyzing a given student's created projects over time, this visual evaluation tool, called the Computational Thinking Pattern (CTP) graph, can possibly indicate the existence of computational thinking transfer from games to science simulations.},
  keywords={Games;Visualization;Semantics;Programming;Syntactics;Computer languages;Computational modeling;Computational Thinking;Visual Language Programming;Knowledge Transfer},
  doi={10.1109/VLHCC.2010.17},
  ISSN={1943-6106},
  month={Sep.},}@ARTICLE{9684795,
  author={Stella, M and Kapuza, A and Cramer, C and Uzzo, S and Latora, Vito},
  journal={Journal of Complex Networks}, 
  title={Mapping computational thinking mindsets between educational levels with cognitive network science}, 
  year={2021},
  volume={9},
  number={6},
  pages={1-13},
  abstract={A significant aspect of computational thinking is as a way of reasoning about the world in terms of data. This mindset channels number-crunching toward an ambition to discover knowledge through logic, models and simulations. Here we show how computational cognitive science can be used to reconstruct and analyse the structure of computational thinking mindsets (forma mentis in Latin) through complex networks. As a case study, we investigate cognitive networks tied to key concepts of computational thinking provided by (i) 159 high school students enrolled in a science curriculum and (ii) 59 researchers in complex systems and simulations. Researchers' reconstructed knowledge highlighted a positive mindset about scientific modelling, semantically framing data and simulations as ways of discovering nature. Students correctly identified different aspects of logic reasoning but perceived ‘computation’ as a distressing, anxiety-eliciting task, framed with math jargon and lacking links to real-world discovery. Students' mindsets around ‘data’, ‘model’ and ‘simulations’ critically revealed no awareness of numerical modelling as a way for understanding the world. Our findings provide evidence of a crippled computational thinking mindset in students, who acquire mathematical skills that are not channelled toward real-world discovery through coding. This unlinked knowledge ends up being perceived as distressing number-crunching expertise with no relevant outcome. The virtuous mindset of researchers reported here indicates that computational thinking can be restored by training students specifically in coding, modelling and simulations in relation to discovering nature. Our approach opens innovative ways for quantifying computational thinking and enhancing its development through mindset reconstruction.},
  keywords={computational thinking;cognitive network science;mindset reconstruction;education},
  doi={10.1093/comnet/cnab020},
  ISSN={2051-1329},
  month={Nov},}@INPROCEEDINGS{9930462,
  author={Rakhmawati, Lusia and Agung, Achmad Imam and Rohman, Miftahur},
  booktitle={2022 Fifth International Conference on Vocational Education and Electrical Engineering (ICVEE)}, 
  title={Virtual Laboratory-Based Student Worksheets Development for Computational Thinking Practices}, 
  year={2022},
  volume={},
  number={},
  pages={221-225},
  abstract={This research intends to create a virtual laboratory-based student worksheets model on Electrostatic Forces, Fields, and Equipotential Lines to educate students computational thinking. This study was divided into four stages: needs analysis, practicum learning design, student worksheets development, and evaluation. The literature research and field investigations employed in the needs analysis stage are related to the need for virtual laboratories, whereas the practicum learning design stage begins by determining competency criteria and milestones in computational thinking. The decomposition process, pattern recognition, abstraction, and algorithms are all highlighted in the student worksheets development stage. Expert validation and limited trials are used in the evaluation step. Student responses and learning outcomes are classified as good and practicable to be used as a source of learning in learning activities based on the results of the validation.},
  keywords={Electrical engineering;Computational modeling;Education;Laboratories;Pattern recognition;Classification algorithms;Electrostatics;Virtual laboratory;student worksheets;computational thinking;Physics Education Technology (PhET)},
  doi={10.1109/ICVEE57061.2022.9930462},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8760819,
  author={Delgado, Ramiro and Yacchirema, Silvana and Coral, Francisco and Celi, Juan},
  booktitle={2019 14th Iberian Conference on Information Systems and Technologies (CISTI)}, 
  title={Platform for university teaching applying Computational Thinking at the Armed Forces University ESPE}, 
  year={2019},
  volume={},
  number={},
  pages={1-4},
  abstract={The inclusion of computational thinking in third-level professional training is an alternative that revolutionize traditional teaching through new paradigms, ICT tools and new platforms such as the one proposed in this paper that describes the development and implementation of a prototype that allows incorporating computational thinking into educational constructivist models, exploiting the capacities and abilities of a global and interconnected society. The prototype was submitted to an evaluation by 120 students of Information Technology (IT) faculty of the Armed Forces University ESPE located in Sangolqua, Ecuador, in the fields: performance and acceptance of the user, obtaining acceptable results about its applicability, usability and adaptation to the training model by competencies of the institution. The research methodology Desing Science Research (DSR), SCRUM as a design methodology and AppGini as a development tool were applied.},
  keywords={Computational modeling;Information systems;Software;Training;Tools;Prototypes;computational thinking;educational platform;appgini;scrum},
  doi={10.23919/CISTI.2019.8760819},
  ISSN={2166-0727},
  month={June},}@INPROCEEDINGS{6186914,
  author={Ben Youssef, Belgacem and Berry, Barbara and Sjoerdsma, Michael},
  booktitle={2012 2nd Interdisciplinary Engineering Design Education Conference (IEDEC)}, 
  title={Teaching first-year interdisciplinary students to use computational design software in a spatial thinking course}, 
  year={2012},
  volume={},
  number={},
  pages={10-17},
  abstract={Many technology and design-based disciplines are facing increasing demands to prepare students to perform effectively within computational and simulation environments. Further, students' spatial abilities are an important prerequisite to technological literacy within virtual environments. In this paper, we explore the challenges and opportunities teaching a large group of first-year, interdisciplinary students to apply spatial thinking skills by undertaking a team-based, design project using an industrial-strength computational design environment (SolidWorks). We describe key instructional principles and techniques used to minimize the complexity of this computational tool, thus enabling students to focus on the tasks and reasoning requirements of the design project. While encouraged by the high degree of students' motivation for building functioning animated mechanical toys (AMTs), students frequently reported being “lost” in SolidWorks (SW) during the modeling phases of the project. Our techniques for scaffolding learning activities have continued to evolve to minimize the challenges faced by novice users of SW and to better support them in developing their spatial thinking skills. We also present our experiences, lessons learned, and ideas for improving the design of the project, and learning activities, such as worked examples of an AMT model, to further reduce the cognitive load and to enable students to focus on visual-spatial reasoning rather than on the tacit skills associated with using SolidWorks.},
  keywords={Assembly;Tutorials;Software;Three dimensional displays;Education;Computational modeling;Spatial thinking;first-year students;3D modeling;computational design software;SolidWorks;small group projects;instructional principles;scaffolding techniques;cognitive load},
  doi={10.1109/IEDEC.2012.6186914},
  ISSN={},
  month={March},}@INPROCEEDINGS{8493669,
  author={Vinayakumar, R and Soman, KP and Menon, Pradeep},
  booktitle={2018 9th International Conference on Computing, Communication and Networking Technologies (ICCCNT)}, 
  title={CT-Blocks: Learning Computational Thinking by Snapping Blocks}, 
  year={2018},
  volume={},
  number={},
  pages={1-7},
  abstract={Technologies are growing rapidly and its applications are enormous in different strata of society. In this paper especially we are talking about educational technologies. We could see there is a significant change in elementary and secondary education over the past 10 years like classroom teaching, information and communications technology (ICT), and now everything is all about the cloud computing. Cloud computing technologies play a big role in the development of educational technologies. CT-Blocks is a virtual private cloud system developed for K-12 schools. The importance of the word computational thinking makes everyone to the development of educational tools to impart computational thinking to primary, middle and high school students. CT-Blocks is a cloud and block based programming language that reinforces the word computational thinking in all types of users.},
  keywords={Programming profession;Sprites (computer);Computer languages;Tools;Education;Cloud computing;Cloud computing;Scratch;Snap;Computational thinking},
  doi={10.1109/ICCCNT.2018.8493669},
  ISSN={},
  month={July},}@INPROCEEDINGS{10398325,
  author={Ng, Andrew Keong and Atmosukarto, Indriyati and Lee Teo, Julia Kwok and Amran, Ashraaf Bin},
  booktitle={2023 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Instilling Computational Thinking in Undergraduate Students Across Multiple Disciplines through an Adaptive Gamified e-Learning Platform}, 
  year={2023},
  volume={},
  number={},
  pages={1-7},
  abstract={This full paper presents the instillation of computational thinking (CT) in undergraduate students across multiple disciplines through an adaptive gamified e-learning platform. In today’s fast-paced digital age, possessing CT abilities is essential for effective critical thinking and problem-solving across various fields. To cultivate CT proficiency in students from diverse disciplines, we designed an innovative adaptive gamified e-learning platform called Computational Thinking Quest (CTQ). The eight key features of CTQ are (1) interactive storyline with customizable avatars, mini-games, and questions; (2) performance profiler; (3) comprehensive question bank with questions at three difficulty levels; (4) feedback and answer to each question; (5) additional learning resources via hyperlinks; (6) badges and leaderboard; (7) progress saving feature; and (8) integrated online feedback survey. The CTQ was introduced to recently enrolled first-year undergraduate students across all five discipline clusters at Singapore Institute of Technology. The learning performance and feedback of 135 students were gathered and examined. The student population comprised 33 Business, Communication and Design (BCD); 48 Health and Social Science (HSS); and 54 Infocomm Technology (ICT) undergraduates. Statistical results from the paired Student’s t-test reveal significant differences (p < 0.05) (i) between the pre-test and post-test scores for HSS, ICT, and all students combined; (ii) between the pre-test duration and post-test duration for all three clusters and all students combined; (iii) between the self-assessed knowledge score before CTQ and after completing CTQ for all three clusters and all students combined. Moreover, majority of the students commented that the CTQ generates interest in CT, is an engaging learning platform with enriching educational content, and has motivated their independent learning. Lastly, CTQ functions as an online preparatory course aimed at reducing the diversity in academic backgrounds and varying levels of prior knowledge of computer programming languages among students. This will help smoothly transition students into programming-relevant modules, and ultimately enhance the effectiveness of teaching and learning.},
  keywords={Surveys;Computer languages;Electronic learning;Education;Sociology;Games;Problem-solving;computational thinking;adaptive learning;gamification;independent learning;online education;multiple disciplines},
  doi={10.1109/TALE56641.2023.10398325},
  ISSN={},
  month={Nov},}@ARTICLE{10305292,
  author={Jiménez Toledo, Javier Alejandro and Collazos, César A. and Ortega, Manuel and Ramos, Deixy Ximena},
  journal={IEEE Revista Iberoamericana de Tecnologias del Aprendizaje}, 
  title={Algorithmic Thinking and Extension of its Definition for Trainee Software Developers: A Systematic Literature Mapping}, 
  year={2023},
  volume={18},
  number={4},
  pages={331-343},
  abstract={This paper exhibits a systematic literature mapping of the considerations required to develop algorithmic thinking in a first course in computer programming (CS1) in university academic programs in computing. In the methodological process of this study, 5 stages were proposed: research questions, search, selection, quality assessment and synthesis extraction. In this way, 5 guiding questions were drawn, 136 articles generated by the search stage were analyzed and the synthesis of 55 documents that met the criteria of this research was concluded, thus compiling the different practices used for the development of algorithmic thinking. In addition, as a result of the systematic literature mapping, a definition of Algorithmic Thinking oriented Software Engineering and didactics is proposed.},
  keywords={Systematics;Software algorithms;Education;Programming profession;Information services;Software engineering;Computational modeling;Algorithms;computing;computational logic;computational thinking;computer programming},
  doi={10.1109/RITA.2023.3323784},
  ISSN={1932-8540},
  month={Nov},}@INPROCEEDINGS{9962398,
  author={Juárez, Erika Cervantes and Guzmán, Daniel Sánchez},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Developing the computational thinking process in Physics courses, an empirical study for the learning of the rigid body concept in engineering students}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={In the present Research-to-practice Full-paper, the learning, reasoning, and problem-solving processes, in engineering students, have been analyzed from different approaches, one of them is the computational thinking process, where most of the activities must be performed as a computer does and the reasoning is developed with the well-oriented activities realized by them. In many of the engineering career programs, the Physics courses are fundamental, and because of the diversity in contexts, they have not been seen as a subject where students can develop the computational thinking process. Present work describes an empirical study based on the learning of the rigid body concept in physics, with the use of spreadsheets as an electronic tool for promoting the learning with the programming of all the dynamical system, describing the evolution, generating, and analyzing graphics, and explaining the physical phenomena with a high comprehension and transfer of knowledge. At the end, students identified where the concept can be applied in their professional context with the use of a simulation. The learning sequence was implemented in three sessions of 1.5 hours each one, two diagnostic tests were applied, one for identifying the previous knowledge and use of electronic spreadsheets, the second one used as a pretest and post-test, it was focused on the main concepts of the rigid body system, like forces, kinematics, and circular movement. The sequence was implemented with N = 77, students. Session 1, started with the introduction of electronic spreadsheets for their use in science and engineering, some examples in Physics and Mathematics were described with their respect feedbacking for students. For session two, the rigid body concept was described with the support of electronic spreadsheets, all the dynamics, equations, plotting of the results and the relationships of all variables were described; for reinforcing the concept learned, students were asked to solve two more similar exercises with the use of the spreadsheets as homework, and finally they were asked to record, in groups of three students, a video with the solution of the problem assigned. In the video, they must present the problem description, equations and dynamics involved in the solutions and explaining all the programming steps needed to perform the solution in an electronic spreadsheet with its graphical representation and interpretation of the variables, and a description of implications in the changing values of the variables in the mathematical model. At the end of the sequence, in session three, a virtual simulation related to their professional context was used for the reinforcement of all the concepts learned. For analyzing the impact in their learning process, the Normalized Conceptual Gain was used in the pre-test and post-test, results showed a g = 0.85, which represents a high learning and normalized conceptual gain. Finally, the results showed that the computational thinking process can be developed by students, as they must program equations, analyze data, understand it, and identify graphically the variables involved, linking the learning of a physical concept with a computational tool that let them understand in a more clear, specific, and ordered thinking.},
  keywords={Knowledge engineering;Engineering profession;Solids;Mathematical models;Cognition;Software;Engineering students;Computational thinking;engineering students;electronic spreadsheets for learning;physics courses in engineering;professional skills},
  doi={10.1109/FIE56618.2022.9962398},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9668107,
  author={Aroonsiwagool, Athit and Tuntiwongwanich, Somkiat},
  booktitle={2021 2nd SEA-STEM International Conference (SEA-STEM)}, 
  title={Development of CT Using Need Assessment and Gamification: A Systematic Review}, 
  year={2021},
  volume={},
  number={},
  pages={146-150},
  abstract={This study originates from the content synthesis of studies on computational thinking, need assessment, gamification, and computational thinking with coding from Thai and international scholarly articles published in accredited databases. Then, the synthesis results were integrated into the development of computational thinking through gamification and programming knowledge to improve the efficacy of computational learning. The process commenced with an analysis of the learners' needs obtained through the questionnaires concerning computational thinking. Data analysis illuminated the learners' levels of computational thinking as well as a fundamental understanding of what the learners need to be taught or what areas of skills each learner. With regards to this, conventional teaching approaches may not serve best to transmit the relevant knowledge which may subsequently induce unfavorable attitudes toward computational thinking. With the data elicited through the need assessment, instructors will have a clear direction as to how the pedagogical process should be designed to directly address the needs in each of the computational thinking components. In general, each component of them is rather complex, so the researcher incorporated gamification theory-based learning defined by its enjoyable game mechanisms and challenging nature which makes the coding lesson fun with block programming enabling learners to proficiently grasp the concept of computational thinking.},
  keywords={Systematics;Navigation;Education;Games;Programming;Encoding;Pattern recognition;computational thinking;need assessment;gamification;computational thinking with coding},
  doi={10.1109/SEA-STEM53614.2021.9668107},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{8864603,
  author={Gardeli, Anna and Vosinakis, Spyros},
  booktitle={2019 11th International Conference on Virtual Worlds and Games for Serious Applications (VS-Games)}, 
  title={ARQuest: A Tangible Augmented Reality Approach to Developing Computational Thinking Skills}, 
  year={2019},
  volume={},
  number={},
  pages={1-8},
  abstract={Computational thinking is considered an important skillset for 21st century learners and became a subject of focus in K-12 education in the recent years. It cultivates problem-solving and algorithmic thinking and can be helpful in wider aspects of everyday life, besides programming and computer science. There have been various approaches to teach computational thinking in early education stages that utilize modern technologies, such as physical computing and robotics, and adopt a playful manner. Mobile Augmented Reality is a promising technology along this path that lets users collaborate and interact with both physical and digital elements. However, the technology is still relatively new and has not been studied extensively with students, especially in formal educational settings. In this paper we present ARQuest, a collaborative mobile augmented reality game for developing computational thinking skills of primary school students. The game combines a physical board and tangible tokens with animated 3D content, and students use them to create and solve challenges in a gamified environment. We have performed an exploratory study in two primary schools in order to explore the impact of ARQuest on students' understanding of algorithmic concepts, engagement and collaboration. The study led to a number of interesting conclusions regarding the game, as well as more generic aspects of interacting and collaborating in mobile augmented reality.},
  keywords={Games;Education;Programming profession;Augmented reality;Problem-solving;computational thinking;mobile augmented reality;tangible augmented reality;game-based learning;collaborative learning},
  doi={10.1109/VS-Games.2019.8864603},
  ISSN={2474-0489},
  month={Sep.},}@INPROCEEDINGS{7313962,
  author={Zou, Lin and Yang, Hongji},
  booktitle={2015 21st International Conference on Automation and Computing (ICAC)}, 
  title={Creative computing for decision making: Combining game theory and lateral thinking}, 
  year={2015},
  volume={},
  number={},
  pages={1-6},
  abstract={Our research aims to improve the Traditional Decision Making Steps with efficiency and effectiveness. Creative Decision Making Steps are created through combining Game Theory and Lateral Thinking approach in an Enhanced Computer System. Computer system is able to help people make decisions as a result. In the current situation, computer system is a tool for human to output result after inputting data. Users could use the result to make decisions. In the past, data collection is limited to hardware. But big data and cloud computing change the situation, besides the infinite storage, the relationships among all the information are presented at the same time. Which means, if combine the creative methodology and logical process such as Game Theory and Lateral Thinking in computer system, computers will become more reliable in Decision Making.},
  keywords={Computers;Vehicles;Software;Computational modeling;Nash equilibrium;Creative Computing;Decision Making;Game Theory;Lateral Thinking},
  doi={10.1109/IConAC.2015.7313962},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8622511,
  author={Underwood, William and Weintrop, David and Kurtz, Michael and Marciano, Richard},
  booktitle={2018 IEEE International Conference on Big Data (Big Data)}, 
  title={Introducing Computational Thinking into Archival Science Education}, 
  year={2018},
  volume={},
  number={},
  pages={2761-2765},
  abstract={The discipline of professional archivists is rapidly changing. Most contemporary records are created, stored, maintained, used and preserved in digital form. Most graduate programs and continuing education programs in Archival Studies address this challenge by introducing students to information technology as it relates to digital records. We propose an approach to addressing this challenge based on introducing computational thinking into the graduate archival studies curriculum.},
  keywords={Computational modeling;Libraries;Appraisal;Cultural differences;Metadata;Education;Mathematics;computational thinking;archival science;MLIS curriculum},
  doi={10.1109/BigData.2018.8622511},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10148553,
  author={Zhang, Shuhan and Wong, Gary K. W.},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Cross-lagged Associations between Cognitive Performance and Attitudinal Beliefs of Computational Thinking: A Preliminary Study}, 
  year={2022},
  volume={},
  number={},
  pages={562-566},
  abstract={With the worldwide momentum of promoting computational thinking (CT) education, greater attention has been received on assessing learning effects in both cognitive and attitudinal aspects. However, the cross-lagged relations between the two were unknown. This study investigated the cross-lagged association between CT cognitive performance and attitudinal beliefs of primary students through a three-wave longitudinal design. The paper reported the first two waves of data collection, with an 8-month time interval, involving a sample of 392 students (age 9-11). At each wave, students were asked to complete a CT cognitive test and a self-reported attitude survey. Through cross-lagged analyses, the results showed that prior CT cognitive performance significantly predicted later learning attitudes, and the paths remained significant after controlling for students’ demographics and learning experiences. The study contributes to the literature by pioneering documenting the cross-lagged relations between students’ cognitive and attitudinal attainments in the context of CT education.},
  keywords={Surveys;Attitude control;Computational modeling;Education;Data collection;computational thinking;coding attitudes;longitudinal study;cross-lagged panel model},
  doi={10.1109/TALE54877.2022.00098},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{6013931,
  author={Chun-Hong, Wang and Qiao-Ling, Wang},
  booktitle={2011 IEEE 3rd International Conference on Communication Software and Networks}, 
  title={A study of the Classified teaching of “Fundamentals of Information Technology” course based on computational thinking}, 
  year={2011},
  volume={},
  number={},
  pages={702-704},
  abstract={According to the teaching problem of “Fundamentals of Information Technology” course, a strategy of Classified teaching based on computational thinking is brought forward. At the same time, it gives the design of Classified teaching task and the actual teaching cases.},
  keywords={Computational modeling;Technological innovation;Educational institutions;Computational Thinking;Classified teaching;fundamentals of information technology},
  doi={10.1109/ICCSN.2011.6013931},
  ISSN={},
  month={May},}@INPROCEEDINGS{9272455,
  author={Alegre, Fernando and Moreno, Juana and Dawson, Trent and Tanjong, Egbeyong E. and Kirshner, David H.},
  booktitle={2020 Research on Equity and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Computational Thinking for STEM Teacher Leadership Training at Louisiana State University}, 
  year={2020},
  volume={1},
  number={},
  pages={1-2},
  abstract={We developed and piloted a new course titled Computer Science Teaching Methods (CSM) in the fall semester of 2019. This course was based on materials developed from a previous program that trained high school teachers in computational thinking and programming through LSU's Cain Center. Pedagogical content knowledge informed the design of this course. Also, data gathered from teacher and instructor interaction at multiple sites during the summer STEM professional development program contributed to the courses' design. The CS Methods course targeted undergraduate computer science majors who were considering a career in teaching or who were interested in CS pedagogy. We encountered several challenges recruiting and retaining students and found that computer science students attracted to teaching careers do not fall into the stereotype of most computer science majors. Participation of women was higher than the average undergraduate CS courses. A disconnect appeared between the pedagogical practices promoted for teaching computing at the high school level and those being practiced at the college level. After learning about the 5E pedagogical model for teaching computing, students expressed interest in the potential of using more student-centered instruction, not only for high school instruction, but also for their own college courses. An area of disconnect also emerged in the programming formats, as all the students were comfortable with Java but all were unfamiliar with popular block-based programming platforms, such as Scratch. The transition from the CS curriculum taught in high schools to what follows in college needs to be smoother.},
  keywords={Programming profession;Computational modeling;Training;STEM;Encoding;Planning;Interviews;computational thinking;computer science teachers;Research Practitioner Partnership},
  doi={10.1109/RESPECT49803.2020.9272455},
  ISSN={},
  month={March},}
