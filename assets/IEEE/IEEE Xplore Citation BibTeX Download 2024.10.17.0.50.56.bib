@ARTICLE{6129960,
  author={Magana, Alejandra J. and Mathur, Jyoti I.},
  journal={Computing in Science & Engineering}, 
  title={Motivation, Awareness, and Perceptions of Computational Science}, 
  year={2012},
  volume={14},
  number={1},
  pages={74-79},
  abstract={To meet the urgent need for a well-prepared CS&E workforce, we must better understand how students perceive the field.},
  keywords={Professional aspects;Computer science education;Computational modeling;Science (general);Research and development;Student perceptions;computational science;computational life science;computational engineering;interest and motivators;qualitative research;scientific computing},
  doi={10.1109/MCSE.2012.13},
  ISSN={1558-366X},
  month={Jan},}@INPROCEEDINGS{6990184,
  author={Roscoe, Jonathan Francis and Fearn, Stephen and Posey, Emma},
  booktitle={2014 International Conference on Interactive Technologies and Games}, 
  title={Teaching Computational Thinking by Playing Games and Building Robots}, 
  year={2014},
  volume={},
  number={},
  pages={9-12},
  abstract={Computing in schools has gained momentum in the last two years resulting in GCSEs in Computing and teachers looking to up skill from Digital Literacy (ICT). For many students the subject of computer science concerns software code but writing code can be challenging, due to specific requirements on syntax and spelling with new ways of thinking required. Not only do many undergraduate students lack these ways of thinking, but there is a general misrepresentation of computing in education. Were computing taught as a more serious subject like science and mathematics, public understanding of the complexities of computer systems would increase, enabling those not directly involved with IT make better informed decisions and avoid incidents such as over budget and underperforming systems. We present our exploration into teaching a variety of computing skills, most significantly "computational thinking", to secondary-school age children through three very different engagements. First, we discuss Print craft, in which participants learn about computer-aided design and additive manufacturing by designing and building a miniature world from scratch using the popular open-world game Mine craft and 3D printers. Second, we look at how students can get a new perspective on familiar technology with a workshop using App Inventor, a graphical Android programming environment. Finally, we look at an ongoing after school robotics club where participants face a number of challenges of their own making as they design and create a variety of robots using a number of common tools such as Scratch and Arduino.},
  keywords={Computers;Three-dimensional displays;Programming;Educational institutions;Software;Robots;computational thinking;e ducation;games;technology;STEM},
  doi={10.1109/iTAG.2014.15},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8995066,
  author={Gerosa, Anaclara and Koleszar, Víctor and Gómez-Sena, Leonel and Tejera, Gonzalo and Carboni, Alejandra},
  booktitle={2019 XIV Latin American Conference on Learning Technologies (LACLO)}, 
  title={Educational Robotics and Computational Thinking Development in Preschool}, 
  year={2019},
  volume={},
  number={},
  pages={226-230},
  abstract={Programming robots playing with the environment is an ongoing research project aimed at developing a robot and intervention program capable of enhancing young children's cognitive abilities and computational thinking skills. Using a robot sensitive to color and distance, children are able to use everyday objects in order to interact with it and program its movements. An eleven session intervention program using this robot was designed with the objective of creating playful learning instances were children would practice abilities associated with what is generally thought of as computational thinking. We'll assess children's computational thinking, fluid intelligence, working memory, planning, sequencing, number recognition and magnitude comparison, vocabulary, mental rotation, inhibitory control and cognitive flexibility to test for cognitive effects of the intervention. An active control in which children interact with the robot by remotely controlling it was used.},
  keywords={Robots;Robot sensing systems;Color;Computational modeling;Robot kinematics;Motors;Silicon;computational thinking;educational robotics;early childhood},
  doi={10.1109/LACLO49268.2019.00046},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{8363437,
  author={Moreno-León, Jesús and Román-González, Marcos and Robles, Gregorio},
  booktitle={2018 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={On computational thinking as a universal skill: A review of the latest research on this ability}, 
  year={2018},
  volume={},
  number={},
  pages={1684-1689},
  abstract={In recent years we are witnessing movements around the world to bring computer programming to schools. Lots of these initiatives, however, have been conceived to address the shortage of professionals in the technology sector, an approach that is encouraged by the software industry. On the contrary, this article argues that the focus should swift towards computational thinking, an ability that goes far beyond computer science or technology, fostering fundamental skills for the citizens of the twenty-first century. In this paper we summarize the findings of recent investigations that study computational thinking from different perspectives, explaining what this new skill is made of, presenting outcomes of school interventions showing relationships between the development of this ability and improvements in different subjects and soft skills, presenting technologies to foster its development, and reviewing tools that support educators in the assessment of this skill.},
  keywords={Programming profession;Encoding;Software;Europe;Industries;computational thinking;programming;skills;computer science education;digital literacy},
  doi={10.1109/EDUCON.2018.8363437},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9458007,
  author={Mirza, Mahrukh Sameen and Datta, Soma},
  booktitle={2020 International Conference on Computational Science and Computational Intelligence (CSCI)}, 
  title={Developing Software Using Agile and Design Thinking Framework}, 
  year={2020},
  volume={},
  number={},
  pages={1819-1823},
  abstract={There are several software companies that develop several products. Are all of them used? Even after software companies following Agile framework methodology to develop their software's, many software's still fail to meet the requirements and eventually customers end up not using them. This is usually because the software teams fail to completely understand the user requirements. Agile framework and Design Thinking framework can be used together to gain customer empathy and to overcome this problem. This study discusses how Agile framework and Design Thinking supports the same principles and can be used to reduce software development failures. A Flashcard application was developed to validate Agile framework Design Thinking framework. The results are discussed in the validation and result section.},
  keywords={Scientific computing;Customer satisfaction;XML;Companies;Production;Software;C# languages;Agile framework;Design thinking;software development;communication;prototype},
  doi={10.1109/CSCI51800.2020.00335},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{10685722,
  author={Gao, Hanrui and Zhang, Yi and Wang, Kang and Yu, Fan and Li, Tianyu},
  booktitle={2024 International Symposium on Educational Technology (ISET)}, 
  title={Using 3D Virtual and Physical Robot Alone or Together-Which Works Better for Learning engagement and Computational Thinking}, 
  year={2024},
  volume={},
  number={},
  pages={381-385},
  abstract={With the development of virtual reality technology, 3D virtual robots are increasingly used in primary school robot programming teaching. Therefore, in this study, 64 fifth-grade students were divided into two groups, and the experimental research method was used to investigate which method is more conducive to improving students’ learning engagement and computational thinking by combining or separately using 3D virtual robots and physical robots in robot programming courses. The results show that the combined use of 3D virtual and physical robots in a robot programming course improves students’ Programming self-efficacy scale and learning engagement, thus improving students’ computational thinking.},
  keywords={Three-dimensional displays;Virtual reality;Educational technology;Programming profession;Robot programming;3D VR Robot;Physical Robot;Robot Programming;Computational Thinking;Learning engagement},
  doi={10.1109/ISET61814.2024.00082},
  ISSN={2766-2144},
  month={July},}@INPROCEEDINGS{10565688,
  author={Talavera-Mendoza, Fabiola and Paucar, Fabian Hugo Rucano and Alarcón, Diego Antonio Urdanivia},
  booktitle={2023 XIII International Conference on Virtual Campus (JICV)}, 
  title={Self-Efficacy to Train Computational Thinking Skills in Pre-Service Teachers*}, 
  year={2023},
  volume={},
  number={},
  pages={1-4},
  abstract={In this work we, study the self-efficacy of the use of the Choreographe software in block programming using the NAO robot in order to develop instructional videos in the classroom within the framework of Computational Thinking. The put forward objectives were three; (1) Evaluate the level of significance of self-efficacy and the applicability of CT concepts. (2) Measure the relationship between the applicability of CT concepts with the ease of use, usefulness, attitude and intention to work in the future with an instructional program. (3) Establish the percentages and means of the items of the variables concepts CT and self-efficacy. Thus, from a quantitative approach, we propose to create a questionnaire to measure self-efficacy and the level of knowledge acquired in block programming. 4 practical workshops of 2 hours each have been carried out with 28 initial training students between the ages of 23 and 27. The results yielded a positive correlation between the variables self-efficacy and computational thinking. Highlighting a positive acceptance of self-efficacy in the use of Choreographe software in the block programming experience and a growing ascendancy of interaction.},
  keywords={Training;Correlation;Conferences;Social sciences;Programming;Market research;Software;Self efficacy;teachers in initial training;computational thinking;block programming},
  doi={10.1109/JICV59748.2023.10565688},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9015331,
  author={Sasaki, Yuji and Fukui, Masanori and Hirashima, Tsukasa},
  booktitle={2019 IEEE 8th Global Conference on Consumer Electronics (GCCE)}, 
  title={Development of iOS Software n-Queens Problem for Education and Its Application for Promotion of Computational Thinking}, 
  year={2019},
  volume={},
  number={},
  pages={563-565},
  abstract={In this study, the authors develop an iOS software “n-Queens Problem for Education” and discuss its application in the promotion of computational thinking. As it has already been pointed out in [1] and [2], playing games and solving puzzles are effective in cultivating computational thinking, and our gaming software can be a good tool to cultivate skills regarding “Generalization (Pattern Recognition),” “Abstraction;' and “Algorithms” of computational thinking. Our software “n-Queens Problem for Education” is based on the well-known “The n-Queens Puzzle,” which involves solving a puzzle of placing eight chess queens on an n × n chessboard so that they do not attack one another. This puzzle is a good way for students to learn computational thinking. Since this software shows the queens' moves and evaluates solutions, you can concentrate on using your brain without writing down the moves or erasing wrong solutions. In addition, this software has features such as the symmetry operations of rotation and reflection of the board that help users study their solutions.},
  keywords={Education;Software;Games;Pattern recognition;Software algorithms;Problem-solving;Conferences;Computational Thinking;iOS Application;n-Queens Problem;Algorithmic Thinking;Problem Solving Skills},
  doi={10.1109/GCCE46687.2019.9015331},
  ISSN={2378-8143},
  month={Oct},}@INPROCEEDINGS{9429049,
  author={Ramadhani, Nira Rizki and Mulyanto, Adi and Niwanputri, Ginar Santika},
  booktitle={2020 7th International Conference on Advance Informatics: Concepts, Theory and Applications (ICAICTA)}, 
  title={Designing Interaction and User Interface of Computational Thinking Digital Game for Children using User-Centered Design Approach}, 
  year={2020},
  volume={},
  number={},
  pages={1-6},
  abstract={In the 21st Century, technology has become a part of almost everyone's lives in the world and will keep on evolving. Therefore, people's way of thinking must be able to follow the technology evolution. Since 2006, Computational Thinking (CT) has been stated as a fundamental skill for everyone, not just for computer scientists. The concept of CT is very important to be taught to children so that it can be applied as early as possible. In the digital era that is happening now, the suitable CT learning for children is in the form of digital game as an application on smartphones. The interaction and interface of this application is designed using user-centered design approach in ISO 9241210:2010. In order to make this application useful for children, it should be effective to use, easy to learn, and enjoyable. Those three things are the usability and user experience goals of this application. Usability testing is conducted to validate the achievement of the goals by using several metrics, such as completion rate, Single Ease Question (SEQ), System Usability Scale (SUS), and Intrinsic Motivation Inventory for interest/enjoyment subscale. The completion rate is 97,4 %/100% for usability goal effective to use, the SEQ score is 6,12/7 and the SUS score is 70,5/100 for usability goal learnability, and the IMI interest/enjoyment subscale score is 6,02/7 for user experience goal enjoyable. This application has achieved the usability and user experience goals because all the scores from the measurements using those four metrics are above the average.},
  keywords={Measurement;User centered design;Prototypes;Games;User interfaces;User experience;Usability;interaction design;computational thinking;game;user-centered design;prototype;usability testing},
  doi={10.1109/ICAICTA49861.2020.9429049},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{9201830,
  author={Xiduo, Wang and Jialin, Liu and Zhizhen, Zhang},
  booktitle={2020 15th International Conference on Computer Science & Education (ICCSE)}, 
  title={Sustainable C++ Education in General High School: from Teaching Programming Skills to Developing Computational Thinking}, 
  year={2020},
  volume={},
  number={},
  pages={35-38},
  abstract={In the age of Artificial Intelligence, the status of C++ Education Program in China's general high schools is somewhat embarrassing. On one hand, the programming training courses targeted K-12 students have been a big industry; on the other hand, the four editions of the current National High School Information Technology Curriculum textbooks are all in python. Based on the teaching experience of frontline teachers who have been teaching in general high schools for 18 years and the analysis of China's latest curriculum standards and core literacy requirements in information technology, this paper explores how general high schools can achieve sustainable C++ education program. At the curriculum level, combining the characteristics of C++ and students' developmental needs, two series of courses are formed: the General Studies Series and the Competition Series, the General Studies Series feature "wide range of content" and "real problem-driven"; the Competition Series featuring "deep" and "classic problems of computer science algorithms". At the teaching level, putting "problem understanding", "algorithm design", "algorithm experimentation and analysis" and "algorithm thinking communication" at the core of teaching practice, in stages and according to the types of students, differential teaching strategies are adopted, attaching importance to the problem context design and algorithm design, and emphasizing the process of "computational thinking" of the students. Only based on the all-round development of students' individuality, adjusting the curriculum and teaching, can the C++ Programming Education of ordinary high school be sustainable.},
  keywords={Education;C++ languages;Programming profession;Information technology;Standards;C++ programming education;sustainability;computational thinking},
  doi={10.1109/ICCSE49874.2020.9201830},
  ISSN={2473-9464},
  month={Aug},}@INPROCEEDINGS{7344415,
  author={Li, Ying and Liu, Yu and Shu, Pan},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teaching research and practice of blended leaning model based on computational thinking}, 
  year={2015},
  volume={},
  number={},
  pages={1-8},
  abstract={With the wide use of computers, how to make students understand the special way of thinking of computer science and find the appropriate methods to solve problems in their own fields like computer scientists are the challenges for educators. This paper proposed a computational thinking model based on blended learning Mctbbl and a descending dimension method for problem-space transformation. The Mctbbl model analyzes and researches the application of computational thinking in computer science by the organic combination of computational thinking and blended learning in a life-cycle perspective. On one hand, the model can summarize the core concepts and important principles in computer science and extract the typical thoughts and general methods of solving problems; on the other hand, the model can implement the teaching and learning of computational thinking by means of blended learning. Based on the model, the teachers can teach the problem-solving process by using computer more intuitively and clearly and the students can understand the application of computer knowledge more easily and simply. The Mctbbl prolongs the study life cycle which takes preview as beginning, teacher-student discussion as body and practical application as core to ensure integrity, endurance and consistency of teaching.},
  keywords={Decision support systems;Education;Handheld computers;Computational modeling;Automation;Scientific computing;Arrays;Computational Thinking;Blended learning;Descending dimension;Abstract;Automation},
  doi={10.1109/FIE.2015.7344415},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{6778560,
  author={Ribeiro, Leila and Nunes, Daltro José and Cruz, Marcia Kniphoff da and Matos, Ecivaldo de Souza},
  booktitle={2013 2nd Workshop-School on Theoretical Computer Science}, 
  title={Computational Thinking: Possibilities and Challenges}, 
  year={2013},
  volume={},
  number={},
  pages={22-25},
  abstract={The aim of this paper is to discuss the importance of computational thinking and how to include techniques to teach this kind of ability in schools in Brazil. First, we discuss what Computational Thinking is and the importance of teaching such skill in school. Then, we list some of the challenges that are involved in introducing this discipline in school curricula.},
  keywords={Educational institutions;Computer science;Computers;Algorithm design and analysis;Complexity theory;computational thinking;elementary and middle school;high school;education in Brazil},
  doi={10.1109/WEIT.2013.32},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9796660,
  author={Johnson, Marina and Swanson, Hillary and Edwards, John},
  booktitle={2022 Intermountain Engineering, Technology and Computing (IETC)}, 
  title={Syntax Exercises and Their Effect on Computational Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={1-6},
  abstract={Job opportunities and the need for programmers are increasing. Companies are looking for new hires who have the ability to learn how to learn, who have computational thinking skills. Student dropout rate in computer science is the highest among college majors. Educators are striving to find a way to teach efficiently and effectively the technical and the problem solving skills students need. In this paper we will be studying the effects of syntax exercises on a subject's ability to think computationally and precisely. We tested our process on professionals and students. Half of the professionals were in the computer science field and half of our students did syntax exercises. The other half of professionals and students had no exposure to syntax to compare. Our purpose is to find if teaching students syntax exercises are still relevant and can teach both technical and computational thinking skills.},
  keywords={Computer science;Engineering profession;Education;Companies;Syntactics;Computer science education;Problem-solving;syntax;precision in thinking;computation thinking;programming;computing eduation},
  doi={10.1109/IETC54973.2022.9796660},
  ISSN={},
  month={May},}@INPROCEEDINGS{6143083,
  author={Magana, Alejandra J. and Marepalli, Prabhakar and Clark, Jason V.},
  booktitle={2011 Frontiers in Education Conference (FIE)}, 
  title={Work in progress — Integrating computational and engineering thinking through online design and simulation of multidisciplinary systems}, 
  year={2011},
  volume={},
  number={},
  pages={S3C-1-S3C-2},
  abstract={Computation is an increasingly essential tool for doing scientific research. It is expected that future engineers will need to engage and understand computing in order to work effectively with computational systems, technologies, and methodologies. Toward this goal, we leverage our previous work with SugarAid v0.2 to allow learners to test their knowledge of computing by applying engineering concepts. Applied concepts include designing multidisciplinary systems including electrical, mechanical, fluidic, and thermal components. Through this method, we expect learners to enhance their computing knowledge by applying their engineering knowledge.},
  keywords={Computational modeling;Mathematical model;Knowledge engineering;Education;Sugar industry;Glass;Conferences;computational thinking;engineering thinking;computational simulations;systems design},
  doi={10.1109/FIE.2011.6143083},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9993448,
  author={Xu, Yilong and Zhao, Fujing},
  booktitle={2022 European Conference on Communication Systems (ECCS)}, 
  title={Research on Topic Evolution Analysis of Computational Thinking Based on Maximum Likelihood Estimation and CiteSpace}, 
  year={2022},
  volume={},
  number={},
  pages={6-9},
  abstract={Using the CiteSpace and a keyword trend computational method based on log-likelihood value, relative change rate, and betweenness centrality, and a set of keyword trends and type rules, this research comes up with the core words, common words, and frontier words in computational thinking research field, and their evolution history and trends. In computational thinking research field, the stable core words have “thinking”, the rising core words have “education”, the stable common words have “design” and “framework”, the fluctuating common words have “model” and “classroom”, and the frontier words have “game”, etc.},
  keywords={Analytical models;Maximum likelihood estimation;Computational modeling;Soft sensors;Games;Market research;Frequency estimation;computational thinking;co-word analysis;word frequency analysis},
  doi={10.1109/ECCS54035.2022.00010},
  ISSN={},
  month={May},}@INPROCEEDINGS{7814791,
  author={Chaudhary, Vidushi and Agrawal, Vishnu and Sureka, Pragya and Sureka, Ashish},
  booktitle={2016 IEEE Eighth International Conference on Technology for Education (T4E)}, 
  title={An Experience Report on Teaching Programming and Computational Thinking to Elementary Level Children Using Lego Robotics Education Kit}, 
  year={2016},
  volume={},
  number={},
  pages={38-41},
  abstract={We present our approach and experiences in teaching computational thinking, problem solving, team-work and project management skills to several elementary level children using Lego Mindstorms EV3 robotics education kit. We taught students how to design, construct and program robots using components such as motors, sensors, wheels, axles, beams, connectors and gears. Students also gained knowledge on basic programming constructs such as control flow, loops, branches and conditions using a visual programming environment. We carefully observed how students performed various tasks and solved problems. We present experimental results which demonstrates that our teaching methodology consisting of both the course content and pedagogy was useful in imparting the desired skills and knowledge to elementary level children.},
  keywords={Programming profession;Education;Robot sensing systems;Games;Computational Thinking and Programming;Elementary Level Children;Lego Mindstorms EV3;Robotics Education Kit;Technology for Education},
  doi={10.1109/T4E.2016.016},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{9453926,
  author={Relkin, Emily and Bers, Marina},
  booktitle={2021 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={TechCheck-K: A Measure of Computational Thinking for Kindergarten Children}, 
  year={2021},
  volume={},
  number={},
  pages={1696-1702},
  abstract={In this pilot study we created and evaluated a new version of the TechCheck Computational Thinking (CT) assessment designed specifically for kindergarten students. The original version of TechCheck was validated in first and second graders and consists of 15 multiple choice unplugged challenges drawn from six CT domains. The kindergarten version, called TechCheck-K, consists of similar unplugged challenges but reduces the number of response choices from four to three and uses exclusively non-verbal material in the responses to accommodate younger, pre-literate children. We administered TechCheck-K to N =89 kindergarten students from four schools, including 45 boys and 44 girls with no coding experience. Participants completed the assessment in an average of 23.43 minutes. TechCheck-K scores were normally distributed (M =8.26, SD =2.33). Mean scores were numerically higher in boys (M =8.71, SD = 2.69) than girls (M =8.05, SD = 2.07). The difference between genders was not significant. The pattern of correct responses to the 15 TechCheck-K items correlated (r =.76) with the pattern observed in first and second graders on the original TechCheck, providing evidence that comparable CT constructs are measured by the two versions of the instrument. Results of this pilot study indicate that TechCheck-K has acceptable characteristics for assessment of CT in kindergarten children.},
  keywords={Instruments;Conferences;Encoding;Engineering education;Computational thinking;Assessment;Unplugged;Computer Science;Early Childhood Education},
  doi={10.1109/EDUCON46332.2021.9453926},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9373147,
  author={Elshahawy, Menna and Bakhaty, Mariam and Sharaf, Nada},
  booktitle={2020 24th International Conference Information Visualisation (IV)}, 
  title={Developing Computational Thinking for Children with Autism using a Serious Game}, 
  year={2020},
  volume={},
  number={},
  pages={761-766},
  abstract={Autism Spectrum Disorder (ASD) refers to a group of life-long conditions that are characterized by qualitative impairments in social interactions, problem solving and constructive skills. Children with learning disabilities such as autism face challenges in generating suitable and optimal solutions to problems. Those challenges can severely affect their interactions with others. Thus, teaching children with ASD problem solving and computational thinking skills could help them resolve conflicts that may happen in their everyday life. Effective problem solving is critical for their academic and social success and since one of the most effective tools for teaching children with autism is through using visual aids, the work in this paper reports the design and implementation of a serious game that aims at cultivating problem solving skills and teaching programming concepts to children with ASD. The presented game is suitable for children 7 to 14 years of age diagnosed with ASD to learn programming concepts. The preliminary prototype for the game gained positive responses from experts and 12 children with ASD from Caritas Egypt association and Hope Academy.},
  keywords={Autism;Visualization;Education;Prototypes;Serious games;Problem-solving;Programming profession;Computational Thinking;Visual Learners;Children;Autism;Programming},
  doi={10.1109/IV51561.2020.00135},
  ISSN={2375-0138},
  month={Sep.},}@INPROCEEDINGS{9274021,
  author={Yang, Dazhi and Baek, Youngkyun and Swanson, Steve},
  booktitle={2020 IEEE Frontiers in Education Conference (FIE)}, 
  title={Developing Computational Thinking through Project-Based Airplane Design Activities}, 
  year={2020},
  volume={},
  number={},
  pages={1-4},
  abstract={This study investigated the outcome of project-based, airplane design activities on promoting computational thinking (CT) in sixth grade students in the context of an integrated STEM learning environment. A curriculum unit of airplane design activities was implemented in a sixth grade classroom over 10 days. The students' CT skills measured by the Bebras Challenges were significantly improved after their completion of the airplane design curriculum unit.},
  keywords={Airplanes;Education;Problem-solving;STEM;Pattern recognition;Data models;Atmospheric modeling;computational thinking;integrated STEM;computing education;engineering design;project-based learning},
  doi={10.1109/FIE44824.2020.9274021},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9499901,
  author={Dutra, Taynara Cerigueli and Felipe, Daniel and Gasparini, Isabela and Maschio, Eleandro},
  booktitle={2021 International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Educational Digital Games and Computational Thinking for students with Intellectual Disabilities - Guidelines for accessibility}, 
  year={2021},
  volume={},
  number={},
  pages={314-316},
  abstract={Computational Thinking (CT) refers to cognitive skills of logical reasoning, abstraction, and problem-solving that can be automated. Students with intellectual disabilities have cognitive deficits that can be improved by working the CT. To ensure that students develop this ability it is important to use appropriate and accessible tools for everyone and educational digital games are presented as a possibility to teach CT in a fun and engaging way. The present study aims to understand the relationship between the learning of children with intellectual disabilities and the existing guidelines for the development of accessible educational digital games, to promote CT for them. Also, a set of these guidelines is provided for designing educational digital games aimed at students with intellectual disabilities.},
  keywords={Bibliographies;Games;Tools;Search problems;Cognition;Problem-solving;Guidelines;computational thinking;educational digital games;intellectual disabilities;accessibility},
  doi={10.1109/ICALT52272.2021.00101},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{10402181,
  author={Yang, Guang and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle={2023 IEEE Integrated STEM Education Conference (ISEC)}, 
  title={Data-driven Analysis of Elementary School Students’ Computational Thinking through Scratch Projects}, 
  year={2023},
  volume={},
  number={},
  pages={234-237},
  abstract={The development of computer science has led to an increase in programming education for younger people. Many countries have begun programming education in elementary schools. As is a relatively new subject in elementary education, the course design and textbooks for programming education remain under development. The growth trend in computational thinking (CT) is helpful for educators to teach suitable programming concepts to students. Scratch, which is mostly used as an introductory programming language for elementary school students, can be evaluated to reflect students’ CT. In this work-in-progress research, we conducted a data-driven analysis on fourth-grade students’ CT growth in their first 3 years of programming learning by evaluating their Scratch projects. A preliminary result shows that CT grows rapidly in the first 2 years and tends to be stable in the third year. The reasons for the difference in growth of specific CT concepts are discussed.},
  keywords={Computer languages;Education;Market research;Programming profession;Computational thinking;Elementary school;Programming education;Scratch},
  doi={10.1109/ISEC57711.2023.10402181},
  ISSN={2473-7623},
  month={March},}@INPROCEEDINGS{9790933,
  author={Tanioka, Hiroki and Yano, Rina},
  booktitle={2021 10th International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={Development and Evaluation of Quizzes Aimed at Quantifying Computational Thinking}, 
  year={2021},
  volume={},
  number={},
  pages={188-191},
  abstract={Programming education will be compulsory in elementary schools in Japan from 2020, but it is still little information on how to measure the effects of lessons conducted for students. In this study, to measure objectively and quantitatively the educational effect of programming education, we developed 30 quizzes of measuring the ability of computational thinking. In this paper, focusing on the programming experience of college students and above, we confirmed the measurable ability using these quizzes.},
  keywords={Education;Focusing;Informatics;Programming profession;learning analytics;programming education;computational thinking},
  doi={10.1109/IIAI-AAI53430.2021.00033},
  ISSN={2770-8470},
  month={July},}@INPROCEEDINGS{9148514,
  author={Xu, Can and Feng, Zhiyong and Qi, Peng and Sun, Yan},
  booktitle={2020 International Wireless Communications and Mobile Computing (IWCMC)}, 
  title={An Automatic Analysis Tool Based on Computational Thinking for BlockPy Programs}, 
  year={2020},
  volume={},
  number={},
  pages={2045-2050},
  abstract={BlockPy is a block-based program language which has both block-based interface and traditional text-based interface. It fills the gap between block-based programming and language coding. But there is little work that focuses on the Computational Thinking(CT) evaluation of BlockPy programs. In this paper, we design and implement a BlockPy Analysis Tool to assess the CT skills of BlockPy programs automatically. We use Python's built-in AST module to analyse each node in the abstract syntax tree(AST) of each BlockPy program. Then, considering the characteristics of Python language, we propose a new CT Evaluation Criteria based on Scratch Analysis Tool(SAT). Under the guidance of the CT Evaluation Criteria, we propose a detailed scoring program to analyze each node of the program and get the CT score. Experimental results show the superiority of our tool compared with other analysis tools.},
  keywords={Tools;Python;Encoding;Syntactics;Programming;Complexity theory;Visualization;BlockPy;Computational Thinking;AST analysis;CT score assession},
  doi={10.1109/IWCMC48107.2020.9148514},
  ISSN={2376-6506},
  month={June},}@INPROCEEDINGS{4725519,
  author={Sun, Zhaoyang and Liu, Jihong},
  booktitle={2008 International Symposium on Computational Intelligence and Design}, 
  title={A Design Thinking Process Model for Capturing and Formalizing Design Intents}, 
  year={2008},
  volume={2},
  number={},
  pages={330-333},
  abstract={This paper presents a design thinking process model that records not only the design procedure and decisions but also the design intents behind them. The design thinking process is evolved based on the interaction among design intents, operations and justifications. The taxonomy of design intents is explored. Based on different pairs of design intents and operations, segments of the design thinking process are identified. A design thinking process knowledge management prototype system is developed for modeling design thinking process. An example of the original design of an automatic teller machine (ATM) demonstrates how the design thinking process model is represented.},
  keywords={Process design;Computational intelligence;Sun;Mechanical engineering;Design automation;Taxonomy;Knowledge management;Prototypes;Management information systems;Aerospace engineering;Design process;Design thinking process model;Design intent},
  doi={10.1109/ISCID.2008.192},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{4028181,
  author={Wang, Pei-jin},
  booktitle={2006 International Conference on Machine Learning and Cybernetics}, 
  title={Learning and Control of Human-Like Thinking Process}, 
  year={2006},
  volume={},
  number={},
  pages={850-854},
  abstract={Human thinking is probably divided into three kinds: iconic imagery thinking, abstract logical thinking and afflatus thinking, but human control thinking process maybe classified as two kinds which are active control thinking process and passive control thinking process. The control methods and strategy of each control thinking process are discussed in this paper. The test results are given in this paper, it is proved that the research content is right and could be used in the process control. It provides the basis for human-like intelligent control to be used in complex system},
  keywords={Humans;Process control;Control systems;Intelligent control;Artificial intelligence;Computational modeling;Computer simulation;Computer science;Electronic mail;Testing;Learning;Intelligent Control;Human-like Intelligent Control;Human thinking},
  doi={10.1109/ICMLC.2006.258484},
  ISSN={2160-1348},
  month={Aug},}
