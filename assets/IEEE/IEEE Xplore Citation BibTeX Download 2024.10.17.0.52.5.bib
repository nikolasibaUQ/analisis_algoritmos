@INPROCEEDINGS{10148486,
  author={Yin, Stella Xin},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={The Role of Basic Psychological Needs Satisfaction in Primary Student’s Computational Thinking Development}, 
  year={2022},
  volume={},
  number={},
  pages={799-801},
  abstract={Large extant studies highlighted the importance of motivation in promoting students’ CT skills. However, few of them focused on basic psychological needs satisfaction (BPNS) and behavioral engagement. Since needs satisfaction could influence intrinsic motivation and lead to better performance. It is critical to understand whether, and to what extent, the learners’ CT skills are influenced by the level of BPNS. In light of this, the work-in-progress study employed a semester-long intervention to explore the role of BPNS in students’ CT skill development. A total of 600 primary students participated in this study. The findings of this study will contribute to a better understanding of primary students’ motivation in programming learning.},
  keywords={Education;Psychology;Programming profession;computational thinking;primary education;basic psychological needs satisfaction;motivation},
  doi={10.1109/TALE54877.2022.00147},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{10148487,
  author={Cai, Haiyan and Wong, Gary K. W.},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Parental Involvement in Computational Thinking Education: A Systematic Review}, 
  year={2022},
  volume={},
  number={},
  pages={572-579},
  abstract={We conducted a systematic review of studies aimed at exploring the state of parental involvement in computational thinking (CT) education to facilitate students’ efficiency in learning computational thinking. In this review, we started with reviewing theories of parental involvement. Then we investigated and categorized types of parental involvement, parent roles, and parents’ psychological factors in the parenting process. We also supplemented a new involvement form in Level 2 of Hoover-Dempsey and Sandler’s Model of Parental Involvement in CT Education, namely parents’ support with concerns about using technology and CT tools. We proposed the Model of Parental Involvement in Computational Thinking Education. We conducted comprehensive research of related studies on parental involvement in CT education and identified the research gap in involving parents in children’s CT learning.},
  keywords={Systematics;Computational modeling;Education;Psychology;Computational efficiency;Problem-solving;Programming profession;parental involvement (PI);computational thinking (CT);PI types;parent roles;psychological factors},
  doi={10.1109/TALE54877.2022.00100},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{10578918,
  author={Palomés, Xavier Pi I and Verdaguer-Codina, Joan and Casas, Pau Fonseca I and Rubiés-Viera, José Luis},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Physical and Digital Twin with Computational Thinking to Foster STEM Vocations in Primary Education}, 
  year={2024},
  volume={},
  number={},
  pages={1-8},
  abstract={This work aims to explore the application of the physical and digital twin pair as a computational thinking instrument to support learning and exercise proportional reasoning at the ages at which pursuing STEM studies is decided. Diverse studies reveal that the initial decision about the vocation in studies is made towards the end of the primary education stage, also from 8–9 years old. The Digital Transformation Commission of the Engineering Associations of Catalonia is concerned about the low number of young people who decide to pursue STEM studies. STEM explorations in early childhood lay the foundation for lifelong learning. In addition, from age 5, children informally begin to practice proportional reasoning, and in the third year of primary school (8–9 years old), the subject is formally introduced into the Primary Education curriculum. The notion of proportionality is very transversal, and it is one of the fundamental concepts of the STEM field. The consequences of an incomplete understanding of it directly or indirectly affect the attitude of subjects toward mathematics and the STEM world. With the emergence of Industry 4.0, the digital twin concept is becoming one of the central instruments of Digital Transformation. In this paper, we propose using computational thinking to help the understanding of proportional thinking using a physical and digital twin pair. In 2022, computational thinking was introduced into the Spanish and Catalan educational system's early childhood, primary, and secondary education curricula. It includes programming with block languages such as Scratch or Snap!. A digital twin of the system has also been implemented in Snap!. Through the collaboration of a primary school, a workshop has been prepared in which they exercise the concepts of proportional reasoning, such as ratio, proportion, scale, or percentage. The approach followed has consisted of developing a physical system of a floating ball, controlling the electric motor's power with an electronic system based on low-cost elements from the maker world. We have designed a very easy-to-use system for any teacher, and its open-source nature ensures its transparency and documentation. The foam ball rises and remains floating at a height determined by the power supplied to the motor. The control of the system is carried out with Snap!. It will be assumed that the engine revolutions are proportional to the power setpoint. The physical system generates a high level of expectation and attention in the students, facilitating the process of its abstraction. The range of options of the developed system allows experimenting with the actual system and a schematic digital twin with sound effects. In all cases, the same computational thinking tools have been used to exercise the concepts and powerful ideas of proportional reasoning. At the end of the workshop, the understanding of the concepts exercised and the assessment of their personal experience were evaluated. This gave us helpful information to motivate students of these ages and below to maintain their STEM vocation.},
  keywords={Computers;Instruments;Conferences;Toy manufacturing industry;Documentation;Cognition;Digital twins;Microworlds;Digital Twin;STEM;Computational Thinking;Proportional Reasoning},
  doi={10.1109/EDUCON60312.2024.10578918},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{6826132,
  author={Gross, Sebastian and Kim, Mischa and Schlosser, Joachim and Mohtadi, Coorous and Lluch, Dan and Schneider, Dorian},
  booktitle={2014 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Fostering computational thinking in engineering education: Challenges, examples, and best practices}, 
  year={2014},
  volume={},
  number={},
  pages={450-459},
  abstract={Computational Thinking is a core capability for most engineers. The term summarizes a set of skills needed to transform real-life challenges into problems that can be solved with the help of a computer and to apply computer-based solutions to questions at hand. This mindset is fundamental to almost every engineering task. However, teaching Computational Thinking is a great challenge for educators worldwide. In designing and implementing university curricula, one has to take an increasing number of arguments into consideration. Technological progress requires the design, creation, and analysis of increasingly large and complex systems. Engineering working environments and tasks demand interdisciplinary teams and close communication between involved groups. In designing engineering curricula, these factors need to be considered and the necessary skills must be implicitly or explicitly developed. This paper highlights three examples of classes and projects aimed at enabling students to develop and increase Computational Thinking through systematic introduction of computational tools. From these successful case studies, the paper derives six best practices for fostering Computational Thinking in engineering education. A review of several examples is given, that are used to highlight and extract best practices. This provides a comprehensive overview of the relationships and simplifies the application of the aforementioned principles to course and curriculum designs.},
  keywords={Engineering education;Computers;Educational institutions;MATLAB;Robot sensing systems;Hardware;curriculum development;computational thinking;engineering skill set;education concepts specific for engineering education;industry and engineering education;integrated curriculum;education tools;project based learning},
  doi={10.1109/EDUCON.2014.6826132},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{8113295,
  author={Chang, Chih-Kai and Tsai, Yu-Tzu and Chin, Ya-Lun},
  booktitle={2017 6th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)}, 
  title={A Visualization Tool to Support Analyzing and Evaluating Scratch Projects}, 
  year={2017},
  volume={},
  number={},
  pages={498-502},
  abstract={In this paper, we combined a visualization tool and Dr. Scratch website service to support instructors evaluating the Scratch projects on an online social networking forum: scratch.mit.edu. Scratch is a visual programming language used by youth to design programs like animation, game, or music. Their computational thinking skills take place around program decompositions, program patterns, and data representation in the shared Scratch programs (called projects). Through the exploratory work, we found that some cues, such as deep nested iteration, may be successfully used as indicators of users computational thinking skills. This suggests future directions for assessing youths computational thinking skills development and educational opportunities emerging from shared Scratch projects.},
  keywords={Visualization;Programming profession;Computer languages;Computer science education;Tools;Games;visualization;Dr. Scratch;Scratch;visual programming language;computational thinking skill},
  doi={10.1109/IIAI-AAI.2017.83},
  ISSN={},
  month={July},}@INPROCEEDINGS{5295278,
  author={Howland, Katy and Good, Judith and Nicholson, Keiron},
  booktitle={2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={Language-based support for computational thinking}, 
  year={2009},
  volume={},
  number={},
  pages={147-150},
  abstract={This paper explores the potential for simplified programming languages to support the development of computational thinking skills in nonprogrammers. We suggest that novice programming languages might offer a starting point for nonprogrammers to engage with a substantial subset of computational thinking concepts, and assess a number of languages from this perspective. We outline four key computational thinking skills and examine the support provided by existing languages. We then describe additional characteristics which would be important for a new language aimed specifically at developing computational thinking skills.},
  keywords={Computer languages;Computer science;Informatics;Humans;Education;Programming profession;Concrete},
  doi={10.1109/VLHCC.2009.5295278},
  ISSN={1943-6106},
  month={Sep.},}@INPROCEEDINGS{7862024,
  author={Fiorini, Rodolfo A.},
  booktitle={2016 IEEE 15th International Conference on Cognitive Informatics & Cognitive Computing (ICCI*CC)}, 
  title={Deep learning and deep thinking: New application framework by CICT}, 
  year={2016},
  volume={},
  number={},
  pages={117-128},
  abstract={In a previous paper we showed and discussed how computational information conservation theory (CICT) can help us to develop even competitive advanced quantum cognitive computational systems. To achieve reliable system intelligence outstanding results, current computational system modeling and simulation community has to face and to solve two orders of modeling limitations at least. As a solution, we propose an exponential, prespatial arithmetic scheme (“all-powerful scheme”) by CICT to overcome the Information Double-Bind (IDB) problem and to thrive on both deterministic noise (DN) and random noise (RN) to develop powerful cognitive computational frameworks for deep learning, towards deep thinking applications. An operative example is presented. This paper is a relevant contribution towards an effective and convenient “Science 2.0” universal computational framework to develop deeper learning and deep thinking system and application at your fingertips and beyond.},
  keywords={Computational modeling;Brain modeling;Hidden Markov models;Training;Machine learning;Speech recognition;Deep learning;deep thinking;cognitive informatics;computational intelligence;CICT},
  doi={10.1109/ICCI-CC.2016.7862024},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{10675823,
  author={Jacob, Sharin and Baek, Clare and Warschauer, Mark},
  booktitle={2023 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={Computational literacy, language, and culture}, 
  year={2023},
  volume={},
  number={},
  pages={91-95},
  abstract={Computational literacies are becoming increasingly necessary for full societal participation. This paper investigates how Latine and multilingual students leverage their linguistic and cultural resources to develop coding and literacy skills. Data included interviews with Latine and multilingual students, teacher interviews, and teacher co-design meeting notes. Results showed that students learned coding and language through their families and communities, leveraged their cultural knowledge of storytelling to engage in computing, and built self-efficacy through peer support. Findings from this pilot study shed light on how to mobilize Latine and multilingual students’ rich languages and cultures for equitable computer science learning.},
  keywords={Computer science;Engineering computing;Linguistics;Encoding;Global communication;Cultural differences;Interviews;computational literacy;computational thinking;computer science;English learner;multilingual},
  doi={10.1109/RESPECT60069.2023.00026},
  ISSN={},
  month={June},}@INPROCEEDINGS{10398358,
  author={Ouaazki, Abdessalam and Bergram, Kristoffer and Holzer, Adrian},
  booktitle={2023 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Leveraging ChatGPT to Enhance Computational Thinking Learning Experiences}, 
  year={2023},
  volume={},
  number={},
  pages={1-7},
  abstract={Given the pervasive reliance on technology in modern society, teaching Computational Thinking (CT) abilities is becoming increasingly relevant. These abilities, such as modeling and coding, have become crucial for a larger audience of students, not only those who wish to become software engineers or computer scientists. Recent advances in Large Language Models (LLMs), such as ChatGPT, provide powerful assistance to complete computational tasks, by simplifying code generation and debugging, and potentially enhancing interactive learning. However, it is not clear if these advances make CT tasks more accessible and inclusive for all students, or if they further contribute to a digital skills divide, favoring the top students. To address this gap, we have created and evaluated a novel learning scenario for transversal CT skills that leveraged LLMs as assistants. We conducted an exploratory field study during the spring semester of 2022, to assess the effectiveness and user experience of LLM-augmented learning. Our results indicate that the usage of ChatGPT as a learning assistant improves learning outcomes. Furthermore, contrary to our predictions, the usage of ChatGPT by students does not depend on prior CT capabilities and as such does not seem to exacerbate prior inequalities.},
  keywords={Computational modeling;Education;Chatbots;User experience;Software;Task analysis;Springs;Large Language Models;Interactive Learning Environments;Collaborative Learning;Human-Computer Interaction},
  doi={10.1109/TALE56641.2023.10398358},
  ISSN={},
  month={Nov},}@INPROCEEDINGS{9573882,
  author={Saariluoma, Pertti and Karvonen, Antero},
  booktitle={2021 IEEE 4th International Conference on Computing, Power and Communication Technologies (GUCON)}, 
  title={The Psychology of Thinking in Creating AI}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={The broad-scale emergence of AI in industry calls forth basic questions in terms of the knowledge bases and approaches relevant for its design. Engineering design has been mainly developed for electromechanical artifacts. In practice, this has meant that the scientific knowledge required for creating technical artifacts such as engines, cars, ships, cranes, telephones, radios, TVs, and simple data processing units has been natural science. However, one cannot find intelligent processes by means of physics and chemistry. Natural scientific phenomena follow their deterministic laws, but intelligence is based on selection and decision processes. The conceptual landscape of natural science is optimized for different kinds of phenomena than intelligent information processing. Consequently, the basic research under technology design should be rethought in light of the emergence of AI. To grasp intelligent information processing, we need concepts and approaches suited for the task. To create intelligent technologies on this basis, we need concepts and approaches that afford the operationalization of such information in artificial systems. We suggest that psychology of thinking and cognitive modeling provide a logical basis for future AI design.},
  keywords={Industries;TV;Computational modeling;Knowledge based systems;Psychology;Information processing;Telephone sets;AI;Artificial Intelligence;Psychology of Thinking;Design Methods;Cognitive Models;Engineering Design;Computer Science},
  doi={10.1109/GUCON50781.2021.9573882},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8820891,
  author={Pires, Fernanda and Maquine Lima, Fabio Michel and Melo, Rafaela and Serique Bernardo, João Ricardo and de Freitas, Rosiane},
  booktitle={2019 IEEE 19th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Gamification and Engagement: Development of Computational Thinking and the Implications in Mathematical Learning}, 
  year={2019},
  volume={2161-377X},
  number={},
  pages={362-366},
  abstract={The development of Computational Thinking has been pointed out by experts as fundamental in the lives of human beings. This article deals with the application of a game-based didactic sequence based on the fundamentals of Computer Science in a class of primary school children, to promote engagement in the development of mathematical activities and analyze the impact of the development of logical and algorithmic reasoning in the solution of mathematical problems in the classroom. The didactic sequence considered the cognitive development of the children as well as the personal evolution during the process. Preliminary results indicate that the didactic sequence had a positive impact on student learning, showing a rate of learning evolution of 18% in the test group and 5% in the control group.},
  keywords={Mathematics;Games;Computer science;Pattern recognition;Education;Problem-solving;Task analysis;Computational Thinking;Gamification;Didactic Sequence;Math problems},
  doi={10.1109/ICALT.2019.00112},
  ISSN={2161-377X},
  month={July},}@ARTICLE{6871367,
  author={Whitehead, N. Peter and Scherer, William T. and Smith, Michael C.},
  journal={IEEE Systems Journal}, 
  title={Systems Thinking About Systems Thinking A Proposal for a Common Language}, 
  year={2015},
  volume={9},
  number={4},
  pages={1117-1128},
  abstract={The concept of systems thinking (and its embodiment in systems approach and systems science) dates from the historical origins of engineering, policy, and philosophy. However, unlike mathematics, physics, biology, and other fields with similar histories, systems thinking lacks a common language that facilitates transparent communication across domains. Examples from the authors' research and from literature show that research in and the practice of systems thinking would benefit from a common language and foundation of systems thinking. We present for discussion the results of our metathinking approach to a standard lexicon of systems thinking, i.e., the Dimensions of Systems Thinking. We also introduce key concepts including the observer effect of systems thinking, the difference between the scope of the analysis and the boundaries of the system, and the distinction between the metrics and indices of performance of a system. The way forward will be to discuss and debate the elements of the language of systems thinking, to establish criteria for evaluating the quality of systems thinking, and to test this methodology on case studies.},
  keywords={Biological system modeling;Cognitive science;Analytical models;Computational modeling;Mathematical model;Metathinking;systems analysis;systems approach;systems engineering;systems science;systems thinking;Metathinking;systems analysis;systems approach;systems engineering;systems science;systems thinking},
  doi={10.1109/JSYST.2014.2332494},
  ISSN={1937-9234},
  month={Dec},}@INPROCEEDINGS{9315844,
  author={De, Suman},
  booktitle={2020 Sixth International Conference on Parallel, Distributed and Grid Computing (PDGC)}, 
  title={A Novel Perspective to Threat Modelling using Design Thinking and Agile Principles}, 
  year={2020},
  volume={},
  number={},
  pages={31-35},
  abstract={Security for every organization in the digital space is of primary focus and to better highlight and define the strategies to keep the systems safe and secure is of prime importance. While unauthorized access and unethical actions by intruders remain a cause of concern, ensuring the right measures through proper Threat Modelling techniques is necessary to create a barrier against them. The intention of getting access to a system or website or server can be born out of multiple threat groups and can be classified into common security threats. This paper looks at a persona-based approach to identify user groups that can be a threat to a system and how we can use the concepts of Design Thinking to model the system and protect it from possible security breaches. Considering the agile methodologies of software development, the paper talks about focusing on a perspective that discusses a design methodology by keeping the individuals and interactions for working models at the top of threat modelling measures.},
  keywords={Security;Computational modeling;Software measurement;Planning;Handheld computers;Grid computing;Focusing;Threat Modelling;Design Thinking;Agile Methodologies;Security;Information Systems;Scrum},
  doi={10.1109/PDGC50313.2020.9315844},
  ISSN={2573-3079},
  month={Nov},}@INPROCEEDINGS{10455497,
  author={Romadhon, Dzikri Rahmat and Rahiem, Maila D. H. and Faeruz, Ratna and Muliyah, Evi and Asmui and Wulansari, Nurbaini Futuhat},
  booktitle={2023 11th International Conference on Cyber and IT Service Management (CITSM)}, 
  title={Enhancing Student Engagement in Computational Physics through Project-Based Learning: An Exploration of VBA Physics Simulation}, 
  year={2023},
  volume={},
  number={},
  pages={1-6},
  abstract={In the realm of computational physics education, enhancing student engagement remains a pivotal challenge. This research delved into the potential of Project-Based Learning (PBL), with a particular emphasis on the VBA Physics Simulation, to invigorate students’ learning engagement. By surveying undergraduate students’ perceptions in computational physics course, we observed a predominant positive response towards the PBL model. The findings underscore that students not only appreciate the structured learning experience PBL offers but also value the guidance from lecturers in this approach. Through the lens of PBL, students reported a marked improvement in various skills, including the 4C skills (Critical thinking, Communication, Collaboration, Creativity), problem-solving, and higher-order thinking skills. This study advocates for the broader integration of PBL in computational physics course, especially using tools like VBA Physics Simulation, as a means to deepen understanding and amplify student engagement. We also recommend future quantitative research to further solidify these findings.},
  keywords={Art;Statistical analysis;Computational modeling;Collaboration;Physics education;Problem-solving;Physics;VBA Physics Simulation;Student Engagement;Project-Based Learning Models;Physics Education;Learning Outcomes;Project-Based Learning;Computational Physics},
  doi={10.1109/CITSM60085.2023.10455497},
  ISSN={2770-159X},
  month={Nov},}@INPROCEEDINGS{1343114,
  author={Chaoan Lai and Yanming Sun and Guoyan Yu},
  booktitle={Fifth World Congress on Intelligent Control and Automation (IEEE Cat. No.04EX788)}, 
  title={Integrated intelligent algorithm for product design based on simulation of creative thinking}, 
  year={2004},
  volume={4},
  number={},
  pages={3205-3209 Vol.4},
  abstract={In order to simulate creative design thinking of human being and then improve those product design methods commonly used, a model of creative thinking consisting of alternant emanative and converging thinking was put forth. These shortages in case-based reasoning (CBR) and genetic algorithms (GA) were analyzed by the model. It was proved that the fundamental reason of these shortages is that they only can simulate a single process in the model of creative thinking. Then a simulation algorithm of directed similarity association is brought forward so as to realize the computation of similarity degree of product demand between components, and simulate the whole model of creative thinking by combining CBR and GA. A corresponding product design system was put forward, and then an experiment was conducted, and the results show that the combined intelligent algorithm has good performance in search.},
  keywords={Product design;Humans;Computational modeling;Convergence;Design engineering;Genetics;Machine intelligence;Chaos;Sun;Marine technology},
  doi={10.1109/WCICA.2004.1343114},
  ISSN={},
  month={June},}@INPROCEEDINGS{8586710,
  author={Velázquez-Iturbied, J. Ángel},
  booktitle={2018 International Symposium on Computers in Education (SIIE)}, 
  title={Towards an Analysis of Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={1-6},
  abstract={The term “computational thinking” does not have an unambiguous meaning, therefore we address its analysis with the aim of making its meaning clearer. In the paper, we first present several definitions extracted from a number of relevant publications. Then, the main elements included in these definitions are analyzed. The analysis shows that such definitions are ambiguous and heterogeneous. Depending on each specific definition, they refer to concepts, skills, attitudes and transversal competences. Finally, the paper includes a section where these findings are analyzed and potential risks are identified.},
  keywords={Computer science;Computational modeling;Proposals;Education;Problem-solving;Tools;Standards;computational thinking;computer science education;programming education;competences},
  doi={10.1109/SIIE.2018.8586710},
  ISSN={},
  month={Sep.},}@ARTICLE{10380594,
  author={Wang, Leilei and Zhou, Jie and Li, Xinying},
  journal={IEEE Access}, 
  title={Influence of College Teacher’s Instructional Design on the Development of College Students’ Thinking of Innovation Multi-Algorithms Perspective Analysis}, 
  year={2024},
  volume={12},
  number={},
  pages={3969-3980},
  abstract={At present, innovation courses for college students play a vital role in universities. It has also become an important teaching platform for cultivating superior talents. How to improve the level of innovative thinking of college students into high-quality national strategic talents has become a research topic of great concern. However, many university teachers still follow traditional instructional design. It is impossible to implement a customized approach to education. Responding to the deficiencies in the instructional design of innovative training for university students, the support vector machine and K-means clustering algorithms are combined to create a revolutionary network instructional system, which is then used in an undergraduate course. A virtual reality classroom, real-time chat features, and an evaluation system are just a few of the elements that make up this system. It makes it possible to personalize learning, share open data, have real-time debates, and participate in a variety of virtual learning activities. Through the use of conventional datasets, this integrated multi-algorithmic system’s dependability is illustrated. It can meet the diverse learning needs of college students and help solve the weaknesses of traditional instructional design. Since 2022, four evaluation techniques have been used to confirm the efficacy of this teaching strategy: student recognition analysis, final test passing rate, competition winning percentage, and classroom activity level assessment. The results support the following: Compared with the traditional teaching design, the novel network instructional system is more conducive to helping college students cultivate learning interests and enhance their innovative thinking level. The adoption and dissemination of this strategy will undoubtedly advance educational research and improve college students’ capacity for creative thought, fostering the development of top-notch creative talent and advancing sustainable societal development.},
  keywords={Clustering algorithms;Support vector machines;Programming profession;Programming;Kernel;Classification algorithms;Educational technology;Instructional design;support vector machine;K-means clustering;innovative thinking;instructional system},
  doi={10.1109/ACCESS.2024.3349979},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{9637221,
  author={Feng, Shi and Yang, Dazhi},
  booktitle={2021 IEEE Frontiers in Education Conference (FIE)}, 
  title={Teachers' Perspective on Implementing Computational Thinking in Elementary Classrooms}, 
  year={2021},
  volume={},
  number={},
  pages={1-5},
  abstract={Computational thinking (CT) is a thought process designed to help students better solve complex problems using mental tools such as decomposition, abstraction, heuristics, data collection, algorithms, modeling, and communication (Wing, 2006). This study is part of a larger National Science Foundation funded STEM+C (computing) study that integrates CT in informal STEM learning. The informal STEM+CT curriculum resulted from the large study was guided by project-based learning (PBL) to help 4th to 6th grade students practice CT in the context of problem solving. Twenty-four teachers have worked with small groups of students in an afterschool community center program over an 8-weeks period. The larger STEM+C study also encouraged teachers in adapting the informal STEM+CT curriculum in their own classrooms, which eight of the 24 teachers have done so. This study investigates the participating teacher's perspective on implementing CT into elementary classrooms after they had facilitated the STEM+CT curriculum in community centers' after-school programs via interviewing 12 of the 24 teachers. The current study focuses on the challenges and issues regarding implementing CT in elementary classrooms. The results show that teachers collectively place the lack of time and the lack of professional development as the major obstacles in integrating CT into elementary classrooms.},
  keywords={Heuristic algorithms;Conferences;Computational modeling;Data collection;Data models;Problem-solving;STEM;computational thinking;STEM+C;Project Based Learning;teacher perspectives},
  doi={10.1109/FIE49875.2021.9637221},
  ISSN={2377-634X},
  month={Oct},}@INPROCEEDINGS{9766625,
  author={Fradi, Bènène and Cheniti-Belcadhi, Lilia},
  booktitle={2022 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Towards a Conceptual Model for a Smart Open learning environment based on Computational Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={1981-1987},
  abstract={Currently, there is a daily evolution of the world and our current digital society faces challenges for changing the environment. Currently, learning environments are undergoing an evolution due the increasing development of mobile technologies. Designing and implementing Smart Learning Environments (SLEs) has emerged to enhance the learning process and the creation of content. In this paper, we are interested on SLE. Our objective is to propose a new pedagogical approach to provide adaptive and personalized open learning based on Computational Thinking (CT). This contribution describes the main theoretical relationships between SLE, Open Learner Model, Open Education Resource, Open Practice and Open Pedagogy when developing SLE to promote the learning process. New pedagogical approaches, based on openness, need to be implemented. The goal is to orchestrate between different features of SLE in order to propose a Smart Open Learning Environment (SOLE). We focus in particular on the pedagogical scenario that will be deployed in a Smart Open Learning Environment (SOLE). The proposed scenario is promoted by Smart Open Pedagogy to enhance CT. We aim to deliver open assessment adapted to specific learner context profile, progress and CT’s Level in the learning.},
  keywords={Adaptation models;Computational modeling;Conferences;Engineering education;Faces;SLE;Open Pedagogy;Smart Pedagogy;Computational thinking;Open Education Resource;Open Assessment;Adaptive Self-regulated Learning},
  doi={10.1109/EDUCON52537.2022.9766625},
  ISSN={2165-9567},
  month={March},}@INPROCEEDINGS{9620553,
  author={Krakowski, Ari and Greenwald, Eric and Comstock, Meghan and Roman, Natalie and Duke, Jacob},
  booktitle={2021 Conference on Research in Equitable and Sustained Participation in Engineering, Computing, and Technology (RESPECT)}, 
  title={A Typology of Models for Integrating Computational Thinking in Science (CT+S)}, 
  year={2021},
  volume={},
  number={},
  pages={1-6},
  abstract={In order to expand opportunities to learn computer science (CS), there is a growing push for inclusion of CS concepts and practices, such as computational thinking (CT), in required subjects like science. Integrated, transdisciplinary (CS/CT+X) approaches have shown promise for broadening access to CS and CT learning opportunities, addressing potential self-selection bias associated with elective CS coursework and afterschool programs, and promoting a more expansive and authentic contextualization of CS work. Emerging research also points to pedagogical strategies that can transcend simply broadening access, by also working to confront barriers to equitable and inclusive engagement in CS. Yet, approaches to integration vary widely, and there is little consensus on whether and how different models for CS and CT integration contribute to desired outcomes. There has also been little theory development that can ground systematic examination of the affordances and tradeoffs of different models. Toward that end, we propose a typology through which to examine CT integration in science (CT +S). The purpose of delineating a typology of CT+S integration is to encourage instantiation, implementation, and inspection of different models for integration, and to promote shared understanding among learning designers, researchers, and practitioners working at the intersection of CT and science. For each model in the typology, we characterize how CT+S integration is accomplished, the ways in which CT learning supports science learning, and the affordances and tensions for equity and inclusion that may arise upon implementation in science classrooms.},
  keywords={Computer science;Electric potential;Systematics;Computational modeling;Affordances;Tools;Inspection;Equity and inclusion in computing;Computational thinking;Transdisciplinary (CT+X) curriculum models},
  doi={10.1109/RESPECT51740.2021.9620553},
  ISSN={},
  month={May},}@INPROCEEDINGS{10148299,
  author={Xie, Zerong and Radloff, Jeffrey and Wong, Gary K. W. and Yeter, Ibrahim H.},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={The Future Nexus of Computational Thinking Education: A Preliminary Systematic Review of Reviews}, 
  year={2022},
  volume={},
  number={},
  pages={548-553},
  abstract={Recent years have seen a high volume of computational thinking (CT) review studies. However, there have been no existing studies that map these reviews with the goal of achieving comprehensive understanding of the field of CT. This paper utilizes Tikva & Tambouris’ (2021) K-12 CT research domain conceptual model as the basis for identifying and defining CT reviews, then maps the identified 38 CT reviews onto the identified domains. We pinpoint eight potential future review topics, including "communities" of tools, "modeling simulations," "problem-solving" and "scaffolding" of learning strategies, "demographic attributes" of factors, "practices" and "perspectives" of the knowledge-based areas, and the "teacher training" of capacity building. We also examine the topical keywords of the reviews and identify that the scope of the term "unplugged" is vaguely defined among the existing research, suggesting a need to refine the definition of this frequently discussed topic so as to be able to more effectively conduct supplementary reviews. Our results help to better understand the CT review field and formulate future directions.},
  keywords={Training;Systematics;Computational modeling;Knowledge based systems;Buildings;Problem-solving;Computational thinking;review of reviews;K-12 education},
  doi={10.1109/TALE54877.2022.00096},
  ISSN={2470-6698},
  month={Dec},}@ARTICLE{9063433,
  author={Cachero, Cristina and Barra, Pilar and Meliá, Santiago and López, Otoniel},
  journal={IEEE Access}, 
  title={Impact of Programming Exposure on the Development of Computational Thinking Capabilities: An Empirical Study}, 
  year={2020},
  volume={8},
  number={},
  pages={72316-72325},
  abstract={Today's digital society has turned the development of students' computational thinking capabilities into a critical factor for their future success. As higher education institutions, we need to take responsibility for this development in every degree course we offer, and provide students with the kind of subjects and activities that best contribute to this aim. In this paper, we study the impact of following an introductory programming course on the development of the computational thinking capabilities of university students. In order to achieve this aim, a concurrent cohort observational study was carried out in which we measured both the subjective and objective computational thinking capabilities of 104 participants (50 first year students enrolled on a Bachelor's degree course in Psychology at the Catholic University of Murcia (UCAM), and 54 first year students enrolled on a Bachelor's degree course in Health Information Systems at the University of Alicante (UA)). The statistical procedures applied to test our hypotheses were a two-way mixed ANOVA, a paired-sample T-test and an independent-sample T-test. The data shows that the group at UA had an initial higher subjective perception of their computational capabilities than the group at UCAM. This perception was supported by their objective scores, which were also significantly higher. However, the subjective assessment of computational capability of the UA group diminished after exposure to the programming course, contrasting with the fact that their objective computational capabilities improved significantly. In the UCAM group, both subjective and objective capabilities remained constant over time. Based on these results, we can conclude that computational thinking capabilities are not developed naturally, but need to be trained. Providing such training to all our students, and not only to those enrolled on undergraduate degrees in engineering, is of paramount importance to allow them to face the challenges of their future professions. This paper empirically demonstrates the extent to which exposing subjects to a programming course may contribute to this aim.},
  keywords={Programming profession;Training;Instruments;Psychology;Information systems;Problem-solving;Programming;computational thinking;problem-solving;career development;technology social factors;observational study},
  doi={10.1109/ACCESS.2020.2987254},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{10578701,
  author={Silapachote, Piyanuch and Srisuphab, Ananta and Hoonlor, Apirak and Sunetnanta, Thanwadee},
  booktitle={2024 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Mastering basic Sorting Algorithms through Computational Thinking Activities for Everyone}, 
  year={2024},
  volume={},
  number={},
  pages={1-5},
  abstract={Sorting is an algorithmic concept that is covered in every fundamental computer science and engineering course and included in most if not all programming competitions. It is an everyday task, self-taught and done naturally even by a small child. In spite of its ingenuousness, mastering sorting algorithms turns out to be not so simple for many first-time programmers. This happens because how humans perform sorting is far from being straightforwardly aligned with machine instructions. We have developed an unplugged game-based learning activity that aims not only to tackle this difficult dilemma but also to promote computational thinking practice. Our game robustly challenges audiences to complete a fun sorting task algorithmically and the building blocks of the exercise are methodologically grounded in the four cornerstones of computational thinking. Participants are gently guided through solving a problem by decomposing it, recognizing patterns, applying abstraction, writing step-by-step instructions, and finally arriving at a programmable solution. Our design is largely flexible. The game can be played in small groups or larger ones. It uses only common, readily accessible materials, and is easily adaptable to different levels of audiences, from the interested general public to secondary school students and teachers, to non-computer science undergraduates and those majoring in engineering or information technology related subjects. We have implemented this activity in our classrooms and conducted several workshops. Responses were markedly positive. Engaged from the beginning to the end, participants enjoyed the activity, having fun sorting. Appreciated the ideas, audiences were captivated by many surprising challenges. Most notably, they were able to comprehend the concepts of sorting algorithms and the computational steps behind them, and gain a better understanding of computational thinking.},
  keywords={Conferences;Games;Writing;Programming;Pattern recognition;Task analysis;Information technology;sorting algorithm;computational thinking;game-based learning activities;unplugged computing},
  doi={10.1109/EDUCON60312.2024.10578701},
  ISSN={2165-9567},
  month={May},}@INPROCEEDINGS{6016643,
  author={Chang, Chih-Kai},
  booktitle={The 7th International Conference on Digital Content, Multimedia Technology and its Applications}, 
  title={Integrate social simulation content with game designing curriculum to foster computational thinking}, 
  year={2011},
  volume={},
  number={},
  pages={115-118},
  abstract={Computational thinking is a fundamental analytical ability to solve problems, design systems, and understand human behavior based on the fundamental concepts of computer science. The concept of computational thinking is almost needed on every profession in the computerization of society. Teaching computational thinking to cultivate problem solving ability by computer is a challenge of computer science education, especially for the K-12 level. Although studies introduce computational concepts by programming design, computational thinking and computer science are not computer programming. The study uses social simulation content (i.e. NetLogo, which uses muti-agent technology) to scaffold learning computational thinking concepts, such as simple genetic algorithm, parallel computing, artificial neural net, or deadlock (such as dining philosophers). To stimulate learning transfer onto computational thinking, NetLogo models library will be used to motivate reflection and meta-cognition development. Preliminary experimental results came from both questionnaires and artifacts. In the future, Gero's (1990) function-behaviour-structure (FBS) ontology will be used for the qualitative analysis to explain the outcomes of learning transfer.},
  keywords={Computational modeling;Object oriented modeling;Brain modeling;Programming profession;Biological system modeling;Computer languages},
  doi={},
  ISSN={},
  month={Aug},}@INPROCEEDINGS{9962566,
  author={Wang, Chao},
  booktitle={2022 IEEE Frontiers in Education Conference (FIE)}, 
  title={Incorporating Real World Examples in a Random Signal Analysis Course}, 
  year={2022},
  volume={},
  number={},
  pages={1-5},
  abstract={This Research to Practice Full Paper presents the design and initial evaluation of engaging students in a random signal analysis course through a set of application-oriented mini-projects involving real-world examples. Many students struggle learning the concepts of probability and random processes due to its abstract nature. The goal of these mini-projects is to help students better understand abstract course concepts, let them practice applying course concepts to solve real world problems, and at the same time, improve their critical thinking and problem solving skills. This paper will describe the design and implementation of these mini-projects, as well as their preliminary evaluation.},
  keywords={Random processes;Problem-solving;Signal analysis;Undergraduate;Junior;Electrical Engineering;Simulation;Critical Thinking;Problem Solving;Student Perception},
  doi={10.1109/FIE56618.2022.9962566},
  ISSN={2377-634X},
  month={Oct},}
