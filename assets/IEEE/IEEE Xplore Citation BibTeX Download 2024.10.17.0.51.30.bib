@INPROCEEDINGS{7344063,
  author={Nesiba, Natasha and Pontelli, Enrico and Staley, Timothy},
  booktitle={2015 IEEE Frontiers in Education Conference (FIE)}, 
  title={DISSECT: Exploring the relationship between computational thinking and English literature in K-12 curricula}, 
  year={2015},
  volume={},
  number={},
  pages={1-8},
  abstract={DISSECT (DIScover SciEnce through Computational Thinking) is a project aimed at introducing students to computer science principles by establishing computational thinking (CT) as a problem-solving technique within middle school and high school Science, Technology, Engineering, and Mathematics (STEM) courses. While DISSECT has shown successful integration of CT into middle school and high school STEM curricula, illustrating the pervasive nature of CT, a question remained; “can CT also be infused into humanities courses (e.g., English, Art, History) in addition to scientific courses (e.g., Chemistry, Biology, Computer Science)?” The answer is positive. The objective of this paper is to present one approach to bridge the gap between CT and humanities through the curriculum of a 12th-grade English Literature course. The course blends CT practices with composition and literature to provide students with the ability to write critical and comparative analyses of selected literature. This paper will describe multiple modules that integrate computational thinking into the course, and discuss the results and assessment tools used to measure student competency in computational thinking.},
  keywords={Algorithm design and analysis;Fellows;Computer science;Education;Google;Computers;Problem-solving;Computer science;Computer science education;Computational thinking;English literature;K-12},
  doi={10.1109/FIE.2015.7344063},
  ISSN={},
  month={Oct},}@INPROCEEDINGS{9778055,
  author={Chen, Bing-Hong and Huang, Tsui-Feng and Chou, Sheng-Chieh},
  booktitle={2021 International Conference on Technologies and Applications of Artificial Intelligence (TAAI)}, 
  title={Research on Teaching Effectiveness of Computational Thinking Based on Service Learning}, 
  year={2021},
  volume={},
  number={},
  pages={155-161},
  abstract={Computational thinking has been widely regarded as an important ability to adapt to the future. College students use the knowledge they have learned to help elementary students in the community learn computational thinking, thereby enhancing the motivation and achievement of the course. Use Scratch software tools to support the learning of computational thinking. In addition to cultivating students’ basic knowledge and abilities, it also assists the lack of learning resources in community elementary schools through practical actions of service learning, so that students can focus their learning on task-base purposes. Comprehensive research and analysis are conducted based on the evaluation of the students' completed works, the learning satisfaction scale, and the data of the key indicators of self-evaluation of computational thinking, plus the questionnaire survey of the primary school students receiving assistance. The results show that: it helps to stimulate students' desire to learn, thereby significantly improving academic performance and learning motivation. At the same time, it makes students have self-confidence and a sense of accomplishment, and makes learners aware of the inadequacy of self-learning, and promotes their willingness to learn from passive to active.},
  keywords={Education;Learning (artificial intelligence);Task analysis;Software tools;computational thinking;learning motivation;task-based instruction;Scratch},
  doi={10.1109/TAAI54685.2021.00037},
  ISSN={2376-6824},
  month={Nov},}@ARTICLE{9536372,
  author={Zapata-C&#x00E1;ceres, Mar&#x00ED;a and Mart&#x00ED;n-Barroso, Estefan&#x00ED;a and Rom&#x00E1;n-Gonz&#x00E1;lez, Marcos},
  journal={IEEE Transactions on Learning Technologies}, 
  title={Collaborative Game-Based Environment and Assessment Tool for Learning Computational Thinking in Primary School: A Case Study}, 
  year={2021},
  volume={14},
  number={5},
  pages={576-589},
  abstract={Computational thinking (CT) can be considered a 21st century core skill and, accordingly, it should be taught to students at an early age. Nevertheless, the implementation of CT in school curricula is still in an experimental stage, given that different performance metrics remain unclear, including the appropriate age for learning each skill, the significant and achievable computational concepts for each school year, teaching strategies, learning effectiveness, and strategies for assessing development. Based upon constructivist problem-solving learning strategies and supported by a three-dimensional framework, a game-based environment with both individual and collaborative playing modes has been developed as a learning and an assessment tool via learning analytics. Moreover, an exploratory case study has been carried out involving 176 primary school students. Results suggest that this environment is suitable as a learning and assessment tool for CT skills in primary school, providing enduring learning, particularly when it engages the collaborative playing mode. It seems to be better adapted to early primary school stage students, who showed greater improvements and who were able to assimilate more computational concepts than expected. Likewise, special needs or low percentile students benefit even more greatly from the learning tool and especially from the collaborative playing mode. The combination of different assessment methodologies&#x2014;including CT pre- and posttests, data-driven analytics, direct observation, and questionnaires&#x2014;provides assessment for each of the framework computational dimensions.},
  keywords={Collaboration;Problem-solving;Tools;Education;Programming profession;Games;Visualization;Assessment;collaborative learning;computational thinking (CT);early childhood education;educational games;learning environments;programming.},
  doi={10.1109/TLT.2021.3111108},
  ISSN={1939-1382},
  month={Oct},}@INPROCEEDINGS{7851769,
  author={Silapachote, Piyanuch and Srisuphab, Ananta},
  booktitle={2016 IEEE International Conference on Teaching, Assessment, and Learning for Engineering (TALE)}, 
  title={Teaching and learning computational thinking through solving problems in Artificial Intelligence: On designing introductory engineering and computing courses}, 
  year={2016},
  volume={},
  number={},
  pages={50-54},
  abstract={At the core of every computing related discipline and impacting everyone everywhere, computational thinking or CT has increasingly emerged as its own subject in all levels of education. How to effectively teach CT skills poses real challenges and creates opportunities. Focusing on engineering and computer science undergraduates, we resourcefully integrated elements of Artificial Intelligence (AI) into introductory computing courses. In addition to a comprehension of the essence of CT, AI enabled inspirations of collaborative problem solving beyond abstraction, logical reasoning, critical, and analytical thinking. It fostered the study of basic data structures and algorithms. Students enjoyed active learning classrooms. Learning to learn, they constructed essential knowledge from solving exciting AI puzzles, competing in strategic AI games, and participating in intellectual discussion. Every activity is designed to allow students to fully engage their mental tools. Neither coding nor programming was required.},
  keywords={Handheld computers;Conferences;Education;Decision support systems;Computer science;Search problems;computational thinking (CT);artificial intelligence (AI);collaborative problem solving;active learning classrooms},
  doi={10.1109/TALE.2016.7851769},
  ISSN={2470-6698},
  month={Dec},}@ARTICLE{9286386,
  author={Kazimoglu, Cagin},
  journal={IEEE Access}, 
  title={Enhancing Confidence in Using Computational Thinking Skills via Playing a Serious Game: A Case Study to Increase Motivation in Learning Computer Programming}, 
  year={2020},
  volume={8},
  number={},
  pages={221831-221851},
  abstract={Computer Science (CS) is a profession that positively impacts every single area of society without which today's world would come to a complete halt. Yet, there is a consensus that CS has serious conundrums particularly in attracting students, low motivation for learning computer programming and developing computational thinking (CT) skills. New motivational methods are needed to take the attention of students and adapt to their learning patterns as how people learn have changed drastically over the last two decades. To address these issues, video games and video game-based tools are proposed as a primary approach for motivating and supporting students in developing their skills in CT and support their learning of introductory programming. This research is concerned with the capture of statistical evidence on the educational effectiveness of playing a serious game specifically designed to enhance the development of CT skills to facilitate learning introductory computer programming. A total of 190 students were invited to participate in a quasi-experimental pre-post study for the purpose of analyzing the impact of an adhoc game on students' confidence in learning programming constructs and using their skills in CT. All students were studying a CS degree at the time and they were all registered to a first-year computer programming course. 151 out of 190 students successfully completed the study and the findings suggest that a) the intrinsic motivation to learn programming; b) students' perception of their knowledge and their tangible knowledge in key programming constructs (i.e. programming sequence, methods, decision making and loops); and c) students' confidence in using their CT skills were all statistically and significantly improved after playing the game. Additionally, students perceived computer programming significantly less difficult in their post study responses when compared to their pre study responses.},
  keywords={Programming profession;Games;Visualization;Tools;Syntactics;Education;Computer languages;Computational thinking;serious games;computer programming;video game design;game-based learning;gamification},
  doi={10.1109/ACCESS.2020.3043278},
  ISSN={2169-3536},
  month={},}@ARTICLE{10506466,
  author={Kaleem, Muhammad and Hassan, Muhammad Awais and Khurshid, Syed Khaldoon},
  journal={IEEE Access}, 
  title={A Machine Learning-Based Adaptive Feedback System to Enhance Programming Skill Using Computational Thinking}, 
  year={2024},
  volume={12},
  number={},
  pages={59431-59440},
  abstract={The solution of a typical programming task involves algorithmic thinking, pattern recognition, decomposition, and abstraction skills. These skills are basic pillars of Computational thinking (CT) and are essential for a computer programmer. Therefore, a programming teacher needs to take these skills into account for the evaluation of students. Existing methods for improving programming competency don’t consider the Computational Thinking of students and perform grading of students without taking these skills into account. Due to this limitation, deficiencies of these skills in students remain unrevealed, posing difficulties for educators to provide need-oriented feedback. The performance of programming students is thus hindered by a lack of interventions. This study proposes a method to evaluate programming students in terms of CT skill components and group them based on their skill set. In this study, 780 students of object-oriented programming (OOP) class were given programming assignments for assessment of programming competencies. These students were then given small programming tasks requiring different computational thinking skill components for their solutions. A machine learning approach was used to perform grouping of these students based on their scores. Six groups of programming students, each having its own set of skill deficiencies, were identified as a result of clustering. One of the groups had an empty set of skill deficiencies and consisted of students proficient in programming. Each of the other five groups had a non-empty set of skill deficiencies and comprised non-proficient programming students. A group-specific skill development plan was built for the groups having skill deficiencies. It was found that such feedback was very effective and improved the CT skill deficiencies of 82% of students.},
  keywords={Programming;Programming profession;Codes;Task analysis;Source coding;Clustering algorithms;Feedback;Cognitive systems;Object oriented programming;Machine learning;Education;Performance evaluation;Computational thinking assessment;feedback;K-means clustering;programming},
  doi={10.1109/ACCESS.2024.3391873},
  ISSN={2169-3536},
  month={},}@INPROCEEDINGS{10487240,
  author={Li, Jiang and Cuddapah, Jennifer and Torres-Crespo, Marisel and Stewart, Ann and Williams, Anthony},
  booktitle={2023 Congress in Computer Science, Computer Engineering, & Applied Computing (CSCE)}, 
  title={Promoting K-12 Computer Science Education : A Computational Thinking Partnership Project}, 
  year={2023},
  volume={},
  number={},
  pages={1054-1058},
  abstract={This paper describes a collaborative project that was conducted to promote Computer Science (CS) and Computational Thinking (CT) Education among pre-service and in-service teachers as well as Teacher Preparation Faculty. More than 40 pre-service and in-service teachers and 9 Education faculty members from three schools participated in a learning experience designed to address the K-12 Computer Science Framework [1] and Maryland's K-12 Computer Science Standards. The collaboration was designed to develop CS/CT knowledge, understanding, skills and application among participants. In phase one of the project, pre-service and in-service teachers explored CS educational hard/software platforms and used open-source sites such as Sphero Edu, Wonder Workshop, Scratch and Code.org. They envisioned how activities apply to K-8 classrooms, and they worked collaboratively to design a problem-based project for their own students. In phase two of the project, teacher preparation faculty were trained to integrate CS and CT into several preservice courses as well as build into the coursework sequence meaningful experiences that would expose future teachers to CS and CT knowledge and skills so that they could then incorporate these into their own K-8 lesson plans. Project evaluation included formative and summative assessments to examine changes in content and pedagogical knowledge. The feedback from the participants shows positive results.},
  keywords={Computer science;Conferences;Education;Collaboration;Computer science education;Standards;computer science education;computer science teaching standard;computation thinking;professional development},
  doi={10.1109/CSCE60160.2023.00175},
  ISSN={},
  month={July},}@INPROCEEDINGS{8103502,
  author={Malizia, Alessio and Fogli, Daniela and Danesi, Federico and Turchi, Tommaso and Bell, David},
  booktitle={2017 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)}, 
  title={TAPASPlay: A game-based learning approach to foster computation thinking skills}, 
  year={2017},
  volume={},
  number={},
  pages={345-346},
  abstract={In this paper we describe how to use a Game-Based Learning (GBL) approach to help end-user programmers to develop Computational Thinking (CT) skills. CT represents a framework consisting of a set of skills such as: abstraction, decomposition and more in general problem solving expressed in a computational form (algorithmic thinking) that can be easily formalised into a computer program. Those skills are beneficial for end-user programmers in order to model a task for being tackled with computational tools, e.g. spreadsheets, domain specific and visual languages. TAPASPlay is an engaging GBL platform designed to help end-user to learn algorithmic thinking.},
  keywords={Games;Shape;Force;Metals;Visualization;Programming;Smart phones;Computational Thinking;Game-Based Learning;End-User Programming},
  doi={10.1109/VLHCC.2017.8103502},
  ISSN={1943-6106},
  month={Oct},}@INPROCEEDINGS{9006485,
  author={Marciano, Richard and Agarrat, Sarah and Frisch, Hannah and Hunt, Margaret Rose and Jain, Kanishka and Kocienda, Genevieve and Krauss, Hannah and Liu, Chenxi and McKinley, Mary and Mir, Danish and Mullane, Connor and Patterson, Emery and Pradhan, Debashish and Santos, James and Schams, Britton and Shiue, Hilary Szu Yin and Silva, Andy Jose and Suri, Mayhah and Turabi, Tahura and Vasselli, Mirielle and Xu, Jiale},
  booktitle={2019 IEEE International Conference on Big Data (Big Data)}, 
  title={Reframing Digital Curation Practices through a Computational Thinking Framework}, 
  year={2019},
  volume={},
  number={},
  pages={3126-3135},
  abstract={We describe the value of reframing digital curation practices through a computational thinking (CT) framework. Using a case study that demonstrates computational treatments of World War II Japanese-American Incarceration Camp Records, we demonstrate the applicability of CT with respect to: (1) Detecting personally identifiable information, (2) Developing name registries, (3) Integrating vital records, (4) Designing controlled vocabularies, (5) Mapping events and people, and (6) Connecting events and people through networks. The work was carried out by 5 teams of students in an 8week digital curation exploration and development sprint.},
  keywords={Big Data;Conferences;Computational Thinking;Digital Curation;Computational Archival Science (CAS);Japanese American WWII Incarceration Camps},
  doi={10.1109/BigData47090.2019.9006485},
  ISSN={},
  month={Dec},}@INPROCEEDINGS{8405132,
  author={Calderón, Juan Felipe and Ebers, Javier},
  booktitle={2017 36th International Conference of the Chilean Computer Science Society (SCCC)}, 
  title={Problock: A tool for computational thinking development using problem-based learning}, 
  year={2017},
  volume={},
  number={},
  pages={1-5},
  abstract={While in the workplace are highly demanded work-related awareness of computing and information technology, this discipline does not have sufficient and accurate dissemination, especially in schools. New technologies have positioned more as a communication tool than as a means for building innovative products. On the other hand, it has missed the application of own abilities in the area, such as the development of logical reasoning, algorithmic thinking and problem solving, both the school curriculum as well as in instances of informal learning of students. In literature and on the web, there are tools that are accessible by both self-study students to be used as a complement to other activities. However, these tools seek the development of computational thinking itself, and not within a broader framework, which allows to present the computer science as an area of professional development, for example, inserted in a context where should solve problems requiring support programming and algorithms. Problock is proposed as a tool to (1) develop computational thinking, in a context of learning based on addiction problems, (2) disseminate and motivate students for future professional development in higher education in computer science and disciplines related. In this paper, the results of the construction of the tool are presented and the work in progress in a Chilean school.},
  keywords={Tools;Programming profession;Employment;Information technology;Buildings;Computational thinking;problem-based learning;programming learning},
  doi={10.1109/SCCC.2017.8405132},
  ISSN={},
  month={Oct},}@ARTICLE{8012290,
  author={Yaşar, Osman},
  journal={Computing in Science & Engineering}, 
  title={The Essence of Computational Thinking}, 
  year={2017},
  volume={19},
  number={4},
  pages={74-82},
  abstract={A decade of discourse to capture the essence of computational thinking has resulted in a broad set of skills whose teaching continue to pose challenges because of the reliance on the use of electronic computers and programming concepts. This article not only links computational thinking skills to fundamental cognitive competencies but also describes pedagogical tools that have proven effective in teaching them at early ages.},
  keywords={Computational modeling;Cognitive systems;Deductive databases;Brain modeling;Computational modeling;Programming;modeling and simulation;deductive and inductive reasoning;computational thinking;scientific computing},
  doi={10.1109/MCSE.2017.3151241},
  ISSN={1558-366X},
  month={},}@INPROCEEDINGS{6427135,
  author={Barcelos, Thiago Schumacher and Silveira, Ismar Frango},
  booktitle={2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)}, 
  title={Teaching Computational Thinking in initial series An analysis of the confluence among mathematics and Computer Sciences in elementary education and its implications for higher education}, 
  year={2012},
  volume={},
  number={},
  pages={1-8},
  abstract={The pervasiveness of computer devices in everyday situations poses a fundamental question about Computer Sciences as being part of those known as basic sciences. However, it would be more beneficial not to consider computation only as a technique, but instead as a way of reasoning and problem solving. Under this perspective, there are inherent relationships among the knowledge, skills and attitudes that emanate from this field and those ones commonly related to Math. This paper discusses the relationship between the so-named Computational Thinking and the foundations of Math Education, based on a literature review. Three groups of skills that can be jointly developed by both areas are identified and some challenges and implications for education in Computer Sciences are discussed.},
  keywords={Mathematics;Computers;Computational modeling;Cognition;Games;Educational institutions;Computational thinking;Mathematics;didactic strategies},
  doi={10.1109/CLEI.2012.6427135},
  ISSN={},
  month={Oct},}@ARTICLE{9568871,
  author={Cutumisu, Maria and Adams, Catherine and Glanfield, Florence and Yuen, Connie and Lu, Chang},
  journal={IEEE Transactions on Education}, 
  title={Using Structural Equation Modeling to Examine the Relationship Between Preservice Teachers’ Computational Thinking Attitudes and Skills}, 
  year={2022},
  volume={65},
  number={2},
  pages={177-183},
  abstract={The growing interest of educational researchers in computational thinking (CT) has led to an expanding literature on assessments of CT skills and attitudes. However, few studies have examined whether CT attitudes influence CT skills. The present study examines the relationship between CT attitudes and CT skills for preservice teachers (PSTs). The Callysto CT test (CCTt) for Teachers was administered to  $n\,\,=$  105 PSTs to measure their CT attitudes and skills. Structural equation modeling was used to examine the relationship of participants’ CT and problem-solving skills with their attitudes toward CT, technology, coding, and data. Findings revealed that CT attitudes predicted CT skills and provided the first step in exploring the validity and reliability of the CCTt instrument.},
  keywords={Mathematical models;Programming profession;Problem-solving;Encoding;Education;Instruments;Computational modeling;Attitudes;computational thinking (CT);educational assessment;skills;structural equation modeling (SEM)},
  doi={10.1109/TE.2021.3105938},
  ISSN={1557-9638},
  month={May},}@INPROCEEDINGS{9973101,
  author={Honglin, Liu and Yifan, Niu},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={The Construction of Project-Based Learning Model Based on Design Thinking}, 
  year={2022},
  volume={},
  number={},
  pages={173-177},
  abstract={Project-based learning is a new student-centered teaching method, which can effectively cultivate learners' innovation ability and problem-solving ability. As a creative way of thinking to solve problems in the real environment, design thinking can be well integrated into project-based learning. This paper analyzes the internal relationship between design thinking and project-based learning, constructs the project-based learning model based on design thinking according to the process model of design thinking and the relevant theories of project-based learning, and expounds the development of relevant teaching in detail.},
  keywords={Computer science;Analytical models;Technological innovation;Computational modeling;Education;Problem-solving;design thinking;project-based learning;implementation of project activities;teaching model},
  doi={10.1109/CSTE55932.2022.00038},
  ISSN={},
  month={May},}@INPROCEEDINGS{9973148,
  author={Yang, Chunmei and Lv, Wencheng and Zhang, Wenlan},
  booktitle={2022 4th International Conference on Computer Science and Technologies in Education (CSTE)}, 
  title={PBL Teaching with Design Thinking: Construction and Case Study of Programming Teaching Model in High School}, 
  year={2022},
  volume={},
  number={},
  pages={69-76},
  abstract={Programming education is a crucial part of school education and an important way to effectively enhance learners' learning abilities. However, current programming education in secondary schools is not as effective as it could be in concrete implementation. Project-based learning is a possible path for programming education, but it is still difficult to achieve the goal of cultivating innovative talents by project-based learning alone. Therefore, in this paper, we integrate design thinking into project-based learning, firstly, we analyze the connotation of design thinking and explain the necessity of integrating design thinking into project-based learning; secondly, we construct a new model and practice process framework of secondary school programming PBL teaching integrating design thinking based on the general process of project-based learning and the basic model of design thinking, and explain the connotation. Finally, a case study of “Python programming” in the new version of high school IT textbook is conducted to provide reference for the practice of secondary school programming education.},
  keywords={Analytical models;Computational modeling;Education;Reflection;Problem-solving;Programming profession;Python;design thinking;project-based learning;secondary school programming;model construction;curriculum case study},
  doi={10.1109/CSTE55932.2022.00019},
  ISSN={},
  month={May},}@INPROCEEDINGS{8400127,
  author={Kaila, E. and Laakso, M-J. and Kurvinen, E.},
  booktitle={2018 41st International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)}, 
  title={Teaching future teachers to code — Programming and computational thinking for teacher students}, 
  year={2018},
  volume={},
  number={},
  pages={0677-0682},
  abstract={Programming is one of the key assets in the modern society. In addition to teaching programming to future programmers, it has become more and more important to teach it alongside computational thinking to all students. We designed and implemented a programming course aimed for teacher students at our university. The goal of the course was to teach programming, computational thinking and the methods and tools used in programming education. The course was divided into two parts: first, the students were taught basic programming skills by utilizing tutorial-based learning with automatically assessed electronic exercises and play-based programming tasks. In the second part, the students utilized the acquired skills by teaching programming integrated into mathematics to children at elementary school level. The students worked really hard throughout the course, completing more than 90 % of all tasks in average. Moreover, the feedback from the tutorial sessions and the practice lessons at schools was mainly positive.},
  keywords={Programming profession;Tutorials;Tools;Task analysis;Mathematics;programming;computational thinking;teacher education;teacher students},
  doi={10.23919/MIPRO.2018.8400127},
  ISSN={},
  month={May},}@INPROCEEDINGS{8589328,
  author={Tang, Yanqin and Chen, Weiwei and Li, Zhigang and Shi, Lei and Wu, Yongfen},
  booktitle={2018 9th International Conference on Information Technology in Medicine and Education (ITME)}, 
  title={Blended Learning of "Data Structure" Course Based on Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={403-406},
  abstract={With the rapid development of information and educational technology, computational thinking has become one of the basic qualities and abilities that all students should possess. Based on the "data structure" course, this paper adopts blended learning based on MOOC/SPOC to improve the students' ability of computational thinking, improve the level of students' programming and solve practical problems. Practice has proved that they are effective methods in the "data structure" teaching.},
  keywords={Education;Handheld computers;Information technology;Data structures;computational thinking;data structure;blended learning;practice teaching},
  doi={10.1109/ITME.2018.00096},
  ISSN={2474-3828},
  month={Oct},}@INPROCEEDINGS{7751816,
  author={Basogain, Xabier and Olabe, M. A. and Olabe, Juan Carlos and Ramírez, R. and Del Rosario, M. and Garcia, J.},
  booktitle={2016 International Symposium on Computers in Education (SIIE)}, 
  title={PC-01: Introduction to computational thinking: Educational technology in primary and secondary education}, 
  year={2016},
  volume={},
  number={},
  pages={1-5},
  abstract={This article describes the design and implementation of the course Introduction to Computational Thinking (PC-01) for primary and secondary education. The course introduces the “concepts” and core “processes” of Computational Thinking using a visual programming environment. The design of the course PC-01 includes a set of multimedia content, learning tools and technologies that help teachers and students in the teaching-learning process. These tools allow the teacher the successful delivery of the course content as well as the individual/collective monitoring of students' progress in the course. Students have access to their progress throughout the course and participate in creative and collaborative tasks. This course also serves to introduce transversely educational technologies to many students of primary and secondary education. The technological environment integrates the online teaching resources and the methodological tools of the course. The course uses Scratch 2.0 as the programming environment and Moodle as the learning platform. At present the course is being implemented in public schools in the Dominican Republic.},
  keywords={Computers;Programming environments;Tutorials;Multimedia communication;Collaboration;Programming;Computational Thinking;Learning Technologies;Scratch;Moodle Learning Platform},
  doi={10.1109/SIIE.2016.7751816},
  ISSN={},
  month={Sep.},}@INPROCEEDINGS{8433456,
  author={Jamil, Hasan},
  booktitle={2018 IEEE 18th International Conference on Advanced Learning Technologies (ICALT)}, 
  title={A Free-Choice Social Learning Network for Computational Thinking}, 
  year={2018},
  volume={},
  number={},
  pages={69-71},
  abstract={The need to attract learners and improve retention in computational thinking classes has never been greater than presently. Alarmingly, research suggests that the relative popularity of computer science in K-12 and colleges is not increasing while other STEM subjects are witnessing substantial rise in enrollment. Moreover, more than one third of those who choose computer science, drop out or fail the first programming class dashing hopes of building a computationally savvy workforce for the emerging global economy. In this paper, we introduce a novel social networking system, called OpenSchool, for learners and educators alike, which is able to double as a contemporary social networking system along the lines of Facebook for instance, and serve the special needs of free-choice STEM learners, computer science learners in particular. We discuss its salient features, highlight its advantages, collaborating capabilities, and learning support for STEM, especially computational thinking, learners.},
  keywords={Facebook;Programming profession;Tools;Python;social learning;computational thinking;social network;STEM;intelligent tutoring systems;free choice learning},
  doi={10.1109/ICALT.2018.00023},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{10260900,
  author={Jha, Nitesh Kumar and Bhowmik, Plaban Kumar and Bhagat, Kaushal Kumar},
  booktitle={2023 IEEE International Conference on Advanced Learning Technologies (ICALT)}, 
  title={Usability Evaluation of an Online Inquiry-Based Learning Platform for Computational Thinking (CT-ONLINQ)}, 
  year={2023},
  volume={},
  number={},
  pages={182-186},
  abstract={With the increased focus on Computational Thinking (CT) in education, there has been an increase in the development of learning platforms to teach CT. The current study developed an Online Inquiry-based learning platform for Computational Thinking (CT-ONLINQ) to support CT activities using Inquiry-based Learning (IBL) pedagogy. IBL-based CT steps include algorithm design, analysis, and comparison of algorithms. The platform allows students to explore multiple solutions and provides hints as support during problem-solving activities. A 4-week experimental study was conducted to evaluate the usability of the online platform. A total of 79 9th-grade students volunteered to participate in this study to complete six activities. Subsequently, the students completed the SUS questionnaire and open-ended feedback questions. Results showed that around 80% of the students scored above the “Good” category (70-80), with a total average score of 78.45. Also, we analyzed the difference in rating scores among groups based on multiple background factors. Findings showed an average rating above 4 with no significant difference between the ratings among factors such as gender and math performance (below-above average math scores). In addition, analysis of the feedback comments showed that the platform is user-friendly, with students enthusiastic about learning coding on the platform.},
  keywords={Education;Encoding;Problem-solving;Usability;Computational Thinking;Inquiry-based Learning;Online Platform;Algorithm design;System Usability Scale},
  doi={10.1109/ICALT58122.2023.00059},
  ISSN={2161-377X},
  month={July},}@INPROCEEDINGS{10148435,
  author={Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki},
  booktitle={2022 IEEE International Conference on Teaching, Assessment and Learning for Engineering (TALE)}, 
  title={Scratch Project Analysis: Relationship Between Gender and Computational Thinking Skill}, 
  year={2022},
  volume={},
  number={},
  pages={567-571},
  abstract={The computer science industry suffers from a significant gender gap. This situation likely hinders the creation of inclusive and user-friendly systems due to a bias in perspectives. To narrow this gender gap, this study investigates how females program to increase interest in computer sciences. Specifically, 60 open Scratch projects on the web are analyzed to clarify differences in the Computational Thinking scores with respect to gender. The difference in the Computational Thinking score by gender suggests that the gap may be due to the lack of the Synchronization element in female users’ projects. A deeper understanding of how people program based on gender should support creating an effective and inclusive learning environment and allow educators to create programming materials that attract both genders equally into the field.},
  keywords={Industries;Education;Synchronization;Programming profession;computational thinking;computer science;gender bias;Scratch;STEM},
  doi={10.1109/TALE54877.2022.00099},
  ISSN={2470-6698},
  month={Dec},}@INPROCEEDINGS{8363456,
  author={Burbaitė, Renata and Drąsutė, Vida and Štuikys, Vytautas},
  booktitle={2018 IEEE Global Engineering Education Conference (EDUCON)}, 
  title={Integration of computational thinking skills in STEM-driven computer science education}, 
  year={2018},
  volume={},
  number={},
  pages={1824-1832},
  abstract={In the context of Computer Science (CS) education, one of the most important goals is the development of computational thinking (CT) and problem solving skills. Computational thinking skills are closely related to the CS concepts and approaches. These skills cover fundamental programming concepts such as task decomposition, abstractions and generalization, data structures and algorithms. On the other hand, CS education challenges, promote the search for new educational tools, methods, activities and resources. Consequently, CS education should be extended by adding the STEM (Science, Technology, Engineering and Mathematics) paradigm principles. The aim of this paper is to show how STEM-driven CS education supports and ensures the development of computational thinking at the high school. We present the already published STEM-driven CS education approach aiming at extending it by introducing a model to assess student achievements, according to the revised Bloom's taxonomy in the connection with CT skills. As a practical implementation, we describe a curriculum of Programming Basics at the high school with respect to STEM-driven aspects and CT skills. We introduce two case studies implemented in the real educational environment. They provide the evidence of availability of our approach.},
  keywords={Engineering education;Conferences;Three-dimensional displays;Computational Thinking;STEM;STEM-Driven education;Computer Science education;STEM-driven CS education;Revised Bloom's Taxonomy},
  doi={10.1109/EDUCON.2018.8363456},
  ISSN={2165-9567},
  month={April},}@INPROCEEDINGS{9610232,
  author={Bo, Xiaoyong and Tang, You},
  booktitle={2021 International Conference on Computers, Information Processing and Advanced Education (CIPAE)}, 
  title={Teaching Research on Database Principle and Application Course Based on Computing Thinking and CDIO Mode}, 
  year={2021},
  volume={},
  number={},
  pages={313-316},
  abstract={Discusses the problem of training students' computing thinking in the teaching of database principles and applications, and analyses the computing thinking reflected in the course of database principles and applications. In the course of teaching, the training of computational thinking is penetrated into the teaching content, and the course practice teaching is carried out by using the CDIO engineering teaching method to strengthen the training of students' Computational Thinking ability.},
  keywords={Training;Technological innovation;Databases;Information processing;Solids;Engineering education;Computational Thinking;CDIO;Database Principles;Teaching Method},
  doi={10.1109/CIPAE53742.2021.00081},
  ISSN={},
  month={May},}@ARTICLE{9321708,
  author={Chai, Xiaolin and Sun, Yan and Luo, Hong and Guizani, Mohsen},
  journal={IEEE Transactions on Emerging Topics in Computing}, 
  title={DWES: A Dynamic Weighted Evaluation System for Scratch based on Computational Thinking}, 
  year={2022},
  volume={10},
  number={2},
  pages={917-932},
  abstract={Scratch is a programming environment, which is widely adopted as the first language to enter the programming world. Since Scratch projects are rich in multimedia resources, it can be time-consuming to judge them by hand, requiring manual execution with the understanding of each project. Auto-judgment tools come into being, they can rapidly evaluate the project in some way. Unfortunately, the existing tools are too rigid and they ignore the diversity of Scratch projects. To address this issue, we propose a new dynamic weighted evaluation system (DWES). First, we define a new computational thinking (CT) evaluation criteria from eight aspects. Second, based on the proposed criteria, we present an analysis tool that automatically assesses the CT skills of the learners’ projects. Third, considering the characteristics of projects, we dynamically adjust the evaluation results according to types, so that a single standard is no longer applied roughly to all. This process is data-driven, we consider the CT performance and scripts of projects. We prove the rationality of the evaluation criteria from the aspect of program complexity. Through the correlation analysis between DWES CT scores and experts’ ratings, we find that compared with Dr. Scratch, the correlation coefficient has increased.},
  keywords={Tools;Sprites (computer);Manuals;Games;Computer languages;Complexity theory;Programming profession;Scratch;computational thinking;evaluation system;dynamic weighted},
  doi={10.1109/TETC.2020.3044588},
  ISSN={2168-6750},
  month={April},}@INPROCEEDINGS{10107885,
  author={Wang, Jihan and Zhang, Wei and Zeng, Xinyao and Li, Panpan},
  booktitle={2023 IEEE 12th International Conference on Educational and Information Technology (ICEIT)}, 
  title={A Computational Thinking Assessment Tool on Text- Based Programming}, 
  year={2023},
  volume={},
  number={},
  pages={326-331},
  abstract={The assessment of computational thinking (CT) skills based on text-based programming is a necessary part of the implementation of CT education in higher education. However, the current research on CT assessment is mostly single-approach, which is not effective in accurately measuring numerous competencies of CT skills and has the disadvantage of assessment limitation. In order to solve the problem of assessment limitations, this paper defines the content of CT evaluation from the perspective of text-based programming and constructs a multidimensional test method. Different test schemes are selected according to the characteristics of CT skills, and assessment tools are developed by combining the question test, programming test and scale survey, and the assessment tools are used to evaluate and analyze learners' CT skills from qualitative and quantitative perspectives. The results show that the evaluation indicators and test questions designed on text-based programming are more consistent with the evaluation objectives. And the approach of evaluating CT skills from both qualitative and quantitative perspectives can reflect learners' CT skills more comprehensively and accurately.},
  keywords={Current measurement;Education;Information technology;Programming profession;computational thinking;text-based programming;assessment tool;qualitative analysis;quantitative analysis},
  doi={10.1109/ICEIT57125.2023.10107885},
  ISSN={},
  month={March},}
