@article{doi:10.1177/00472395211018801,
author = {Ali Battal and Gülgün Afacan Adanır and Yasemin Gülbahar},
title = {Computer Science Unplugged: A Systematic Literature Review},
journal = {Journal of Educational Technology Systems},
volume = {50},
number = {1},
pages = {24–47},
year = {2021a},
doi = {10.1177/00472395211018801},
URL = {https://doi-org.crai.referencistas.com/10.1177/00472395211018801},
eprint = {https://doi-org.crai.referencistas.com/10.1177/00472395211018801},
abstract = {The computer science (CS) unplugged approach intends to teach CS concepts and computational thinking skills without employing any digital tools. The current study conducted a systematic literature review to analyze research studies that conducted investigations related to implementations of CS unplugged activities. A systematic review procedure was developed and applied to detect and subsequently review relevant research studies published from 2010 to 2019. It was found that 55 research studies (17 articles + 38 conference proceedings) satisfied the inclusion criteria for the analysis. These research studies were then examined with regard to their demographic characteristics, research methodologies, research results, and main findings. It was found that the unplugged approach was realized and utilized differently among researchers. The majority of the studies used the CS unplugged term when referring to “paper–pencil activities,” “problem solving,” “storytelling,” “games,” “tangible programming,” and even “robotics.”}
}

@article{doi:10.1177/1046878119901286,
author = {Rebecca Yvonne Bayeck},
title = {Examining Board Gameplay and Learning: A Multidisciplinary Review of Recent Research},
journal = {Simulation & Gaming},
volume = {51},
number = {4},
pages = {411–431},
year = {2020b},
doi = {10.1177/1046878119901286},
URL = {https://doi-org.crai.referencistas.com/10.1177/1046878119901286},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1046878119901286},
abstract = {Background Recent years have seen the resurgence of board games designed for entertainment, and to teach or explicate real life problems. The revival of board gameplay has been discussed in mainstream media, and has drawn the attention of researchers. Yet, in the field of games studies, the conception of games as learning spaces is mostly emphasized through digital/video games. Aim This literature review reveals the current knowledge regarding the learning potential of board games in various settings, subjects, and diverse learners. Results Board games are spaces for mathematical learning and learning spaces that can enable the learning of various contents. Board games allow for various interactions that result in players engaging in computational thinking, teamwork, and creativity. Conclusion The relationship between board gameplay and learning is evidenced across disciplines and countries. Board games simplify complex issues and systems, which make them appropriate to further explore learning and concepts such as motivation and computational thinking in formal and informal settings. Furthermore, there is need to expand research on learning in commercial board games.}
}

@article{doi:10.1177/07356331221102312,
author = {Anat Ben-Yaacov and Arnon Hershkovitz},
title = {Types of Errors in Block Programming: Driven by Learner, Learning Environment},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {1},
pages = {178–207},
year = {2023c},
doi = {10.1177/07356331221102312},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221102312},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221102312},
abstract = {Block programming has been suggested as a way of engaging young learners with the foundations of programming and computational thinking in a syntax-free manner. Indeed, syntax errors—which form one of two broad categories of errors in programming, the other one being logic errors—are omitted while block programming. However, this does not mean that errors are omitted at large in such environments. In this exploratory case study of a learning environment for early programming (Kodetu), we explored errors in block programming of middle school students (N = 123), using log files drawn from a block-based online. Analyzing 1033 failed executions, we found that errors may be driven by either learners’ knowledge and behavior, or by the learning environment design. The rate of error types was not associated with the learners’ and contextual variables examined, with the exception of task complexity (as defined by SOLO taxonomy). Our findings highlight the importance of learning from errors and of learning environment design.}
}

@article{doi:10.1177/1729881418820425,
author = {Aurelio Bermúdez and Rafael Casado and Guillermo Fernández and María Guijarro and Pablo Olivas},
title = {Drone challenge: A platform for promoting programming and robotics skills in K-12 education},
journal = {International Journal of Advanced Robotic Systems},
volume = {16},
number = {1},
pages = {1729881418820425},
year = {2019d},
doi = {10.1177/1729881418820425},
URL = {https://doi-org.crai.referencistas.com/10.1177/1729881418820425},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1729881418820425},
abstract = {The development of skills related to computer programming and robotics and the introduction of computational thinking principles in high schools are worldwide trends today. An effective way of initiating young students in this world consists in proposing them stimulating challenges. This work presents a robotic platform that has been successfully used to develop a competition (called Drone Challenge) in which students had to program the navigation system for a simulated unmanned aerial vehicle (or drone). Both the competition and the supporting platform are described in detail. In particular, the article provides a deep technical description of the main components of the platform, namely the drone simulator and the navigation development framework. The results of the survey conducted after the challenge point to the suitability of the working platform deployed.}
}

@article{doi:10.1177/17479541221136238,
author = {Martí Casals and José Fernández and Victor Martínez and Michael Lopez and Klaus Langohr and Jordi Cortés},
title = {A systematic review of sport-related packages within the R CRAN repository},
journal = {International Journal of Sports Science & Coaching},
volume = {18},
number = {2},
pages = {621–629},
year = {2023e},
doi = {10.1177/17479541221136238},
URL = {https://doi-org.crai.referencistas.com/10.1177/17479541221136238},
eprint = {https://doi-org.crai.referencistas.com/10.1177/17479541221136238},
abstract = {The sports statistics community is rapidly evolving. R is an open-source software in constant development that has gained a lot of popularity within statistical communities and sports analytics. This work presents a systematic review of the available R CRAN sport packages following PRISMA guidelines. We consider all packages active as of 18 February 2021. A total of 81 sport R packages created since 2006 were detected. Of these, 35.9% were authored by an American national, 69.1% include a dataset, 43.2% provide vignettes, and 65.4% have been updated at least once. The sport with the highest representation is basketball (n = 14, 17.3%), followed by soccer (n = 12, 14.8%) and packages related to physical activity (n = 11, 13.6%). There are no sports packages directed solely for the female gender, while 59.3% of packages are focused on professional athletes. Fifty packages (61.7%) are related to the sports performance analysis category, and web scraping (n = 43, 53.1%) was the main functionality in the collected packages. The creation of new R packages in the area of sports could help solve questions and tasks that still remain a challenge in this field, while continuing to help to improve the level of statistical education and computational thinking skills.}
}

@article{doi:10.1177/0735633116642774,
author = {Ibrahim Cetin},
title = {Preservice Teachers’ Introduction to Computing: Exploring Utilization of Scratch},
journal = {Journal of Educational Computing Research},
volume = {54},
number = {7},
pages = {997–1021},
year = {2016f},
doi = {10.1177/0735633116642774},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633116642774},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633116642774},
abstract = {Computational thinking has been gaining new impetus in the academic community and in K-12 level education. Scratch is a visual programming environment that can be utilized to teach and learn introductory computing concepts. There are some studies investigating the effectiveness of Scratch for K-12 level education. However, studies that have been conducted at the collegiate level, especially in the context of preservice computing teacher education, are very rare. The present study aimed to investigate the effect of Scratch-based instruction on preservice teachers’ understanding of basic programming concepts and their attitudes toward programming. In the present study, a mixed method design was utilized. In the first phase of the study, the data were collected using an achievement test, a practice test, and a computer programming attitude scale. In the second phase of the study, data were collected through a semistructured interview. The results of the study indicated that preservice teachers in Scratch-based instruction had significantly better understanding of basic computing concepts. Qualitative data indicated that Scratch-based instruction was useful in constructing a more meaningful learning environment for preservice teachers. The results of this study have implications for researchers and preservice computing teacher educators when designing an introductory computing course.}
}

@article{doi:10.2190/EC.51.2.c,
author = {Chih-Kai Chang},
title = {Effects of Using Alice and Scratch in an Introductory Programming Course for Corrective Instruction},
journal = {Journal of Educational Computing Research},
volume = {51},
number = {2},
pages = {185–204},
year = {2014g},
doi = {10.2190/EC.51.2.c},
URL = {https://doi-org.crai.referencistas.com/10.2190/EC.51.2.c},
eprint = {https://doi-org.crai.referencistas.com/10.2190/EC.51.2.c},
abstract = {Scratch, a visual programming language, was used in many studies in computer science education. Most of them reported positive results by integrating Scratch into K-12 computer courses. However, the object-oriented concept, one of the important computational thinking skills, is not represented well in Scratch. Alice, another visual programming language, seems to have better illustration of the object-oriented concept for programming novices. To demonstrate effects of Alice and Scratch, we compared students’ responses to both visual programming languages, especially for students with low performances, in an introductory programming course. The relationships among learning engagement, learning anxiety, and learning playfulness were explored. The results could be referred to by computer science instructors to select proper visual programming language for corrective instruction.}
}

@article{doi:10.1177/07356331231171622,
author = {Yu-Chi Chen and Chi-Yu Chao and Huei-Tse Hou},
title = {Learning Pattern Recognition Skills From Games: Design of an Online Pattern Recognition Educational Mobile Game Integrating Algebraic Reasoning Scaffolding},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {6},
pages = {1232–1251},
year = {2023h},
doi = {10.1177/07356331231171622},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231171622},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231171622},
abstract = {Pattern recognition is an important skill in computational thinking. In this study, an equation puzzle game was developed by combining pattern recognition with algebraic reasoning, and scaffolding was designed to support learners’ learning. Sixty participants were enrolled in this study, divided into a control group and an experimental group to compare the results and differences in game achievement, flow, anxiety, and motivation of participants with and without algebraic reasoning scaffolding. The results of the study showed that the participants in both groups had positive flow and motivation during the game, did not feel over-anxious, and there was no significant difference in the game achievement of the two groups. In addition, the game with the scaffolding may have the potential to make a positive correlation between game achievement and psychological status. The results of this study indicated that the game did not cause too much anxiety to the participants. The scaffolding-based design achieves the intended effect on the participants’ assistance and facilitates the participants’ engagement in pattern recognition problem solving. And as learners became more focused and engaged, they could also perform better in the game. This game mechanism can be used as a reference for designing pattern recognition games.}
}

@article{doi:10.1177/0042085913490554,
author = {Shaundra Bryant Daily and Wanda Eugene},
title = {Preparing the Future STEM Workforce for Diverse Environments},
journal = {Urban Education},
volume = {48},
number = {5},
pages = {682–704},
year = {2013i},
doi = {10.1177/0042085913490554},
URL = {https://doi-org.crai.referencistas.com/10.1177/0042085913490554},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0042085913490554},
abstract = {Following the belief that diversity breeds innovation in scientific endeavors, there is a national push for more diversity in the science, technology, engineering, and mathematics (STEM) workforce in order to maintain national economic competitiveness. Currently, STEM-related employment is only 28% non-White; however, greater efforts to recruit and retain underrepresented minorities should increase this figure. Amidst the attention given to supporting “leaky pipelines,” less emphasis has been placed on mitigating challenges associated with bringing diverse cultures together. This article presents a framework for supporting underrepresented minorities in building STEM-relevant skills and enhancing their ability to collaborate with peers different from themselves.}
}

@article{doi:10.1177/23813377231182093,
author = {Julia Hagge},
title = {Productivity Versus Sustainability: A Tale of Two Authors’ Engagement in Participatory Culture},
journal = {Literacy Research: Theory, Method, and Practice},
volume = {72},
number = {1},
pages = {200–217},
year = {2023j},
doi = {10.1177/23813377231182093},
URL = {https://doi-org.crai.referencistas.com/10.1177/23813377231182093},
eprint = {https://doi-org.crai.referencistas.com/10.1177/23813377231182093},
abstract = {Although participatory culture promotes productive engagement in online spaces, members may respond in ways that constrain digital composition practices. This article provides theoretical and contextual background regarding a shift toward digital media production and programming-as-writing for youth. In addition, I describe the intersecting of computational thinking, computational participation, and participatory culture within Scratch, an online programming community. Findings from a descriptive case study focused on early adolescents as they engaged in digital media composition within an online programming community called Scratch are examined. Specifically, I discuss the contrast in the digital composition experiences of two participants as they leveraged participatory culture in the creation of digital media. This research highlights assumptions made regarding participatory cultures and the need to consider how to foster productive and sustainable digital literacy practices for youth in participatory cultures.}
}

@article{doi:10.1177/0047239520926971,
author = {Kanika and Shampa Chakraverty and Pinaki Chakraborty},
title = {Tools and Techniques for Teaching Computer Programming: A Review},
journal = {Journal of Educational Technology Systems},
volume = {49},
number = {2},
pages = {170–198},
year = {2020k},
doi = {10.1177/0047239520926971},
URL = {https://doi-org.crai.referencistas.com/10.1177/0047239520926971},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0047239520926971},
abstract = {Courses on computer programming are included in the curricula of almost all engineering disciplines. We surveyed the research literature and identified the techniques that are commonly used by instructors for teaching these courses. We observed that visual programming and game-based learning can enhance computational thinking and problem-solving skills in students and may be used to introduce them to programming. Robot programming may be used to attract students to programming, but the success of this technique is subjected to the availability of robots. Pair and collaborative programming allows students to learn from one another and write efficient programs. Assessment systems help instructors in evaluating programs written by students and provide them with timely feedback. Furthermore, an analysis of citations showed that Scratch is the most researched tool for teaching programming. We discuss how these techniques may be used to teach introductory courses, advanced courses, and massive open online courses on programming.}
}

@article{doi:10.1177/07356331211017793,
author = {Avital Kesler and Tamar Shamir-Inbal and Ina Blau},
title = {Active Learning by Visual Programming: Pedagogical Perspectives of Instructivist and Constructivist Code Teachers and Their Implications on Actual Teaching Strategies and Students’ Programming Artifacts},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {1},
pages = {28–55},
year = {2022l},
doi = {10.1177/07356331211017793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211017793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211017793},
abstract = {The integration of visual programming in early formal education has been found to promote computational thinking of students. Teachers’ intuitive perspectives about optimal learning processes – “folk psychology” – impact their perspectives about teaching “folk pedagogy” and play a significant role in integrating educational technologies, such as visual programming, within the formal curriculum. This study was conducted based on the mixed method research paradigm. First, a folk pedagogy questionnaire was distributed to 89 teachers who integrate differing technologies in their classroom in order to identify the teachers’ pedagogical perspectives: constructivist versus instructivist. Then, semi-structured interviews were conducted with 24 teachers who teach Scratch in order to gain a deeper understanding of their instructivist/constructivist perspectives and actual pedagogical practices and strategies. Finally, we analyzed 96 students’ programming artifacts to explore differences, if any, in students’ outcomes related to the pedagogical perspectives of their teachers. Findings revealed that pedagogical perspectives are reflected in teaching strategies and assessment practices employed in a visual programming environment. It is promising that teaching visual programming promoted constructivist pedagogy even among instructivist teachers and was consequently reflected in student perspectives and expressed in their programming artifacts. We discuss theoretical and educational implications of these findings.}
}

@article{doi:10.1177/0255761419861442,
author = {Eve Klein and James Lewandowski-Cox},
title = {Music technology and Future Work Skills 2020: An employability mapping of Australian undergraduate music technology curriculum},
journal = {International Journal of Music Education},
volume = {37},
number = {4},
pages = {636–653},
year = {2019m},
doi = {10.1177/0255761419861442},
URL = {https://doi-org.crai.referencistas.com/10.1177/0255761419861442},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0255761419861442},
abstract = {This study explored how Australian music technology courses teach employability skills. A curriculum mapping of 63 undergraduate courses was conducted with course learning outcomes aligned against two benchmarks. The first benchmark was the Ten Skills for the Future Workforce which identifies key employability skills graduates will require in the coming decade. The second benchmark was the Australian Qualifications Framework Specification for the Bachelor Degree which defines the generic skills graduates must obtain through Australian Bachelor Degrees. This curriculum mapping reveals that Australian music technology courses teach Novel and Adaptive Thinking, Computational Thinking, New Media Literacy, and Design Mindsets universally. However, this curriculum mapping also reveals a deficit in employability skills related to Cross-Cultural Competency, Transdisciplinarity, Virtual Collaboration, and Collaboration more generally. The implications of this mapping is that Australian music technology educators seem to be prioritizing specific technical and creative skills over higher-order applications of skills and knowledge which are contextualized in their broader social and cultural contexts. Finally, this article shows how curriculum mapping can be implemented to embed employability skills progressively across a program sequence using a case study from the School of Music, University of Queensland.}
}

@article{doi:10.1177/1532708616655771,
author = {Patti Lather},
title = {Post-Face: Cultural Studies of Numeracy},
journal = {Cultural Studies ↔ Critical Methodologies},
volume = {16},
number = {5},
pages = {502–505},
year = {2016n},
doi = {10.1177/1532708616655771},
URL = {https://doi-org.crai.referencistas.com/10.1177/1532708616655771},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1532708616655771},
abstract = {Re-emphasizing our agenda for this special issue as marking the shift from epistemological to ontological concerns in social science inquiry, Patti Lather locates it in challenging the orthodoxies of both positivist and critical approaches to the calculative, computational thinking and the limits of reason. With a focus on an escape from psychometrics in education research, she grounds her remarks in the context of the wider terrain of the possibilities of quantification for cultural studies and (post)critical inquiry.}
}

@article{doi:10.1177/1077695820904971,
author = {Norman P. Lewis and Mindy McAdams and Florian Stalph},
title = {Data Journalism},
journal = {Journalism & Mass Communication Educator},
volume = {75},
number = {1},
pages = {16–21},
year = {2020o},
doi = {10.1177/1077695820904971},
URL = {https://doi-org.crai.referencistas.com/10.1177/1077695820904971},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1077695820904971},
abstract = {This syndicate offers four recommendations to help educators adjust curricula to accommodate the rapid integration of data into journalism. First, instruction in numeracy and basic descriptive statistics must be required as either modules in existing courses or as separate offerings. Second, students should be taught to avoid mistakes in interpreting and writing about data in both reporting and visual classes. Third, ethics courses should discuss data as a transparency tool that poses distinctive dilemmas. Fourth, computational thinking, or how to dissect and solve problems like a computer does, can be incorporated into existing classes that teach logic.}
}

@article{doi:10.1177/07356331241291174,
author = {Eunsung Park and Jongpil Cheon},
title = {Exploring Debugging Challenges and Strategies Using Structural Topic Model: A Comparative Analysis of High and Low-Performing Students},
journal = {Journal of Educational Computing Research},
volume = {0},
number = {0},
pages = {07356331241291174},
year = {2024p},
doi = {10.1177/07356331241291174},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241291174},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241291174},
abstract = {Debugging is essential for identifying and rectifying errors in programming, yet time constraints and students’ trivialization of errors often hinder progress. This study examines differences in debugging challenges and strategies among students with varying computational thinking (CT) competencies using weekly coding journals from an online undergraduate CT course. Participants used Scratch, a block-based programming language, and their journals from five assignments were analyzed using Term Frequency-Inverse Document Frequency and Structural Topic Modeling. High-performing students engaged with diverse topics and specific blocks tied to their weekly projects while low-performing students faced repetitive and broad challenges, such as understanding motion blocks and broadcast concepts. These patterns reveal that low-performing students struggle particularly during the ‘diagnose the fault’ phase of debugging, often hindering their progress in the final stage. Such challenges highlight the necessity for targeted educational interventions to improve the debugging proficiency and overall CT skills. The study underscores the importance of further research into students’ logical thinking processes during code review and debugging, suggesting the use of think-aloud protocols and detailed tracking of debugging practices for deeper insights. This research contributes to the field by showing that differentiated instruction and strategic support can enhance debugging skills across different student performance levels.}
}

@article{doi:10.1177/0735633115612785,
author = {Nikolaos Pellas and Efstratios Peroutseas},
title = {Gaming in Second Life via Scratch4SL: Engaging High School Students in Programming Courses},
journal = {Journal of Educational Computing Research},
volume = {54},
number = {1},
pages = {108–143},
year = {2016q},
doi = {10.1177/0735633115612785},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633115612785},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633115612785},
abstract = {While pedagogical and technological affordances of three-dimensional (3D) multiuser virtual worlds in various educational disciplines are largely well-known, a study about their effect on high school students’ engagement in introductory programming courses is still lacking. This case study presents students’ opinions about their participation in a 3D multiuser game-like environment, by harnessing Second Life in combination with the two-dimensional (2D) programming environment of Scratch4SL. Following a blended instructional format (face-to-face in a computer laboratory and supplementary online courses), 56 students utilizing Scratch4SL participated in this study, with a view to reduce the “steep learning curve” created during their first-time entrance into Second Life. This study identifies Papert’s theory of Constructionism as a potentially appropriate theoretical foundation for the development of an instructional framework, in order to assist students to coordinate and manage learning materials with other teammates, using their computational thinking skills in collaborative problem-based programming tasks. The study findings based on a mixed-method research (a close-ended questionnaire and an open-ended interview) indicated the effectiveness of this “constructionist-oriented” instructional process for students’ engagement to acquire or empower social, cognitive, higher-order, and computational thinking skills. Educational implications and recommendations for future research are also discussed.}
}

@article{doi:10.1111/j.1467-9280.1994.tb00625.x,
author = {Valerie F Reyna and Susan C Ellis},
title = {Fuzzy-Trace Theory and Framing Effects in Children’s Risky Decision Making},
journal = {Psychological Science},
volume = {5},
number = {5},
pages = {275–279},
year = {1994r},
doi = {10.1111/j.1467-9280.1994.tb00625.x},
URL = {https://doi-org.crai.referencistas.com/10.1111/j.1467-9280.1994.tb00625.x},
eprint = {https://doi-org.crai.referencistas.com/10.1111/j.1467-9280.1994.tb00625.x},
abstract = {Traditional theories of cognitive development predict that children progress from intuitive to computational thinking, whereas fuzzy-trace theory makes the opposite prediction To evaluate these alternatives, framing problems were administered to preschoolers, second graders, and fifth graders Consistent with fuzzy-trace theory, results indicated (a) that younger children focused on quantitative differences between outcomes and did not exhibit framing effects (risk avoidance for gains, risk seeking for losses) and (b) that older children assimilated these quantitative differences and displayed framing effects}
}

@article{doi:10.1177/1464884914545729,
author = {Scott Rodgers},
title = {Foreign objects? Web content management systems, journalistic cultures and the ontology of software},
journal = {Journalism},
volume = {16},
number = {1},
pages = {10–26},
year = {2015s},
doi = {10.1177/1464884914545729},
URL = {https://doi-org.crai.referencistas.com/10.1177/1464884914545729},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1464884914545729},
abstract = {Research on ‘digital’ journalism has focused largely on online news, with comparatively less interest in the longer-term implications of software and computational technologies. Drawing upon a 6-year study of the Toronto Star, this article provides an account of TOPS, an in-house web content management system which served as the backbone of thestar.com for 6 years. For some, TOPS was a successful software innovation, while for others, a strategic digital ‘property’. But for most journalists, it was slow, deficient in functionality, aesthetically unappealing and cumbersome. Although several organizational factors can explain TOPS’ obstinacy, I argue for particular attention to the complex ontology of software. Based on an outline of this ontology, I suggest software be taken seriously as an object of journalism, which implies acknowledging its partial autonomy from human use or authorization, accounting for its ability to mutate indefinitely and analysing its capacity to encourage forms of ‘computational thinking’.}
}

@article{doi:10.1177/14780771221139911,
author = {Dhanashree Sardeshpande and Vasudha Gokhale},
title = {“Legibility” a product of obligatory processes in parametric architectural design: A study of implications of associative modeling on design thinking in a parametric architectural design studio},
journal = {International Journal of Architectural Computing},
volume = {20},
number = {4},
pages = {728–741},
year = {2022t},
doi = {10.1177/14780771221139911},
URL = {https://doi-org.crai.referencistas.com/10.1177/14780771221139911},
eprint = {https://doi-org.crai.referencistas.com/10.1177/14780771221139911},
abstract = {In a problem-based, digital-intensive learning environment, the increased proliferation of computational tools used for architectural design has led to a fundamental transformation in architectural studios. Many studies have shown that this has significantly led to the change in cognition of design environments in academia. Design decisions are made through a recursive process that is cyclically refined by allowing constant feedback and testing. This paper represents an observational study with an aim to understand the impact of digital mediums on design processes and design outcomes focusing on associative modeling using VPL. It contextualizes the difference, the associative modeling system as a parametric subset brings to design thinking when used as a medium to explore architectural design. It analyzes specific attributes of associative modeling, otherwise native to computational thinking, that contribute to the legibility of the design process. The paper demonstrates how associative modeling allows the design process to be examined and edited at any stage during and even after algorithmic development, bringing in flexibility. It is argued that digital design tool affordances enable students to develop multilayered and more structured design logic that augments cognition bringing more legibility to the design thinking process.}
}

@article{doi:10.1177/1478210319894785,
author = {Henrik Stigberg and Susanne Stigberg},
title = {Teaching programming and mathematics in practice: A case study from a Swedish primary school},
journal = {Policy Futures in Education},
volume = {18},
number = {4},
pages = {483–496},
year = {2020u},
doi = {10.1177/1478210319894785},
URL = {https://doi-org.crai.referencistas.com/10.1177/1478210319894785},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1478210319894785},
abstract = {Programming and computational thinking have emerged as compulsory skills in elementary school education. In 2018, Sweden has integrated programming in mathematics education with the rationale that it fosters problem solving and logical thinking skills and motivates students to learn mathematics. We investigated how teachers introduce programming in mathematics education in a Swedish primary school using an explorative case study. We followed four mathematics teachers during the first semester in which programming was mandatory. They taught second-, sixth- and ninth-grade students. Our contributions are threefold: we provide an account of how programming is taught in mathematics education; we discuss how teachers reflect on the challenge of teaching programming in mathematics; and we report on students’ understanding of programming and their view on the relationship between programming and mathematics.}
}

@article{doi:10.1177/1470412920964905,
author = {Wanda Strauven},
title = {Sewing machines and weaving looms: a media archaeological encounter between fashion and film},
journal = {Journal of Visual Culture},
volume = {19},
number = {3},
pages = {362–377},
year = {2020v},
doi = {10.1177/1470412920964905},
URL = {https://doi-org.crai.referencistas.com/10.1177/1470412920964905},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1470412920964905},
abstract = {This article proposes thinking of media archaeology as an operating table upon which historical, material and technological interconnections between fashion and film are made. By exploring how early cinema and digital film can be coupled to textile as technology, more specifically through the mechanisms of the sewing machine and the Jacquard loom, it extends the historical span from the mid-1890s, with the invention of cinema as projection, to the early 1800s, when computational thinking was successfully implemented as weaving technique. Instead of focusing on film and fashion as means of visual representation, the author relies on the concept of inscription for a better understanding of both cinema (as recording of light and movement) and textile (with its various thread techniques of weaving, stitching, knitting, etc.).}
}

@article{doi:10.1177/0735633117746747,
author = {Meng-Jung Tsai and Ching-Yeh Wang and Po-Fen Hsu},
title = {Developing the Computer Programming Self-Efficacy Scale for Computer Literacy Education},
journal = {Journal of Educational Computing Research},
volume = {56},
number = {8},
pages = {1345–1360},
year = {2019w},
doi = {10.1177/0735633117746747},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633117746747},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633117746747},
abstract = {Computer programming has been gradually emphasized in recent computer literacy education and regarded as a requirement for all middle school students in some countries. To understand young students’ perceptions about their own learning in computer programming, this study aimed to develop an instrument, Computer Programming Self-Efficacy Scale (CPSES), for all students above middle school levels. Based on Berland and Lee’s computational thinking framework, this study developed the CPSES items at a literacy level and finally the instrument included the five subscales: Logical Thinking, Algorithm, Debug, Control, and Cooperation. An exploratory factor analysis and reliability tests were conducted in this study. The reliability alpha was .96 for the overall scale, and ranged from .84 to .96 for the subscales. This study also confirmed the positive correlation between computer programming experience and computer programming self-efficacy. In addition, for low- and middle-experienced learners, significant gender differences were found in two subscales: Algorithm and Debug. The CPSES can be applied as an evaluation tool in computer education, robotics education, as well as integrated STEM or STEAM education in which computer programming was regarded as a part of computer literacy.}
}

@article{doi:10.1177/1478077117734660,
author = {Tuğrul Yazar},
title = {Revisiting Parquet Deformations from a computational perspective: A novel method for design and analysis},
journal = {International Journal of Architectural Computing},
volume = {15},
number = {4},
pages = {250–267},
year = {2017x},
doi = {10.1177/1478077117734660},
URL = {https://doi-org.crai.referencistas.com/10.1177/1478077117734660},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1478077117734660},
abstract = {Parquet Deformation is an architectural studio exercise introduced by William Huff in 1960s. It aims to improve students’ reasoning of spatiotemporal variation by utilizing sequential shapeshifting of patterns. This article examines the outcomes of this educational research from a perspective of design computing with a purpose to remark its pedagogical significance. A multilayered reading about the exercise will reveal its historical, theoretical, and artistic backgrounds. Then the common structural elements and different construction approaches are explained along with a novel design and analysis method. The proposed method embeds variations of two-dimensional pattern deformations on a third dimension. It enables various analyses such as the measurement of regularity and locating the attractor points. This study is expected to exemplify how computational thinking and new digital tools change the way designers would approach to such systematic compositions.}
}

@article{doi:10.1177/07356331231209773,
author = {Huiyan Ye and Oi-Lam Ng and Zhihao Cui},
title = {Conceptualizing Flexibility in Programming-Based Mathematical Problem-Solving},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {594–619},
year = {2024y},
doi = {10.1177/07356331231209773},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231209773},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231209773},
abstract = {Computational thinking (CT) has received much attention in mathematics education in recent years, and researchers have begun to experiment with the integration of CT into mathematics education to promote students’ CT and mathematical thinking (MT) development. However, there is a lack of empirical evidence and new theoretical perspectives on the mechanisms of interaction between CT and MT. To address this research gap, this study analyses the participants’ thinking processes in solving programming-based mathematical problems from a flexibility perspective, focusing on the interplay between computational and mathematical thinking, that is, how CT and MT work together to influence and determine the problem-solver’s choice of solution strategy. Using data collected from a large design-based study, we summarise two types of flexibility and six subtypes of flexibility demonstrated by participants in the programming-based mathematical problem-solving process using thematic analysis. These different types of flexibility provide researchers and mathematics educators with new theoretical perspectives to examine the interplay of CT and MT. Findings will also contribute toward student learning characteristics in programming-based mathematical problem-solving to sketch the big picture of how CT and MT emerge in complementary or mismatching ways.}
}

