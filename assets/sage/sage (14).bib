@article{doi:10.1177/07356331231165099,
author = {Yousri Attia Mohamed Abouelenein and Mohamed Ali Nagy Elmaadaway},
title = {Impact of Teaching a Neuro-Computerized Course Through VLE to Develop Computational Thinking Among Mathematics Pre-service Teachers},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {6},
pages = {1175–1206},
year = {2023a},
doi = {10.1177/07356331231165099},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231165099},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231165099},
abstract = {The current study aims to determine the effect of teaching a mechanic neuro-computerized course through virtual learning environments (VLE) to develop computational thinking among mathematics pre-service teachers. The neuro-computerized virtual learning environments (NCVLE) model was designed to be used to teach the mechanics course to third-year students of the mathematics department. To achieve the targeted learning outcomes, the study recruited (102) third-year students of the Faculty of Education and classified them into a control group of (50) students and an experimental group of (52) students. The experiment lasted for 14 weeks during one semester of the 2021-2022 academic year. The results agreed with most of what has been found from relevant literature and studies. Also, the results indicated that the NCVLE model played a vital role in the purposeful teaching, learning, and assessment processes and enhanced the learning of computational thinking.}
}

@article{doi:10.1177/0888406421992376,
author = {Emily C. Bouck and Phil Sands and Holly Long and Aman Yadav},
title = {Preparing Special Education Preservice Teachers to Teach Computational Thinking and Computer Science in Mathematics},
journal = {Teacher Education and Special Education},
volume = {44},
number = {3},
pages = {221–238},
year = {2021b},
doi = {10.1177/0888406421992376},
URL = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0888406421992376},
abstract = {Increasingly in K–12 schools, students are gaining access to computational thinking (CT) and computer science (CS). This access, however, is not always extended to students with disabilities. One way to increase CT and CS (CT/CS) exposure for students with disabilities is through preparing special education teachers to do so. In this study, researchers explore exposing special education preservice teachers to the ideas of CT/CS in the context of a mathematics methods course for students with disabilities or those at risk of disability. Through analyzing lesson plans and reflections from 31 preservice special education teachers, the researchers learned that overall emerging promise exists with regard to the limited exposure of preservice special education teachers to CT/CS in mathematics. Specifically, preservice teachers demonstrated the ability to include CT/CS in math lesson plans and showed understanding of how CT/CS might enhance instruction with students with disabilities via reflections on these lessons. The researchers, however, also found a need for increased experiences and opportunities for preservice special education teachers with CT/CS to more positively impact access for students with disabilities.}
}

@article{doi:10.1177/07356331221098793,
author = {Shiau-Wei Chan and Chee-Kit Looi and Weng Kin Ho and Mi Song Kim},
title = {Tools and Approaches for Integrating Computational Thinking and Mathematics: A Scoping Review of Current Empirical Studies},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {8},
pages = {2036–2080},
year = {2023c},
doi = {10.1177/07356331221098793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221098793},
abstract = {The importance of computational thinking (CT) as a 21st-century skill for future generations has been a key consideration in the reforms of many national and regional educational systems. Much attention has been paid to integrating CT into the traditional subject classrooms. This paper describes a scoping review of learning tools for integrating CT and mathematics in current empirical studies published from 2015 to 2021. The review showed that most of the studies implemented CT-intensive Math-connected integration. Five major types of CT tools had been identified, i.e., digital tangibles, apps and games, programming languages, formative or summative assessments, and other technological tools. In many instances, the tools also provide functions of assessment of CT skills. The most assessed CT competencies were including algorithms and algorithmic thinking, abstraction, testing and debugging, loops, and sequences. Geometry and Measurement was the most assessed mathematics topic. Our scoping review is beneficial in the investigation of the literature on CT and mathematics education, as well as guides those who are interested in developing curriculum, programs, or assessments that involve the integration of CT and mathematics.}
}

@article{doi:10.1177/0735633119872908,
author = {Pao-Nan Chou},
title = {Using ScratchJr to Foster Young Children’s Computational Thinking Competence: A Case Study in a Third-Grade Computer Class},
journal = {Journal of Educational Computing Research},
volume = {58},
number = {3},
pages = {570–595},
year = {2020d},
doi = {10.1177/0735633119872908},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633119872908},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633119872908},
abstract = {This study investigated young children’s computational thinking (CT) development by integrating ScratchJr into a programming curriculum. Twelve third graders (six males and six females) voluntarily participated in an experiment-based computer class conducted at a public elementary school in Taiwan. This study adopted a case study methodology to investigate research questions in one specific case (8-week CT educational training). A one-group quasi-experimental pretest and posttest design with the support of qualitative observation was used to examine four research topics: CT competence progress, programming behaviors in a CT framework, factors influencing CT competence, and learning responses to CT training. The quantitative results indicated that students immersing in weekly programming projects significantly improved in terms of their CT competence, which was mostly retained 1 month after completion of the class. The programming behaviors indicated that students’ CT concepts (sequence, event, and parallelism) and practice (testing and debugging as well as reusing and remixing) significantly improved. Moreover, parents’ active involvement in take-home assignments influenced students’ long-term CT competence retention. The qualitative results indicated that students enjoyed using tablet computers to learn ScratchJr programming and demonstrated various leaning behaviors in a three-stage instructional design model.}
}

@article{doi:10.1177/0735633120979930,
author = {Zhihao Cui and Oi-Lam Ng},
title = {The Interplay Between Mathematical and Computational Thinking in Primary School Students’ Mathematical Problem-Solving Within a Programming Environment},
journal = {Journal of Educational Computing Research},
volume = {59},
number = {5},
pages = {988–1012},
year = {2021e},
doi = {10.1177/0735633120979930},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633120979930},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633120979930},
abstract = {In this paper, we explore the challenges experienced by a group of Primary 5 to 6 (age 12–14) students as they engaged in a series of problem-solving tasks through block-based programming. The challenges were analysed according to a taxonomy focusing on the presence of computational thinking (CT) elements in mathematics contexts: preparing problems, programming, create computational abstractions, as well as troubleshooting and debugging. Our results suggested that the challenges experienced by students were compounded by both having to learn the CT-based environment as well as to apply mathematical concepts and problem solving in that environment. Possible explanations for the observed challenges stemming from differences between CT and mathematical thinking are discussed in detail, along with suggestions towards improving the effectiveness of integrating CT into mathematics learning. This study provides evidence-based directions towards enriching mathematics education with computation.}
}

@article{doi:10.1177/07356331211060470,
author = {Jian-Wen Fang and Dan Shao and Gwo-Jen Hwang and Shao-Chen Chang},
title = {From Critique to Computational Thinking: A Peer-Assessment-Supported Problem Identification, Flow Definition, Coding, and Testing Approach for Computer Programming Instruction},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1301–1324},
year = {2022f},
doi = {10.1177/07356331211060470},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211060470},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211060470},
abstract = {Scholars believe that computational thinking is one of the essential competencies of the 21st century and computer programming courses have been recognized as a potential means of fostering students’ computational thinking. In tradition instruction, PFCT (problem identification, flow definition, coding, and testing) is a commonly adopted procedure to guide students to learn and practice computer programming. However, without further guidance, students might focus on learning the syntax of computer programming language rather than the concept of solving problems. This study proposes a peer-assessment-supported PFCT (PA-PFCT) approach for boosting students’ computer programming knowledge and computational thinking awareness. A quasi-experiment was conducted on a computer programming course in a high school to evaluate its influence on students’ learning achievement, computational thinking awareness, learning motivation, and self-efficacy. An experimental group of 51 students learned with the proposed approach, while a control group of 49 students learned with the traditional PFCT (T-PFCT) approach. The experimental results show that the proposed approach significantly enhanced the students’ computational thinking awareness, learning motivation, and self-efficacy, while not having significant impacts on their computer programming knowledge test scores.}
}

@article{doi:10.1177/07356331241251397,
author = {Qing Guo and Huan Li and Sha Zhu},
title = {Understanding the Characteristics of Students’ Behavioral Processes in Solving Computational Thinking Problems Based on the Behavioral Sequences},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {6},
pages = {1475–1508},
year = {2024g},
doi = {10.1177/07356331241251397},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241251397},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241251397},
abstract = {Previous research has not adequately explored students’ behavioral processes when addressing computational thinking (CT) problems of varying difficulty, limiting insights into students’ detailed CT development characteristics. This study seeks to fill this gap by employing gamified CT items across multiple difficulty levels to calculate comprehensive behavioral sequence quality indicators. And then, through latent profile analysis, we identified four distinct latent classes of behavioral process. We then examined the in-game performance differences among these classes, uncovering each class’s unique attributes. Class 1 students consistently demonstrated high-quality, efficient behavioral sequences regardless of item difficulty. In contrast, class 2 students applied significant cognitive effort and trial-and-error strategies, achieving acceptable scores despite low behavioral sequence quality. Class 3 students excelled in simpler items but faltered with more complex ones. Class 4 students displayed low motivation for challenging items, often guessing answers quickly. Additionally, we investigated the predictive value of students’ performance in gamified items and their behavioral process classes for their external CT test scores. The study finally elaborated on the theoretical implications for researchers and the practical suggestions for teachers in CT cultivation.}
}

@article{doi:10.1177/0735633121992480,
author = {Ting-Chia Hsu and Yi-Sian Liang},
title = {Simultaneously Improving Computational Thinking and Foreign Language Learning: Interdisciplinary Media With Plugged and Unplugged Approaches},
journal = {Journal of Educational Computing Research},
volume = {59},
number = {6},
pages = {1184–1207},
year = {2021h},
doi = {10.1177/0735633121992480},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633121992480},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633121992480},
abstract = {This study proposed plugged and unplugged approaches for young students to simultaneously improve their interdisciplinary learning performance in English and Computational Thinking (CT). The plugged approach involved adopting educational robots to enhance CT and to provide English vocabulary and sentence practice via a board game. The unplugged version of the educational board game involved using a conventional board game without a computer, although it was designed for practicing CT as well as some foreign language vocabulary and conversational sentences. The results show that both approaches were helpful for simultaneously improving the students’ English proficiency of the target vocabulary and sentences, and their CT competence. The students’ foreign language learning anxiety during the English conversation in the plugged game was significantly lower than that of the students playing the unplugged game. On one hand, the cooperation tendency of the CT scale improved significantly for the students playing the unplugged game. On the other hand, the critical thinking of the CT scale improved significantly for those using the plugged approach. This research provides an innovation development and evaluation for plugged and unplugged approaches.}
}

@article{doi:10.1177/07356331241240670,
author = {Linlin Hu},
title = {Exploring Gender Differences in Computational Thinking Among K-12 Students: A Meta-Analysis Investigating Influential Factors},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1358–1384},
year = {2024i},
doi = {10.1177/07356331241240670},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241240670},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241240670},
abstract = {This study employs meta-analysis to synthesize findings from 30 articles investigating gender differences in computational thinking (CT) among K-12 students. Encompassing 51 independent effect sizes, the meta-analysis involves a participant pool of 9181 individuals from various countries, comprising 4254 males and 4927 females. Results indicate statistically significant gender differences in CT (Hedges’s g = 0.091, p < .05), albeit with a modest effect size, revealing higher CT scores among males compared to females. Further moderation analyses unveil the multifaceted nature of these gender differences. Specifically, while gender differences become significant during high school, recent studies suggest a gradual reduction in CT gender differences with societal progress among K-12 students. Moreover, findings illustrate variations in gender differences across geographical regions. Notably, while the overall gender disparity in CT is non-significant in the “East Asia and Pacific” region, it widens in “North America” and “Europe”, with males scoring higher than females. Conversely, in “Europe and Central Asia”, such gender differences present inconsistent outcomes, with females scoring higher than males. Importantly, assessment tool type does not significantly influence gender differences. Lastly, this study offers recommendations to address CT gender gaps, providing valuable insights for promoting gender equality in education.}
}

@article{doi:10.1177/0735633119887187,
author = {Rotem Israel-Fishelson and Arnon Hershkovitz},
title = {Persistence in a Game-Based Learning Environment: The Case of Elementary School Students Learning Computational Thinking},
journal = {Journal of Educational Computing Research},
volume = {58},
number = {5},
pages = {891–918},
year = {2020j},
doi = {10.1177/0735633119887187},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633119887187},
abstract = {Persistence has proven to be a great challenge in online learning environments. Gaming and interactivity have been suggested as essential features in reducing dropout and increasing persistence in online learning. Yet in interactive game-based learning environments, persistence in moving forward in the game may come at the expense of investing in each of the game’s levels. That is, the motivation to complete the game may have a deleterious effect on learning at specific levels and hence on learning from the game in general. Therefore, we have chosen to focus on microlevel persistence (i.e., persistence during each component of the learning process). We study microlevel persistence in the context of acquiring computational thinking—the thought process of solving problems through abstraction—which is a key component of the new literacies needed for tomorrow’s citizens. In this study, we analyze data collected from an online, game-based learning environment (CodeMonkeyTM). The data document the activity of first to sixth graders (N = 2,040). Overall, we find that persistence is positively associated with difficulty and that the most determined learners were highly persistent across topics in achieving the best solution.}
}

@article{doi:10.1177/0022487117732317,
author = {Jacqueline Leonard and Monica Mitchell and Joy Barnes-Johnson and Adrienne Unertl and Jill Outka-Hill and Roland Robinson and Carla Hester-Croff},
title = {Preparing Teachers to Engage Rural Students in Computational Thinking Through Robotics, Game Design, and Culturally Responsive Teaching},
journal = {Journal of Teacher Education},
volume = {69},
number = {4},
pages = {386–407},
year = {2018k},
doi = {10.1177/0022487117732317},
URL = {https://doi-org.crai.referencistas.com/10.1177/0022487117732317},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0022487117732317},
abstract = {This article examines teacher preparation and teacher change in engineering and computer science education. We examined culturally responsive teaching self-efficacy (CRTSE), culturally responsive teaching outcome expectancy (CRTOE) beliefs, and attitudes toward computational thinking (CT) as teachers participated in one of three treatment groups: robotics only, game design only, or blended robotics/game design. Descriptive data revealed that CRTSE gain scores were higher in the robotics only and blended contexts than in the game design only context. However, CRTOE beliefs were consistent across all treatment groups. In regard to CT attitudes, teachers’ gain scores were higher in the game design only and blended contexts than in the robotics only context. In addition, there were differences by treatment group related to STEM (science, technology, engineering, and mathematics) practices, while cultural artifacts were evident in each learning environment. The results of this study reveal some variability by treatment type and inform future research on equitable practices in engineering and computer science education.}
}

@article{doi:10.1177/07356331221133822,
author = {Ana Melro and Georgie Tarling and Taro Fujita and Judith Kleine Staarman},
title = {What Else Can Be Learned When Coding? A Configurative Literature Review of Learning Opportunities Through Computational Thinking},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {4},
pages = {901–924},
year = {2023l},
doi = {10.1177/07356331221133822},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221133822},
abstract = {Underpinning the teaching of coding with Computational Thinking has proved relevant for diverse learners, particularly given the increasing demand in upskilling for today’s labour market. While literature on computing education is vast, it remains unexplored how existing CT conceptualisations relate to the learning opportunities needed for a meaningful application of coding in non-Computer Scientists’ lives and careers. In order to identify and organise the learning opportunities in the literature about CT, we conducted a configurative literature review of studies published on Web of Science, between 2006 and 2021. Our sample gathers 34 papers and was analysed on NVivo to find key themes. We were able to organise framings of CT and related learning opportunities into three dimensions: functional, collaborative, and critical and creative. These dimensions make visible learning opportunities that range from individual cognitive development to interdisciplinary working with others, and to active participation in a technologically evolving society. By comparing and contrasting frameworks, we identify and explain different perspectives on skills. Furthermore, the three-dimensional model can guide pedagogical design and practice in coding courses.}
}

@article{doi:10.1177/07356331221121106,
author = {Mohd Kamal Othman and Syazni Jazlan and Fatin Afiqah Yamin and Shaziti Aman and Fitri Suraya Mohamad and Nurfarahani Norman Anuar and Abdulrazak Yahya Saleh and Ahmad Azaini Abdul Manaf},
title = {Mapping Computational Thinking Skills Through Digital Games Co-Creation           Activity Amongst Malaysian Sub-urban Children},
journal = {Journal of Educational Computing Research},
volume = {61},
number = {2},
pages = {355–389},
year = {2023m},
doi = {10.1177/07356331221121106},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331221121106},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331221121106},
abstract = {This study investigates how digital game co-creation promotes Computational Thinking (CT) skills among children in sub-urban primary schools. Understanding how CT skills can be fostered in learning programming concepts through co-creating digital games is crucial to determine instructional strategies that match the young students’ interests and capacities. The empirical study has successfully produced a new checklist that can be used as a tool to describe the learning of CT skills when children co-create digital games. The checklist consists of 10 core CT skills: abstraction, decomposition, algorithmic thinking, generalisation, representation, socialisation, code literacy, automation, coordination, and debugging. Thirty-six 10–12 year-olds from sub-urban primary schools in Borneo participated in creating games in three separate eight-hour sessions. In addition, one pilot session with five participants was conducted. The game co-creation process was recorded to identify and determine how these young, inexperienced, untrained young learners collaborated while using CT skills. Analysis of their narratives while co-creating digital games revealed a pattern of using CT while developing the games. Although none of the groups demonstrated the use of all ten CTs, conclusively, all ten components of the CT were visibly present in their co-created digital games.}
}

@article{doi:10.1177/07356331231210560,
author = {Yu-Sheng Su and Shuwen Wang and Xiaohong Liu},
title = {Using Epistemic Network Analysis to Explore Primary School Students’ Computational Thinking in Pair Programming Learning},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {559–593},
year = {2024n},
doi = {10.1177/07356331231210560},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231210560},
abstract = {Pair programming (PP) can help improve students’ computational thinking (CT), but the trajectory of CT skills and the differences between high-scoring and low-scoring students in PP are unknown and need further exploration. In this study, a total of 32 fifth graders worked on Scratch tasks in 16 pairs. The group discourse of three learning topics (comprising 9 projects) was collected. After the audio files were transcribed, 1,303 conversations were obtained. They were analyzed via Epistemic Network Analysis (ENA) Webkit, which can reveal the trajectory of students’ CT development via analyzing codes of discourse related to CT in PP. Three Scratch learning topics were assessed based on the Dr. Scratch platform to acquire the level of students’ CT and to determine the low- and high-scoring groups. Results indicated that CT concepts and CT practices were always closely related in PP and CT practices, and CT perspectives could be gradually and closely related after a long period of CT training. A significant difference between the two groups’ CT structures was found. The high-scoring group had more fragments of CT practice and connecting of CT perspectives, while the low-scoring group showed more fragments of CT concepts and expressing of CT perspectives. This research provides insights into cultivating primary school students’ CT using Scratch in the context of PP. The findings can provide suggestions for instructors to design instructional interventions to facilitate students’ CT skills via PP learning. Instructors can improve CT skills by guiding students to constantly ask questions, and specifying the role swap between driver and navigator in PP. Besides, instructors could give more consideration to the development of CT perspectives, and especially the ability to question.}
}

@article{doi:10.1177/07356331241227793,
author = {Chen Sun and Stephanie Yang and Betsy Becker},
title = {Debugging in Computational Thinking: A Meta-analysis on the Effects of Interventions on Debugging Skills},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {4},
pages = {1087–1121},
year = {2024o},
doi = {10.1177/07356331241227793},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241227793},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241227793},
abstract = {Computational thinking (CT), an essential 21st century skill, incorporates key computer science concepts such as abstraction, algorithms, and debugging. Debugging is particularly underrepresented in the CT training literature. This multi-level meta-analysis focused on debugging as a core CT skill, and investigated the effects of various debugging interventions. Moderator analyses revealed which interventions were effective, in which situations, and for what kind of learner. A significant overall mean effect of debugging interventions ( = 0.64, CI = (0.32, 0.96), p < .001), was found based on 62 effect sizes from 18 source articles. Significant between-studies variation indicated that true effects could range from −0.54 to 1.82. In addition, sensitivity analyses and checks on confounding provided further understandings of intervention features and their impacts. Interventions using enhanced debuggers and systematic instruction were particularly effective in fostering debugging skills. Debugging intervention effects varied by participant population and potentially by publication type. Moreover, debugging interventions had impact regardless of how debugging skills were measured, programming medium used, control-group type, and whether the study was randomized. Future studies should investigate the best practices for improving debugging abilities for whom and under what circumstances.}
}

@article{doi:10.1177/07356331211035182,
author = {Lihui Sun and Linlin Hu and Danhua Zhou},
title = {Single or Combined? A Study on Programming to Promote Junior High School Students’ Computational Thinking Skills},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {2},
pages = {283–321},
year = {2022p},
doi = {10.1177/07356331211035182},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211035182},
abstract = {In this work, we studied the influence of different programming approaches on the development of students’ computational thinking (CT) skills, the programming experience and gender differences in CT development were also discussed. A total of 158 junior high school students and one teacher participated in the study over 5 months. The sample students were divided into four experimental groups in four single or combined programming approaches (i.e., plugged-in, unplugged, unplugged first, and plugged-in first) and one control group without programming. Data sources included the results of four CT tests, as well as interviews with the teacher and surveys with 24 representative participants. The results showed that the four programming approaches can effectively improve students’ CT skills and can be retained after two months. Among them, the form of implementing unplugged activities before plugged-in can most effectively improve CT skills, and can better weaken the impact of previous programming experience. Finally, the qualitative analysis results provided insights into the process of programming and CT education. These findings will provide implications for the introduction of CT in junior high school, and help expand students’ participation in computing.}
}

@article{doi:10.1177/07356331231225269,
author = {Lihui Sun and Junjie Liu},
title = {Effects of Gamified Python Programming on Primary School Students’ Computational Thinking Skills: A Differential Analysis of Gender},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {3},
pages = {846–874},
year = {2024q},
doi = {10.1177/07356331231225269},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231225269},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231225269},
abstract = {Computational thinking (CT), as a new future-oriented literacy, has gained attention at the basic education level. Graphical programming is the common way to develop CT in primary students, but this drag-and-drop programming may weaken students’ understanding of programming’s abstract concepts and code logic. Text-based programming approaches can solve the problems faced by graphical programming, but few studies have explored the impact of text-based programming on CT. Therefore, we conducted a quasi-experimental study with 98 6th graders to explore the impact of gamified Python programming on CT. The findings showed that CT skills, as well as abstraction and decomposition, pattern recognition and evaluation in CT sub-skills, were significantly higher with students in the experimental group than in the control group. Furthermore, we found that gamified Python programming enabled boys and girls to reach the same level of CT skills. However, in terms of CT sub-skills, we found that gamified Python programming was more beneficial to the development of pattern recognition and evaluation skills for boys and abstraction and decomposition skills for girls. This demonstrated the effectiveness of gamified Python programming to improve primary students’ CT skills while clarifying the impact of gender and enriching research in the field of text-based programming.}
}

@article{doi:10.1177/07356331211051043,
author = {Meng-Jung Tsai and Francis Pingfan Chien and Silvia Wen-Yu Lee and Chung-Yuan Hsu and Jyh-Chong Liang},
title = {Development and Validation of the Computational Thinking Test for Elementary School Students (CTT-ES): Correlate CT Competency With CT Disposition},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1110–1129},
year = {2022r},
doi = {10.1177/07356331211051043},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211051043},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211051043},
abstract = {This study aimed to develop the Computational Thinking Test for Elementary School Students (CTT-ES) to assess young children’s CT competencies in non-programming contexts and also examine the relationship between CT competencies and CT dispositions. A survey including a pool of CTT-ES candidate items and the Computational Thinking Scale (CTS) was administered to 631 elementary school students. Rasch model of the Item Response Theory and the discrimination analysis of the Classical Testing Theory were conducted for item analyses. Pearson’s correlation analyses and hierarchical multiple regression analyses were used to examine the relationships between CTT-ES and CTS scores. The results showed that the final CTT-ES including 16 items had a good fitness, discrimination, and reliability to evaluate elementary students’ domain-general CT competencies. The convergent validity of CTT-ES was confirmed by its significant correlations with the CTS scores. The significant regression model not only showed students’ CT competencies can be predicted by their CT dispositions but also supported The Developmental Model of CT. This study provided a valid and reliable tool for assessing young children’s CT abilities. It also furthered our understanding about the developmental orders of CT abilities and contributed to the theoretical construction of CT.}
}

@article{doi:10.1177/07356331211039961,
author = {Ting-Ting Wu and Jian-Ming Chen},
title = {Combining Webduino Programming With Situated Learning to Promote Computational Thinking, Motivation, and Satisfaction Among High School Students},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {3},
pages = {631–660},
year = {2022s},
doi = {10.1177/07356331211039961},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211039961},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211039961},
abstract = {Many countries have incorporated computational thinking (CT) and programming languages into their science and technology courses. Students can improve their CT ability by learning programming languages. Moreover, situated learning enables students to generate knowledge and master problem-solving skills through interaction with situations. This study incorporated Webduino learning and the situated learning strategy into a programming course and analyzed its impact on high school students’ CT ability, learning motivation, and course satisfaction. A quasi-experimental research method was adopted, wherein the experimental group was subjected to the situated learning strategy and the control group was subjected to a traditional teaching method. The study results revealed that integrating Webduino programming with situated learning could effectively improve five categories of CT skills; moreover, the activity models of situated learning enhanced the value and expectation dimensions of learning motivation. In addition, satisfaction with the course content and self-identity slightly improved. However, because teachers were required to elaborate on stories to promote learner engagement with life situations, the time available for programming was limited. Thus, no significant difference was observed in teaching satisfaction.}
}

@article{doi:10.1177/07356331211057143,
author = {Zehui Zhan and Wenchang He and Xitian Yi and Shuyao Ma},
title = {Effect of Unplugged Programming Teaching Aids on Children’s Computational Thinking and Classroom Interaction: with Respect to Piaget’s Four Stages Theory},
journal = {Journal of Educational Computing Research},
volume = {60},
number = {5},
pages = {1277–1300},
year = {2022t},
doi = {10.1177/07356331211057143},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331211057143},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331211057143},
abstract = {This paper examined the effect of the Unplugged Programming Teaching Aids (UPTA) on students’ computational thinking and classroom interaction. A set of UPTA was created and used in a primary school in southern China. A total of 48 students aged 6–8 were assigned to two classes, with the same instructor and learning materials, but only the treatment group was provided with the UPTA. Both groups were tested on computational thinking ability, children’s concrete operation status, degree of ego-centricity, and in-classroom interaction. Results indicated that the children aged 6–8 years old could classify things according to two kinds of criteria at the same time, but their cognitive style was still ego-centered and they found it difficult to deal with problems from a third-party perspective, no matter whether in the treatment group or the control group. However, students in the treatment group achieved significantly higher scores on the test of computational thinking and were more engaged in the classroom interaction patterns. These findings provide evidence of the positive effect of the UPTA on promoting children’s computational thinking by guiding them to decompose and solve problems, as well as enhancing their interaction and communication in the classroom, so as to transform from simple imitation to collaborative inquiry.}
}

