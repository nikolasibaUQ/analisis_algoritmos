@article{doi:10.1177/0162643420978564,
author = {Emily C. Bouck and Aman Yadav},
title = {Providing Access and Opportunity for Computational Thinking and Computer Science to Support Mathematics for Students With Disabilities},
journal = {Journal of Special Education Technology},
volume = {37},
number = {1},
pages = {151–160},
year = {2022a},
doi = {10.1177/0162643420978564},
URL = {https://doi-org.crai.referencistas.com/10.1177/0162643420978564},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0162643420978564},
abstract = {The ideas of computational thinking (CT) and computer science (CS) are increasingly being integrated into K-12 education. Yet, insufficient attention exists regarding access and exposure of CT and CS for students with disabilities. In this Technology in Action, the authors sought to present an argument—as well as actual activities—for teachers to start to expose and engage students with disabilities in CT and CS. Through the presentation of case studies as well as other non-case situated activities, practical ideas, and steps for integrating CT and CS in mathematics teaching and learning for students with disabilities are presented.}
}

@article{doi:10.1177/1326365X20970421,
author = {Kayt Davies},
title = {Why I Do Not Talk About Computational Thinking in Journalism Classes: Sorry (Not Really Sorry)},
journal = {Asia Pacific Media Educator},
volume = {30},
number = {2},
pages = {234–242},
year = {2020b},
doi = {10.1177/1326365X20970421},
URL = {https://doi-org.crai.referencistas.com/10.1177/1326365X20970421},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1326365X20970421}
}

@article{doi:10.1177/0735633120973432,
author = {Shlomit Hadad and Tamar Shamir-Inbal and Ina Blau and Eynat Leykin},
title = {Professional Development of Code and Robotics Teachers Through Small Private Online Course (SPOC): Teacher Centrality and Pedagogical Strategies for Developing Computational Thinking of Students},
journal = {Journal of Educational Computing Research},
volume = {59},
number = {4},
pages = {763–791},
year = {2021c},
doi = {10.1177/0735633120973432},
URL = {https://doi-org.crai.referencistas.com/10.1177/0735633120973432},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0735633120973432},
abstract = {This study explored (1) pedagogical strategies in Educational Coding and Robotics (ECR) learning which can develop computational thinking of students and (2) the degree of teacher centrality in the ECR classroom. In addition, we investigated (3) the added value of the Small Private Online Course (SPOC) to teacher professional development (TPD). We analyzed reflections of 80 in-service teachers on TPD through the SPOC (1,091 statements) and conducted semi-structured interviews with 13 of them one year after completing the course and teaching ECR in the classroom (328 statements). The most prominent strategies immediately after the TPD were constructing learning experiences, tinkering & debugging, and interdisciplinary learning, while one year later, experiential learning and collaborative learning were more common. Regarding the degree of teacher centrality, a year after teaching ECR curriculum the teachers had a significantly higher percentage of statements reflecting their role as a guide-on-the-side and as a partner of students in the learning process. Regarding the contribution of the SPOC for TPD, teacher statements revealed significantly more benefits than challenges in both points of time. Interestingly, the same categories emerged bottom-up as benefits and challenges: a variety of control dimensions, independent learning, learning and knowledge management and collaboration. Implications for educational theory and ECR practice are discussed.}
}

@article{doi:10.1177/21582440231217715,
author = {Tsung-Chih Hsiao and Ya-Hsueh Chuang and Chien-Yun Chang and Tzer-Long Chen and Hong-Bo Zhang and Jhih-Chung Chang},
title = {Combining Building Block Process With Computational Thinking Improves Learning Outcomes of Python Programming With Peer Assessment},
journal = {Sage Open},
volume = {13},
number = {4},
pages = {21582440231217716},
year = {2023d},
doi = {10.1177/21582440231217715},
URL = {https://doi-org.crai.referencistas.com/10.1177/21582440231217715},
eprint = {https://doi-org.crai.referencistas.com/10.1177/21582440231217715},
abstract = {The capability of computer programming language logic is one of the basics of technical education. How to improve students “interest in program logic design and help overcome students” fears of coding has become vital for educators. Cultivating practical talents with information technology application and basic programming development will become one of the important topics in the department of information related science. The objective of this research is to improve the ability of learning basic programming courses by using Zuvio interactive software. Zuvio employs the mathematical logic of computational thinking to analyze problems and enhance learners’ interest in learning programming skills through a graphical interface tool with building blocks. It uses innovative interactive teaching to use peer and self-assessment to study the content of the course. Zuvio improves the design ability of different groups of class learning Python programming. In line with the innovative teaching policy of the schools and the current stage of the learner’s learning model, learning effectiveness can be achieved. The research results were analyzed by midterm and final experimental group scores, and the progress of the experimental group’s scores was examined through descriptive statistics. The average and standard deviation of the assessment were used to analyze the progress of the experimental group students in the programming course. In the classroom, assessment criteria were set up as the basis for peer assessment scoring. After the midterm and final exams, the teacher assessment and peer assessment scores were analyzed for cognitive differences, and possible learning differences were analyzed. The students’ professional ability was examined to see if it met the professional standards required by the course, and whether innovative teaching methods could improve the learning outcomes of learners with different professional backgrounds in Python programming.}
}

@article{doi:10.1177/07356331241236882,
author = {Chung-Yuan Hsu and Meng-Jung Tsai},
title = {Predicting Robotics Pedagogical Content Knowledge: The Role of Computational and Design Thinking Dispositions via Teaching Beliefs},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {5},
pages = {1159–1181},
year = {2024e},
doi = {10.1177/07356331241236882},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241236882},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241236882},
abstract = {This research aimed to investigate the structural relationships among teachers’ computational thinking (CT), design thinking (DT), robotics teaching beliefs, and robotics pedagogical content knowledge (RPCK). A total of 98 in-service and pre-service teachers who participated in a robotics teaching professional development workshop served as the sample of the study. A survey including the Computational Thinking Scale, the Design Thinking Disposition Scale, the Robotics Teaching Beliefs Scale and the Technological Pedagogical Content Knowledge–Robotics Scale was conducted after the workshop. A confirmatory factor analysis was employed to validate the measurement constructs, and Partial Least Squares - Structural Equation Modeling (PLS-SEM) analysis was utilized to examine the relationships among the factors. The results revealed that both CT and DT dispositions could positively predict teachers’ robotics teaching beliefs, which subsequently predicted their RPCK. Moreover, a direct positive relationship between CT and RPCK was identified, while such a relationship was not evident for DT. The model demonstrates the critical role of CT in shaping teachers’ beliefs and pedagogical strategies of robotics teaching, and provides insights into the indirect influence of DT. Finally, the Model of Robotics Teaching Professional Development (MRTPD) was proposed to profile how to promote teachers’ pedagogical content knowledge of robotics teaching from their CT and DT dispositions.}
}

@article{doi:10.1177/10534512211024939,
author = {Amy Hutchison and Anya S. Evmenova},
title = {Planning Computer Science Instruction for Students With High-Incidence Disabilities},
journal = {Intervention in School and Clinic},
volume = {57},
number = {4},
pages = {262–267},
year = {2022f},
doi = {10.1177/10534512211024939},
URL = {https://doi-org.crai.referencistas.com/10.1177/10534512211024939},
eprint = {https://doi-org.crai.referencistas.com/10.1177/10534512211024939},
abstract = {States increasingly are adopting computer science standards to help students develop coding and computational thinking skills. In an effort to support teachers in introducing computer science content to their students with high-incidence disabilities, a new model, computer science integration planning plus universal design for learning (CSIP+), offers ways to integrate computational thinking and coding into content area instruction. This column presents an example of how a teacher might implement the CSIP+ model when designing instruction accessible to all learners. Guiding questions to support teachers at each phase of the planning cycle are provided.}
}

@article{doi:10.1177/0040059915594790,
author = {Maya Israel and Quentin M. Wherfel and Jamie Pearson and Saadeddine Shehab and Tanya Tapia},
title = {Empowering K–12 Students With Disabilities to Learn Computational Thinking and Computer Programming},
journal = {TEACHING Exceptional Children},
volume = {48},
number = {1},
pages = {45–53},
year = {2015g},
doi = {10.1177/0040059915594790},
URL = {https://doi-org.crai.referencistas.com/10.1177/0040059915594790},
eprint = {https://doi-org.crai.referencistas.com/10.1177/0040059915594790}
}

@article{doi:10.1177/07356331231211916,
author = {Hsin-Yu Lee and Ting-Ting Wu and Chia-Ju Lin and Wei-Sheng Wang and Yueh-Min Huang},
title = {Integrating Computational Thinking Into Scaffolding Learning: An Innovative Approach to Enhance Science, Technology, Engineering, and Mathematics Hands-On Learning},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {2},
pages = {431–467},
year = {2024h},
doi = {10.1177/07356331231211916},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231211916},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231211916},
abstract = {Science, Technology, Engineering, and Mathematics (STEM) education is essential for developing future-ready learners in both secondary and higher education levels. However, as students transition to higher education, many encounter challenges with independent learning and research. This can negatively impact their Higher-Order Thinking Skills (HOTS), engagement, and practical expertise. This study introduces a solution: Computational Thinking Scaffolding (CTS) in the Jupyter Notebook environment, designed to enhance STEM education at the tertiary level. CTS incorporates five phases: Decomposition, Pattern Recognition, Abstraction, Algorithm Design, and Evaluation. Utilizing a quasi-experimental method, we assessed the impact of CTS on the HOTS, engagement, and practical skills of undergraduate and postgraduate students. Our findings hold substantial relevance for university educators, academic advisors, and curriculum designers aiming to enhance students’ HOTS and hands-on capabilities in STEM disciplines. The results validate the effectiveness of CTS in elevating tertiary STEM learning outcomes, and they spotlight the adaptability of the Jupyter Notebook as a valuable tool in higher education. In conclusion, our research underscores the merits of CTS for improving outcomes in higher STEM education and sets a benchmark for future endeavors in this domain.}
}

@article{doi:10.1177/14639491211033663,
author = {Joohi Lee and Candace Joswick and Kathryn Pole and Robin Jocius},
title = {Algorithm design for young children},
journal = {Contemporary Issues in Early Childhood},
volume = {23},
number = {2},
pages = {198–202},
year = {2022i},
doi = {10.1177/14639491211033663},
URL = {https://doi-org.crai.referencistas.com/10.1177/14639491211033663},
eprint = {https://doi-org.crai.referencistas.com/10.1177/14639491211033663},
abstract = {Algorithms are the essence of computational thinking, which refers to a set of problem-solving processes that help children become logical thinkers in this increasingly digital society. It is important for teachers of young children to carefully plan and implement algorithm design tasks that involve repeated step-by-step procedures to build strong foundational computational thinking skills. In this article, the authors present algorithm tasks, including following a recipe, creating a treasure map, modeling how to perform a task, and sharing a routine, which can be easily integrated in the daily activities in early childhood classrooms. Fostering young children’s aptitude for algorithm-specific thinking-and-doing processes creates a foundation for logical thinking.}
}

@article{doi:10.1177/07356331241292767,
author = {Nikolaos Pellas},
title = {Enhancing Computational Thinking, Spatial Reasoning, and Executive Function Skills: The Impact of Tangible Programming Tools in Early Childhood and Across Different Learner Stages},
journal = {Journal of Educational Computing Research},
volume = {0},
number = {0},
pages = {07356331241292767},
year = {2024j},
doi = {10.1177/07356331241292767},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241292767},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241292767},
abstract = {Tangible programming tools (TPTs) are promising teaching aids in programming courses due to their interactivity and ability to enhance early childhood students’ computational thinking, spatial reasoning, and executive function skills. However, it remains unclear whether TPTs support these skills simultaneously. This study examines the impact of TPTs on enhancing cognitive thinking skills among students at different developmental stages, with a focus on early childhood education. A quasi-experimental study with pre- and post-tests was conducted involving 82 preschoolers aged 5-7. Participants were categorized into three developmental stages (beginner, intermediate, advanced) based on their prior programming experience. A TPT called “Bee-bot Brushing Challenge: A Computational Adventure” was employed during a STEM summer camp program. The findings revealed significant improvements in students’ abstract thinking, problem decomposition, and spatial reasoning skills, particularly among beginners. Participants at intermediate levels showed notable improvement in algorithm design and efficiency. Results also indicate significant differences in cognitive flexibility and inhibitory control between groups, with advanced students outperforming beginners and intermediates while working memory remained unaffected. This research provides important evidence supporting the inclusion of TPTs in early childhood curricula to foster comprehensive cognitive development. It offers valuable insights for educators and policymakers in designing similar learning environments.}
}

@article{doi:10.1080/11356405.2017.1305075,
author = {José-Manuel Sáez-López and María-Luisa Sevillano-García},
title = {Sensors, programming and devices in Art Education sessions. One case in the context of primary education / Sensores, programación y dispositivos en sesiones de Educación Artística. Un caso en el contexto de Educación Primaria},
journal = {Culture and Education},
volume = {29},
number = {2},
pages = {350–384},
year = {2017k},
doi = {10.1080/11356405.2017.1305075},
URL = {https://doi-org.crai.referencistas.com/10.1080/11356405.2017.1305075},
eprint = {https://doi-org.crai.referencistas.com/10.1080/11356405.2017.1305075},
abstract = {The pedagogical integration of computing is interesting in educational contexts based on the contributions of Seymour Papert and Wing’s concept of computational thinking. Integrating arts in education can lead to the design of activities using Scratch combined with devices. The main goal is to evaluate the integration of computational thinking in art education making use of technological resources, sensor cards and minicomputers, with a student-centred pedagogical approach. This research assesses the results of a control group of 35 students and an experimental group of 109 students in four different schools, using Mann-Whitney’s U-test for independent samples assessing ‘Active Learning’, ‘computational concepts’ and ‘fun’ scales. Applying data triangulation, and consistent with design-based research, the results of interviews and focus groups reinforced the results obtained in the aforementioned test, providing validity to the study. There are advantages regarding student interest, motivation and commitment related to programming technologies in art and education, particularly pedagogical sessions with music. Handling devices, sensors and Raspberry Pi provides participating students with a factor of commitment and enthusiasm, with significant improvements. Working with coding and devices brings an additional advantage in the development of computational thinking and digital competence. The results show an increase in creativity and artistic competence related to the ability to create music from the activities and technological resources described in the technological intervention.}
}

@article{doi:10.1177/1461444820923674,
author = {Samantha Shorey and Benjamin Mako Hill and Samuel Woolley},
title = {From hanging out to figuring it out: Socializing online as a pathway to computational thinking},
journal = {New Media & Society},
volume = {23},
number = {8},
pages = {2327–2344},
year = {2021l},
doi = {10.1177/1461444820923674},
URL = {https://doi-org.crai.referencistas.com/10.1177/1461444820923674},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1461444820923674},
abstract = {Although socializing is a powerful driver of youth engagement online, platforms struggle to leverage social engagement to promote learning. We seek to understand this dynamic using a multi-stage analysis of over 14,000 comments on Scratch, an online platform designed to support learning about programming. First, we inductively develop the concept of “participatory debugging”—a practice in which users learn through the process of collaborative technical troubleshooting. Second, we use a content analysis to establish how common the practice is on Scratch. Third, we conduct a qualitative analysis of user activity over time and identify three factors that serve as social antecedents of participatory debugging: (1) sustained community, (2) identifiable problems, and (3) what we call “topic porousness” to describe conversations that are able to span multiple topics. We integrate these findings in a framework that highlights a productive tension between the desire to promote learning and the interest-driven sub-communities that drive user engagement in many new media environments.}
}

@article{doi:10.1177/1076217519880587,
author = {Del Siegle},
title = {There’s an App for That, and I Made It},
journal = {Gifted Child Today},
volume = {43},
number = {1},
pages = {64–71},
year = {2020m},
doi = {10.1177/1076217519880587},
URL = {https://doi-org.crai.referencistas.com/10.1177/1076217519880587},
eprint = {https://doi-org.crai.referencistas.com/10.1177/1076217519880587},
abstract = {The Thunkable online platform is an easy-to-use resource for creating apps for mobile devices. Computational thinking is at the heart of problem solving in computer science, and research suggests students’ computational thinking improves when they use simple block coding systems similar to the format used for Thunkable.}
}

@article{doi:10.1177/07356331231204653,
author = {Dan Sun and Chengcong Zhu and Fan Xu and Yan Li and Fan Ouyang and Miaoting Cheng},
title = {Transitioning From Introductory to Professional Programming in Secondary Education: Comparing Learners’ Computational Thinking Skills, Behaviors, and Attitudes},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {3},
pages = {647–674},
year = {2024n},
doi = {10.1177/07356331231204653},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231204653},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231204653},
abstract = {Although previous research has provided some insights into the effects of block-based and text-based programming modalities, there is a dearth of a detailed, multi-dimensional analysis of the transition process from different introductory programming modalities to professional programming learning. This study employed a quasi-experimental design to address this gap, involving 64 secondary school students in two groups. For the beginning five weeks, the first group used an introductory block-based programming environment, while the second group used an introductory text-based programming environment. Then, both groups transitioned to professional text-based programming for the subsequent eight weeks. The results showed that participants who transitioned from introductory text-based programming to professional text-based programming (1) significantly outperformed in computational thinking skills; (2) had more code-writing and debugging behaviors and fewer irrelevant behaviors, and (3) had more interactions with the instructor. No significant differences were observed between the two groups regarding enjoyment, confidence, and interest in programming. Drawing on these findings, this study proposes pedagogical implications that could facilitate the adoption of programming modalities within the broader context of STEM education.}
}

@article{doi:10.1177/21582440231205409,
author = {Fu-Hsing Tsai},
title = {Using a Physical Computing Project to Prepare Preservice Primary Teachers for Teaching Programing},
journal = {Sage Open},
volume = {13},
number = {4},
pages = {21582440231205410},
year = {2023o},
doi = {10.1177/21582440231205409},
URL = {https://doi-org.crai.referencistas.com/10.1177/21582440231205409},
eprint = {https://doi-org.crai.referencistas.com/10.1177/21582440231205409},
abstract = {The cultivation of computational thinking and programing education have gained prominence in K-12 education worldwide. Primary school teachers should be proficient in visual programing and using microcontrollers to teach programing courses. To cope with these trends, a learning activity was developed and implemented in Taiwan’s primary teacher education curriculum. The activity aimed to help preservice primary teachers learn about Scratch visual programing and micro:bit microcontroller boards by engaging in a physical computing project involving the design of an educational motion sensor game about energy. The results of the preliminary study found that the preservice primary teachers who participated in the activity were able to collaborate and develop motion sensor games suitable for primary school students. They also demonstrated significant improvements in their computational thinking concepts (t(10) = 3.13, p < .05) and energy knowledge test scores (t(10) = 2.74, p < .05). Furthermore, most participants expressed satisfaction with the activity, implying the activity’s feasibility for teacher education.}
}

@article{doi:10.1177/07356331241248686,
author = {Xiaojing Weng and Huiyan Ye and Yun Dai and Oi-lam Ng},
title = {Integrating Artificial Intelligence and Computational Thinking in Educational Contexts: A Systematic Review of Instructional Design and Student Learning Outcomes},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {6},
pages = {1640–1670},
year = {2024p},
doi = {10.1177/07356331241248686},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241248686},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241248686},
abstract = {A growing body of research is focusing on integrating artificial intelligence (AI) and computational thinking (CT) to enhance student learning outcomes. Many researchers have designed instructional activities to achieve various learning goals within this field. Despite the prevalence of studies focusing on instructional design and student learning outcomes, how instructional efforts result in the integration of AI and CT in students’ learning processes remains unclear. To address this research gap, we conducted a systematic literature review of empirical studies that have integrated AI and CT for student development. We collected 18 papers from four prominent research databases in the fields of education and AI technology: Web of Science, Scopus, IEEE, and ACM. We coded the collected studies, highlighting the students’ learning processes in terms of research methodology and context, learning tools and instructional design, student learning outcomes, and the interaction between AI and CT. The integration of AI and CT occurs in two ways: the integration of disciplinary knowledge and leveraging AI tools to learn CT. Specifically, we discovered that AI- and CT-related tools, projects, and problems facilitated student-centered instructional designs, resulting in productive AI and CT learning outcomes.}
}

@article{doi:10.1177/07356331231225468,
author = {Ting-Ting Wu and Lusia Maryani Silitonga and Budi Dharmawan and Astrid Tiara Murti},
title = {Empowering Students to Thrive: The Role of CT and Self-Efficacy in Building Academic Resilience},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {3},
pages = {816–845},
year = {2024q},
doi = {10.1177/07356331231225468},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331231225468},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331231225468},
abstract = {The relationship between computational thinking (CT) and academic self-efficacy for building students’ academic resilience—a trait crucial for problem-solving, peer relationships, and confidence development—was investigated. A mixed-methods approach was employed in a study involving 60 participants; half were given CT instruction and half were instructed traditionally. Quantitative data were analyzed using analysis of covariance and path analysis, while MAXQDA software was employed for qualitative interview data. The study found a positive correlation between CT instruction and academic self-efficacy with increased academic resilience, particularly in the experimental group, and identified key factors contributing to resilience. This study demonstrates the effectiveness of computational thinking (CT) and academic self-efficacy in enhancing academic performance, offering a new understanding of how these elements can be integrated into education to boost student resilience. It establishes a direct empirical link between CT instruction and increased academic self-efficacy, underscoring the value of specific teaching methodologies in fostering resilience. The findings are significant for educators, policymakers, and stakeholders in developing strategies to enhance students’ academic and personal success, thereby promoting their overall well-being. Recognizing the importance of CT and self-efficacy paves the way for customized educational programs that effectively support and empower students to thrive.}
}

@article{doi:10.1177/07356331241226459,
author = {Weipeng Yang},
title = {Coding With Robots or Tablets? Effects of Technology-Enhanced Embodied Learning on Preschoolers’ Computational Thinking and Social-Emotional Competence},
journal = {Journal of Educational Computing Research},
volume = {62},
number = {4},
pages = {938–960},
year = {2024r},
doi = {10.1177/07356331241226459},
URL = {https://doi-org.crai.referencistas.com/10.1177/07356331241226459},
eprint = {https://doi-org.crai.referencistas.com/10.1177/07356331241226459},
abstract = {Computational Thinking (CT) is essential for developing creativity, problem-solving, and digital competence in the 21st century. Coding tools like robotic toys and tablet apps have become popular in early childhood education to support CT development, but there is a debate on which tool is more effective. Little evidence exists on the effect of coding on children’s Social-Emotional Competence (SEC), which is crucial for lifelong development and extends beyond cognitive development. This experimental study aimed to compare the effectiveness of two 9-week programs on promoting 73 preschool children’s CT and SEC, one using coding robots and the other using coding apps. The results showed that children who participated in the Coding Robot Program had higher CT scores than those in the Coding App Program, after controlling for age, gender, family socioeconomic status, and baseline CT scores. While the SEC scores showed no substantial disparities between the groups, it was revealed that the initial performance levels moderated the intervention effects on emotional regulation and overall SEC. This suggests that the Coding Robot Program could be especially advantageous for a subset of children who initially have difficulties with emotional regulation and social skills. Implications of this study are presented for research and practice.}
}

@article{doi:10.1177/02103702241253407,
author = {Yue Zeng and Weipeng Yang and Alfredo Bautista},
title = {Developing young children’s computational thinking through programming with a hybrid kit / Desarrollo del pensamiento computacional infantil a través de la programación con un kit híbrido},
journal = {Journal for the Study of Education and Development},
volume = {47},
number = {2},
pages = {408–441},
year = {2024s},
doi = {10.1177/02103702241253407},
URL = {https://doi-org.crai.referencistas.com/10.1177/02103702241253407},
eprint = {https://doi-org.crai.referencistas.com/10.1177/02103702241253407},
abstract = {Fostering young children’s computational thinking (CT) has garnered global interest as it aligns with the cultivation of twenty-first-century skills. Previous studies have focused on physical, virtual and hybrid kits with virtual programming blocks, but rarely explored the use of hybrid kits that combine virtual sprites and physical programming environments. We conducted a quasi-experimental study to investigate the effect of using a hybrid programming kit on young children’s CT. Furthermore, we explored the characteristics of children’s programming engagement and the instructional strategies employed by teachers through video analysis and interviews. The results showed that: (1) children’s CT in the experimental group significantly improved, compared to that of peers in the control group; (2) children’s programming behaviour demonstrated a change from ‘action preceding thought’ to ‘thought preceding action’ and from ‘relying on trial and error’ to ‘active debugging’ with the support of teachers; (3) teachers used multiple strategies to support young children’s programming. These findings further indicate the importance of introducing programming in early childhood education and emphasize the critical role that teachers play in supporting young children’s learning of programming.}
}

@article{doi:10.1177/01626434221116077,
title = {Corrigendum to “Providing Access and Opportunity for Computational Thinking and Computer Science to Support Mathematics for Students With Disabilities”},
journal = {Journal of Special Education Technology},
volume = {38},
number = {3},
pages = {417–417},
year = {2023t},
doi = {10.1177/01626434221116077},
URL = {https://doi-org.crai.referencistas.com/10.1177/01626434221116077},
eprint = {https://doi-org.crai.referencistas.com/10.1177/01626434221116077}
}

